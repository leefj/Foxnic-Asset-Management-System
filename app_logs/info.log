14:57:22.453 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarting,55] - Starting WrapperAllApp on lankLdeMacBook-Pro.local with PID 60898 (/Users/lankl/IdeaProjects/eam/platform/wrapper/wrapper-all/target/classes started by lankl in /Users/lankl/IdeaProjects/eam)
14:57:22.461 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStartupProfileInfo,648] - No active profile set, falling back to default profiles: default
14:57:25.841 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [setApplicationContext,52] - service-all(default) is ready on port 8089
14:57:35.169 [main] - [] - INFO  c.d.p.f.d.DAOConfig - [primaryDAO,91] - dao is ready : 

user=root
url=jdbc:mysql://121.43.103.102:3306/foxnic?useSSL=false&serverTimezone=Hongkong&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowPublicKeyRetrieval=true&tinyInt1isBit=false

14:57:35.243 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,213] - TQL Scan Complete
14:57:35.244 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,227] - default sql count : 41
dm sql count : 3

14:57:35.298 [main] - [] - INFO  o.g.f.w.f.m.AuthorityMenuManager - [initDataIf,92] - 
maven module authorities : auto_perm,changes,hr,basic_permissions,example,eam,zbx,system_monitor,common_system,oa,docs,sys_file:mngr,eam_employee,eam_equipment_mgr,kb,data_backup,pcm,wms,oauth,public_resource,bpm,mobile_application,hrm,dp_rule:mngr,contract,ops,system_config,system_ops,infrastructure,sys_tpl_file:mngr,job,bpm-mgr,workorder
configed module authorities : 
applied module authorities : auto_perm,changes,hr,basic_permissions,example,eam,zbx,system_monitor,common_system,oa,docs,sys_file:mngr,eam_employee,eam_equipment_mgr,kb,data_backup,pcm,wms,oauth,public_resource,bpm,mobile_application,hrm,dp_rule:mngr,contract,ops,system_config,system_ops,infrastructure,sys_tpl_file:mngr,job,bpm-mgr,workorder

14:57:35.477 [main] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select id,authority,hierarchy from sys_menu where deleted=0 AND authority IN (... ] ━━━━━ 
┣ 语句：select id,authority,hierarchy from sys_menu where deleted=0 AND authority IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"pcm","PARAM_18":"wms","PARAM_19":"oauth","PARAM_31":"job","PARAM_10":"oa","PARAM_32":"bpm-mgr","PARAM_11":"docs","PARAM_33":"workorder","PARAM_12":"sys_file:mngr","PARAM_13":"eam_employee","PARAM_14":"eam_equipment_mgr","PARAM_15":"kb","PARAM_16":"data_backup","PARAM_30":"sys_tpl_file:mngr","PARAM_9":"common_system","PARAM_8":"system_monitor","PARAM_7":"zbx","PARAM_6":"eam","PARAM_5":"example","PARAM_4":"basic_permissions","PARAM_3":"hr","PARAM_2":"changes","PARAM_1":"auto_perm","PARAM_28":"system_ops","PARAM_29":"infrastructure","PARAM_20":"public_resource","PARAM_21":"bpm","PARAM_22":"mobile_application","PARAM_23":"hrm","PARAM_24":"dp_rule:mngr","PARAM_25":"contract","PARAM_26":"ops","PARAM_27":"system_config"}
┣ 执行：select id,authority,hierarchy from sys_menu where deleted=0 AND authority IN ( 'auto_perm' , 'changes' , 'hr' , 'basic_permissions' , 'example' , 'eam' , 'zbx' , 'system_monitor' , 'common_system' , 'oa' , 'docs' , 'sys_file:mngr' , 'eam_employee' , 'eam_equipment_mgr' , 'kb' , 'data_backup' , 'pcm' , 'wms' , 'oauth' , 'public_resource' , 'bpm' , 'mobile_application' , 'hrm' , 'dp_rule:mngr' , 'contract' , 'ops' , 'system_config' , 'system_ops' , 'infrastructure' , 'sys_tpl_file:mngr' , 'job' , 'bpm-mgr' , 'workorder' )
┣ 结果： 
┣━ 耗时：65ms , start = 1681973855373
┣━ 返回：RcdSet,size=32
┣ TID：null
┗━━━━━ SQL [ select id,authority,hierarchy from sys_menu where deleted=0 AND authority IN (... ] ━━━━━ 

14:57:36.451 [main] - [] - INFO  c.g.f.s.m.ControllerAspector - [init,52] - ControllerAspector Init
14:57:36.706 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for org.github.foxnic.web.storage is ok , group=storage
14:57:36.716 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for org.github.foxnic.web.system is ok , group=system
14:57:36.720 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for org.github.foxnic.web.oauth is ok , group=oauth
14:57:36.723 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for org.github.foxnic.web.hrm is ok , group=hrm
14:57:36.727 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for org.github.foxnic.web.job is ok , group=job
14:57:36.729 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for org.github.foxnic.web.example is ok , group=example
14:57:36.732 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.dt.platform.eam is ok , group=eam
14:57:36.735 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.dt.platform.hr is ok , group=hr
14:57:36.738 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.dt.platform.oa is ok , group=oa
14:57:36.742 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.dt.platform.ops is ok , group=ops
14:57:36.745 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.dt.platform.common is ok , group=common
14:57:36.748 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.dt.platform.knowledgebase is ok , group=knowledgebase
14:57:36.752 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.dt.platform.mobile is ok , group=mobile
14:57:36.755 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.dt.platform.wms is ok , group=wms
14:57:36.759 [main] - [] - INFO  o.g.f.w.f.k.BasicSwaggerConfig - [createRestApi,56] - rest api doc for com.foxnicweb.web.contract is ok , group=contract
14:57:37.010 [main] - [] - INFO  o.g.f.w.f.v.a.PageAspector - [init,74] - PageAspector Init
14:57:40.612 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"dp_rule","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'dp_rule'
┣ 结果： 
┣━ 耗时：63ms , start = 1681973860549
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:57:40.719 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.valid = :PAR... ] ━━━━━ 
┣ 语句：select t.* from dp_rule t WHERE ( ( t.deleted= ? ) AND ( t.valid = ? AND t.deleted = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":1}
┣ 执行：select t.* from dp_rule t WHERE ( ( t.deleted= 0 ) AND ( t.valid = 1 AND t.deleted = 0 ))
┣ 结果： 
┣━ 耗时：99ms , start = 1681973860620
┣━ 返回：RcdSet,size=31
┣ TID：null
┗━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.valid = :PAR... ] ━━━━━ 

14:57:40.802 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"dp_rule_range","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'dp_rule_range'
┣ 结果： 
┣━ 耗时：80ms , start = 1681973860722
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:57:40.894 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 , t_0.rule_id join_fs_dp_rule_range_sf_nioj... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.rule_id join_f0 , t_0.rule_id join_fs_dp_rule_range_sf_nioj_rule_id , t_0.id pk_join_fs_dp_rule_range_sf_nioj_id FROM (select * from dp_rule_range WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.rule_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_17":"509647933944102912","PARAM_18":"592122738932457472","PARAM_19":"509650043460911104","PARAM_31":"509655484735684608","PARAM_10":"592122537232572416","PARAM_32":"574894680777424896","PARAM_11":"592122620342706176","PARAM_33":0,"PARAM_12":"509650758551994368","PARAM_13":"506776075892690944","PARAM_14":"509650653266575361","PARAM_15":"520970316604768256","PARAM_16":"591730938593943552","PARAM_30":"523903460316286976","PARAM_9":"509655566583332865","PARAM_8":"505382677860319232","PARAM_7":"531757691220004864","PARAM_6":"509656547438100480","PARAM_5":"505378699583950848","PARAM_4":"509657055074713600","PARAM_3":"509650440854437889","PARAM_2":"509650212042571776","PARAM_1":0,"PARAM_28":"592122322190606336","PARAM_29":"574894584358764544","PARAM_20":"506777407038951424","PARAM_21":"509656923604254721","PARAM_22":"509650558735351808","PARAM_23":"509650369479966720","PARAM_24":"591731270170451968","PARAM_25":"509655623806222337","PARAM_26":"520966111794036736","PARAM_27":"505378833612935169"}
┣ 执行：SELECT t_0.* , t_0.rule_id join_f0 , t_0.rule_id join_fs_dp_rule_range_sf_nioj_rule_id , t_0.id pk_join_fs_dp_rule_range_sf_nioj_id FROM (select * from dp_rule_range WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.rule_id IN ( '509650212042571776' , '509650440854437889' , '509657055074713600' , '505378699583950848' , '509656547438100480' , '531757691220004864' , '505382677860319232' , '509655566583332865' , '592122537232572416' , '592122620342706176' , '509650758551994368' , '506776075892690944' , '509650653266575361' , '520970316604768256' , '591730938593943552' , '509647933944102912' , '592122738932457472' , '509650043460911104' , '506777407038951424' , '509656923604254721' , '509650558735351808' , '509650369479966720' , '591731270170451968' , '509655623806222337' , '520966111794036736' , '505378833612935169' , '592122322190606336' , '574894584358764544' , '523903460316286976' , '509655484735684608' , '574894680777424896' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：90ms , start = 1681973860803
┣━ 返回：RcdSet,size=33
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 , t_0.rule_id join_fs_dp_rule_range_sf_nioj... ] ━━━━━ 

14:57:40.981 [simple-parallel-task] - [] - INFO  o.g.f.w.o.s.i.MenuServiceImpl - [initCache,514] - 正在初始化菜单数据...
14:57:41.118 [simple-parallel-task] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,169] - fill with cost 396ms
14:57:41.120 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:我起草的流程(chs_instance_drafted) 成功
14:57:41.120 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:我待审的流程(chs_instance_approving) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:流程权限测试(chs_instance_demo) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:我办结的流程(chs_instance_approved) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:我参与的流程(默认)(chs_instance_joined) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产登记审批(eam_asset_insert_approving) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产调拨单据(eam_asset_allocate) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产转移单据(eam_asset_tranfer) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产维修单据(eam_asset_repair) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产借用单据(eam_asset_borrow) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产领用单据(eam_asset_collection) 成功
14:57:41.121 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产退库单据(eam_asset_collection_return) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产报废单据(eam_asset_scrap) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产基本变更单据(eam_asset_change_base_info) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产维保变更单据(eam_asset_change_maintenance) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产财务变更单据(eam_asset_change_financial) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产财务变更审批(eam_asset_change_financial_approving) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产维保变更审批(eam_asset_change_maintenance_approving) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产基本变更审批(eam_asset_change_base_info_approving) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产耗材领用单据(eam_asset_consumables_collection) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产库存分配单据(eam_asset_stock_distribute) 成功
14:57:41.122 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产全局数据权限(eam_asset_global_data_permission) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_资产报废单据审批(eam_asset_scrap_approving) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_采购申请(eam_asset_purchase_apply) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_采购验证(eam_asset_purchase_check) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_故障登记(eam_equipment_failure_registration) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_故障申请(eam_asset_repair_order) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_员工资产报修(eam_asset_employee_repair) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_员工资产交接(eam_asset_employee_handover) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_员工资产报失(eam_asset_employee_loss) 成功
14:57:41.123 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,453] - 注册数据权限:EAM_员工资产领用(eam_asset_employee_apply) 成功
14:57:43.432 [simple-parallel-task] - [] - INFO  o.g.f.w.o.s.i.MenuServiceImpl - [initCache,539] - cancel module authority in develop environment, and include all modules
14:57:43.999 [simple-parallel-task] - [] - INFO  o.g.f.w.o.s.i.MenuServiceImpl - [initCache,561] - 菜单数据初始化完毕
14:57:44.269 [simple-parallel-task] - [] - INFO  c.g.f.c.l.PerformanceLogger - [getUserByIdentity,599] - 
┏━━━ PERFORMANCE [ Login , total = 3913 ] ━━━ 
┣ point : Query Login User
┣━ cost : 72
┣ point : Unique Identity
┣━ cost : 0
┣ point : Start Join
┣━ cost : 651
┣ point : End Join
┣━ cost : 2
┣ point : End Process Role&Menu
┣━ cost : 3187
┣ point : Tenant Process
┣━ cost : 1
┣ point : Language
┣━ cost : 0
┣ point : Done
┗━━━ PERFORMANCE [ Login , total = 3913 ] ━━━
14:57:44.348 [simple-parallel-task] - [] - INFO  c.g.f.c.l.PerformanceLogger - [getUserByIdentity,599] - 
┏━━━ PERFORMANCE [ Login , total = 6274 ] ━━━ 
┣ point : Query Login User
┣━ cost : 259
┣ point : Unique Identity
┣━ cost : 266
┣ point : Start Join
┣━ cost : 2371
┣ point : End Join
┣━ cost : 2
┣ point : End Process Role&Menu
┣━ cost : 3376
┣ point : Tenant Process
┣━ cost : 0
┣ point : Language
┣━ cost : 0
┣ point : Done
┗━━━ PERFORMANCE [ Login , total = 6274 ] ━━━
14:57:44.374 [simple-parallel-task] - [] - INFO  c.g.f.c.c.t.QuartzTaskManager - [initScheduler,86] - TaskScheduler Startup
14:57:44.417 [simple-parallel-task] - [] - INFO  c.g.f.c.l.PerformanceLogger - [getUserByIdentity,599] - 
┏━━━ PERFORMANCE [ Login , total = 3915 ] ━━━ 
┣ point : Query Login User
┣━ cost : 71
┣ point : Unique Identity
┣━ cost : 0
┣ point : Start Join
┣━ cost : 524
┣ point : End Join
┣━ cost : 1
┣ point : End Process Role&Menu
┣━ cost : 3319
┣ point : Tenant Process
┣━ cost : 0
┣ point : Language
┣━ cost : 0
┣ point : Done
┗━━━ PERFORMANCE [ Login , total = 3915 ] ━━━
14:57:57.648 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"sys_job_worker","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'sys_job_worker'
┣ 结果： 
┣━ 耗时：56ms , start = 1681973877592
┣━ 返回：RcdSet,size=4
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:57:57.702 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_job_worker t ] ━━━━━ 
┣ 语句：select t.* from sys_job_worker t
┣ 参数：{}
┣ 执行：select t.* from sys_job_worker t
┣ 结果： 
┣━ 耗时：52ms , start = 1681973877650
┣━ 返回：RcdSet,size=9
┣ TID：null
┗━━━━━ SQL [ select t.* from sys_job_worker t ] ━━━━━ 

14:57:57.748 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ update sys_job_worker set valid=0 where 1=1 ] ━━━━━ 
┣ 语句：update sys_job_worker set valid=0 where 1=1
┣ 参数：{}
┣ 执行：update sys_job_worker set valid=0 where 1=1
┣ 结果： 
┣━ 耗时：44ms , start = 1681973877704
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ update sys_job_worker set valid=0 where 1=1 ] ━━━━━ 

14:57:57.800 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"BPMTaskWorker","PARAM_4":"598249517812285440","PARAM_3":1,"PARAM_2":"org.github.foxnic.web.framework.bpm.BPMSyncWorker"}
┣ 执行：UPDATE sys_job_worker SET name = 'BPMTaskWorker' , class_name = 'org.github.foxnic.web.framework.bpm.BPMSyncWorker' , valid = 1 WHERE id = '598249517812285440'
┣ 结果： 
┣━ 耗时：48ms , start = 1681973877752
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:57.862 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"示例-1","PARAM_4":"597457935391522816","PARAM_3":1,"PARAM_2":"org.github.foxnic.web.job.worker.DemoWorker1"}
┣ 执行：UPDATE sys_job_worker SET name = '示例-1' , class_name = 'org.github.foxnic.web.job.worker.DemoWorker1' , valid = 1 WHERE id = '597457935391522816'
┣ 结果： 
┣━ 耗时：61ms , start = 1681973877800
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:57.913 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"Job日志清理","PARAM_4":"597457935609626624","PARAM_3":1,"PARAM_2":"org.github.foxnic.web.job.worker.JobLogCleaner"}
┣ 执行：UPDATE sys_job_worker SET name = 'Job日志清理' , class_name = 'org.github.foxnic.web.job.worker.JobLogCleaner' , valid = 1 WHERE id = '597457935609626624'
┣ 结果： 
┣━ 耗时：50ms , start = 1681973877862
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:57.951 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"示例-2","PARAM_4":"597457935504769024","PARAM_3":1,"PARAM_2":"org.github.foxnic.web.job.worker.DemoWorker2"}
┣ 执行：UPDATE sys_job_worker SET name = '示例-2' , class_name = 'org.github.foxnic.web.job.worker.DemoWorker2' , valid = 1 WHERE id = '597457935504769024'
┣ 结果： 
┣━ 耗时：37ms , start = 1681973877913
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:58.015 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( :PARAM_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701446500441391104","PARAM_4":1,"PARAM_3":"com.dt.platform.job.contract.ContractJobExecutor","PARAM_2":"ContractJobExecutor"}
┣ 执行：INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( '701446500441391104' , 'ContractJobExecutor' , 'com.dt.platform.job.contract.ContractJobExecutor' , 1 )
┣ 结果： 
┣━ 耗时：59ms , start = 1681973877956
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( :PARAM_... ] ━━━━━ 

14:57:58.056 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"CCustInspectPlanJobExecutor","PARAM_4":"698159245345947648","PARAM_3":1,"PARAM_2":"com.dt.platform.job.eam.CCustInspectPlanJobExecutor"}
┣ 执行：UPDATE sys_job_worker SET name = 'CCustInspectPlanJobExecutor' , class_name = 'com.dt.platform.job.eam.CCustInspectPlanJobExecutor' , valid = 1 WHERE id = '698159245345947648'
┣ 结果： 
┣━ 耗时：39ms , start = 1681973878016
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:58.114 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"EamAccountCreateExecutor","PARAM_4":"618077429566537728","PARAM_3":1,"PARAM_2":"com.dt.platform.job.eam.EamAccountCreateActionExecutor"}
┣ 执行：UPDATE sys_job_worker SET name = 'EamAccountCreateExecutor' , class_name = 'com.dt.platform.job.eam.EamAccountCreateActionExecutor' , valid = 1 WHERE id = '618077429566537728'
┣ 结果： 
┣━ 耗时：58ms , start = 1681973878056
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:58.158 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( :PARAM_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701446501129256960","PARAM_4":1,"PARAM_3":"com.dt.platform.job.eam.EamJobExecutor","PARAM_2":"EamJobExecutor"}
┣ 执行：INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( '701446501129256960' , 'EamJobExecutor' , 'com.dt.platform.job.eam.EamJobExecutor' , 1 )
┣ 结果： 
┣━ 耗时：42ms , start = 1681973878115
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( :PARAM_... ] ━━━━━ 

14:57:58.204 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"MonitorClearNodeValueLastDataExecutor","PARAM_4":"607618164838105088","PARAM_3":1,"PARAM_2":"com.dt.platform.job.ops.MonitorClearNodeValueLastDataExecutor"}
┣ 执行：UPDATE sys_job_worker SET name = 'MonitorClearNodeValueLastDataExecutor' , class_name = 'com.dt.platform.job.ops.MonitorClearNodeValueLastDataExecutor' , valid = 1 WHERE id = '607618164838105088'
┣ 结果： 
┣━ 耗时：46ms , start = 1681973878158
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:58.274 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"MonitorScriptCollectDataExecutor","PARAM_4":"607618165026848768","PARAM_3":1,"PARAM_2":"com.dt.platform.job.ops.MonitorScriptCollectDataExecutor"}
┣ 执行：UPDATE sys_job_worker SET name = 'MonitorScriptCollectDataExecutor' , class_name = 'com.dt.platform.job.ops.MonitorScriptCollectDataExecutor' , valid = 1 WHERE id = '607618165026848768'
┣ 结果： 
┣━ 耗时：68ms , start = 1681973878205
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:58.337 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_job_worker SET name = ? , class_name = ? , valid = ? WHERE id = ?
┣ 参数：{"PARAM_1":"MonitorZabbixAgentCollectDataExecutor","PARAM_4":"597670498230337536","PARAM_3":1,"PARAM_2":"com.dt.platform.job.ops.MonitorZabbixAgentCollectDataExecutor"}
┣ 执行：UPDATE sys_job_worker SET name = 'MonitorZabbixAgentCollectDataExecutor' , class_name = 'com.dt.platform.job.ops.MonitorZabbixAgentCollectDataExecutor' , valid = 1 WHERE id = '597670498230337536'
┣ 结果： 
┣━ 耗时：63ms , start = 1681973878274
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_job_worker SET name = :PARAM_1 , class_name = :PARAM_2 , valid = :P... ] ━━━━━ 

14:57:58.392 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( :PARAM_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701446502060392448","PARAM_4":1,"PARAM_3":"com.dt.platform.job.ops.OpsJobExecutor","PARAM_2":"OpsJobExecutor"}
┣ 执行：INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( '701446502060392448' , 'OpsJobExecutor' , 'com.dt.platform.job.ops.OpsJobExecutor' , 1 )
┣ 结果： 
┣━ 耗时：53ms , start = 1681973878338
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_job_worker ( id , name , class_name , valid ) VALUES ( :PARAM_... ] ━━━━━ 

14:57:58.432 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_job_worker t WHERE ( ( t.valid = :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_job_worker t WHERE ( ( t.valid = ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_job_worker t WHERE ( ( t.valid = 0 ))
┣ 结果： 
┣━ 耗时：40ms , start = 1681973878392
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from sys_job_worker t WHERE ( ( t.valid = :PARAM_1 )) ] ━━━━━ 

14:57:59.101 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarted,61] - Started WrapperAllApp in 37.107 seconds (JVM running for 38.361)
14:57:59.118 [main] - [] - INFO  c.g.f.s.w.WebContext - [initURLMapping,173] - Request Mappings: 

[POST] /service-eam/eam-inventory-director/save , method = com.dt.platform.eam.controller.InventoryDirectorController.save
[POST] /service-eam/eam-inventory-director/insert , method = com.dt.platform.eam.controller.InventoryDirectorController.insert
[POST] /service-eam/eam-inventory-director/get-by-id , method = com.dt.platform.eam.controller.InventoryDirectorController.getById
[POST] /service-eam/eam-inventory-director/get-by-ids , method = com.dt.platform.eam.controller.InventoryDirectorController.getByIds
[POST] /service-eam/eam-inventory-director/query-list , method = com.dt.platform.eam.controller.InventoryDirectorController.queryList
[POST] /service-eam/eam-inventory-director/delete , method = com.dt.platform.eam.controller.InventoryDirectorController.deleteById
[POST] /service-eam/eam-inventory-director/delete-by-ids , method = com.dt.platform.eam.controller.InventoryDirectorController.deleteByIds
[POST] /service-eam/eam-inventory-director/query-paged-list , method = com.dt.platform.eam.controller.InventoryDirectorController.queryPagedList
[ALL] /service-eam/eam-inventory-director/export-excel , method = com.dt.platform.eam.controller.InventoryDirectorController.exportExcel
[ALL] /service-eam/eam-inventory-director/export-excel-template , method = com.dt.platform.eam.controller.InventoryDirectorController.exportExcelTemplate
[ALL] /service-eam/eam-inventory-director/import-excel , method = com.dt.platform.eam.controller.InventoryDirectorController.importExcel
[POST] /service-eam/eam-inventory-feedback/update , method = com.dt.platform.eam.controller.InventoryFeedbackController.update
[POST] /service-eam/eam-inventory-feedback/save , method = com.dt.platform.eam.controller.InventoryFeedbackController.save
[POST] /service-eam/eam-inventory-feedback/insert , method = com.dt.platform.eam.controller.InventoryFeedbackController.insert
[POST] /service-eam/eam-inventory-feedback/get-by-id , method = com.dt.platform.eam.controller.InventoryFeedbackController.getById
[POST] /service-eam/eam-inventory-feedback/get-by-ids , method = com.dt.platform.eam.controller.InventoryFeedbackController.getByIds
[POST] /service-job/sys-job-log/save , method = org.github.foxnic.web.job.controller.JobLogController.save
[POST] /service-bpm/bpm-process-instance/fetch-back , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.fetchBack
[POST] /service-eam/eam-inventory-feedback/query-list , method = com.dt.platform.eam.controller.InventoryFeedbackController.queryList
[POST] /service-bpm/bpm-process-instance/get-by-camunda_instance-id , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.getByCamundaProcessId
[POST] /service-eam/eam-inventory-feedback/delete , method = com.dt.platform.eam.controller.InventoryFeedbackController.deleteById
[POST] /service-bpm/bpm-process-instance/get-process-instance-by-bill , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.getProcessInstanceByBill
[POST] /service-job/sys-job-log/insert , method = org.github.foxnic.web.job.controller.JobLogController.insert
[POST] /service-eam/eam-inventory-feedback/delete-by-ids , method = com.dt.platform.eam.controller.InventoryFeedbackController.deleteByIds
[POST] /service-system/sys-lang/batch-delete , method = org.github.foxnic.web.system.controller.LangController.deleteByIds
[POST] /service-bpm/bpm-process-instance/update-sync-status , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.updateSyncStatus
[POST] /service-job/sys-job-log/get-by-id , method = org.github.foxnic.web.job.controller.JobLogController.getById
[POST] /service-job/sys-job-log/get-by-ids , method = org.github.foxnic.web.job.controller.JobLogController.getByIds
[POST] /service-eam/eam-inventory-feedback/query-paged-list , method = com.dt.platform.eam.controller.InventoryFeedbackController.queryPagedList
[POST] /service-bpm/bpm-process-instance/temporary-save , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.temporarySave
[POST] /service-eam/eam-inventory-feedback-msg/update , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.update
[POST] /service-bpm/bpm-process-instance/query-paged-list , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.queryPagedList
[POST] /service-job/sys-job-log/query-list , method = org.github.foxnic.web.job.controller.JobLogController.queryList
[ALL] /service-bpm/bpm-process-instance/export-excel , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.exportExcel
[POST] /service-eam/eam-inventory-feedback-msg/save , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.save
[POST] /service-job/sys-job-log/delete , method = org.github.foxnic.web.job.controller.JobLogController.deleteById
[ALL] /service-bpm/bpm-process-instance/export-excel-template , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.exportExcelTemplate
[ALL] /service-bpm/bpm-process-instance/import-excel , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.importExcel
[POST] /service-job/sys-job-log/delete-by-ids , method = org.github.foxnic.web.job.controller.JobLogController.deleteByIds
[POST] /service-bpm/bpm-process-instance/sync-camunda-process-instance , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.syncCamundaProcessInstances
[POST] /service-eam/eam-inventory-feedback-msg/insert , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.insert
[POST] /service-eam/eam-inventory-feedback-msg/get-by-id , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.getById
[POST] /service-bpm/bpm-task-assignee/update , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.update
[POST] /service-system/sys-lang/query-paged-list , method = org.github.foxnic.web.system.controller.LangController.queryPagedList
[POST] /service-eam/eam-inventory-feedback-msg/get-by-ids , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.getByIds
[POST] /service-bpm/bpm-task-assignee/save , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.save
[POST] /service-job/sys-job-log/query-paged-list , method = org.github.foxnic.web.job.controller.JobLogController.queryPagedList
[POST] /service-system/sys-user-tenant/update , method = org.github.foxnic.web.system.controller.UserTenantController.update
[POST] /service-job/sys-job-worker/update , method = org.github.foxnic.web.job.controller.JobWorkerController.update
[POST] /service-bpm/bpm-task-assignee/insert , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.insert
[POST] /service-eam/eam-inventory-feedback-msg/query-list , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.queryList
[POST] /service-system/sys-user-tenant/save , method = org.github.foxnic.web.system.controller.UserTenantController.save
[POST] /service-job/sys-job-worker/save , method = org.github.foxnic.web.job.controller.JobWorkerController.save
[POST] /service-eam/eam-inventory-feedback-msg/delete , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.deleteById
[POST] /service-bpm/bpm-task-assignee/get-by-id , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.getById
[POST] /service-job/sys-job-worker/insert , method = org.github.foxnic.web.job.controller.JobWorkerController.insert
[POST] /service-eam/eam-inventory-feedback-msg/delete-by-ids , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.deleteByIds
[POST] /service-system/sys-user-tenant/insert , method = org.github.foxnic.web.system.controller.UserTenantController.insert
[POST] /service-bpm/bpm-task-assignee/get-by-ids , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.getByIds
[POST] /service-job/sys-job-worker/get-by-id , method = org.github.foxnic.web.job.controller.JobWorkerController.getById
[POST] /service-system/sys-user-tenant/get-by-id , method = org.github.foxnic.web.system.controller.UserTenantController.getById
[POST] /service-job/sys-job-worker/get-by-ids , method = org.github.foxnic.web.job.controller.JobWorkerController.getByIds
[POST] /service-eam/eam-inventory-feedback-msg/query-paged-list , method = com.dt.platform.eam.controller.InventoryFeedbackMsgController.queryPagedList
[POST] /service-bpm/bpm-task-assignee/query-list , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.queryList
[POST] /service-system/sys-user-tenant/get-by-ids , method = org.github.foxnic.web.system.controller.UserTenantController.getByIds
[POST] /service-job/sys-job-worker/query-list , method = org.github.foxnic.web.job.controller.JobWorkerController.queryList
[POST] /service-bpm/bpm-task-assignee/delete , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.deleteById
[POST] /service-job/sys-job-worker/delete , method = org.github.foxnic.web.job.controller.JobWorkerController.deleteById
[POST] /service-eam/eam-inventory-manager/update , method = com.dt.platform.eam.controller.InventoryManagerController.update
[POST] /service-bpm/bpm-task-assignee/delete-by-ids , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.deleteByIds
[POST] /service-system/sys-user-tenant/query-list , method = org.github.foxnic.web.system.controller.UserTenantController.queryList
[POST] /service-job/sys-job-worker/delete-by-ids , method = org.github.foxnic.web.job.controller.JobWorkerController.deleteByIds
[POST] /service-eam/eam-inventory-manager/save , method = com.dt.platform.eam.controller.InventoryManagerController.save
[POST] /service-system/sys-user-tenant/delete , method = org.github.foxnic.web.system.controller.UserTenantController.deleteById
[POST] /service-bpm/bpm-task-assignee/query-paged-list , method = org.github.foxnic.web.bpm.controller.TaskAssigneeController.queryPagedList
[POST] /service-job/sys-job-worker/query-paged-list , method = org.github.foxnic.web.job.controller.JobWorkerController.queryPagedList
[ALL] /service-job/sys-job-worker/export-excel , method = org.github.foxnic.web.job.controller.JobWorkerController.exportExcel
[POST] /service-system/sys-user-tenant/delete-by-ids , method = org.github.foxnic.web.system.controller.UserTenantController.deleteByIds
[POST] /service-eam/eam-inventory-manager/insert , method = com.dt.platform.eam.controller.InventoryManagerController.insert
[ALL] /service-job/sys-job-worker/export-excel-template , method = org.github.foxnic.web.job.controller.JobWorkerController.exportExcelTemplate
[POST] /service-bpm/bpm-process-definition-node-assignee/update , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.update
[ALL] /service-job/sys-job-worker/import-excel , method = org.github.foxnic.web.job.controller.JobWorkerController.importExcel
[POST] /service-system/sys-user-tenant/query-paged-list , method = org.github.foxnic.web.system.controller.UserTenantController.queryPagedList
[POST] /service-eam/eam-inventory-manager/get-by-id , method = com.dt.platform.eam.controller.InventoryManagerController.getById
[POST] /service-bpm/bpm-process-definition-node-assignee/save , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.save
[POST] /service-job/sys-job/invoke , method = org.github.foxnic.web.job.controller.JobController.invoke
[POST] /service-eam/eam-inventory-manager/get-by-ids , method = com.dt.platform.eam.controller.InventoryManagerController.getByIds
[POST] /service-bpm/bpm-process-definition-node-assignee/insert , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.insert
[POST] /service-system/sys-busi-role/update , method = org.github.foxnic.web.system.controller.BusiRoleController.update
[POST] /service-job/sys-job/update , method = org.github.foxnic.web.job.controller.JobController.update
[POST] /service-eam/eam-inventory-manager/query-list , method = com.dt.platform.eam.controller.InventoryManagerController.queryList
[POST] /service-bpm/bpm-process-definition-node-assignee/get-by-id , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.getById
[POST] /service-eam/eam-inventory-manager/delete , method = com.dt.platform.eam.controller.InventoryManagerController.deleteById
[POST] /service-bpm/bpm-process-definition-node-assignee/get-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.getByIds
[POST] /service-job/sys-job/save , method = org.github.foxnic.web.job.controller.JobController.save
[POST] /service-system/sys-busi-role/save , method = org.github.foxnic.web.system.controller.BusiRoleController.save
[POST] /service-eam/eam-inventory-manager/delete-by-ids , method = com.dt.platform.eam.controller.InventoryManagerController.deleteByIds
[POST] /service-bpm/bpm-process-definition-node-assignee/query-list , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.queryList
[POST] /service-job/sys-job/insert , method = org.github.foxnic.web.job.controller.JobController.insert
[POST] /service-bpm/bpm-process-definition-node-assignee/delete , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.deleteById
[POST] /service-eam/eam-inventory-manager/query-paged-list , method = com.dt.platform.eam.controller.InventoryManagerController.queryPagedList
[POST] /service-system/sys-busi-role/insert , method = org.github.foxnic.web.system.controller.BusiRoleController.insert
[POST] /service-bpm/bpm-process-definition-node-assignee/delete-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.deleteByIds
[ALL] /service-eam/eam-inventory-manager/export-excel , method = com.dt.platform.eam.controller.InventoryManagerController.exportExcel
[POST] /service-system/sys-busi-role/get-by-id , method = org.github.foxnic.web.system.controller.BusiRoleController.getById
[POST] /service-job/sys-job/get-by-id , method = org.github.foxnic.web.job.controller.JobController.getById
[ALL] /service-eam/eam-inventory-manager/export-excel-template , method = com.dt.platform.eam.controller.InventoryManagerController.exportExcelTemplate
[POST] /service-bpm/bpm-process-definition-node-assignee/query-paged-list , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeAssigneeController.queryPagedList
[POST] /service-system/sys-busi-role/get-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleController.getByIds
[ALL] /service-eam/eam-inventory-manager/import-excel , method = com.dt.platform.eam.controller.InventoryManagerController.importExcel
[POST] /service-job/sys-job/get-by-ids , method = org.github.foxnic.web.job.controller.JobController.getByIds
[POST] /service-system/sys-busi-role/get-employee-roles , method = org.github.foxnic.web.system.controller.BusiRoleController.getEmployeeRoles
[POST] /service-job/sys-job/simulate , method = org.github.foxnic.web.job.controller.JobController.simulate
[POST] /service-system/sys-busi-role/get-by-codes , method = org.github.foxnic.web.system.controller.BusiRoleController.getByCodes
[POST] /service-eam/eam-inventory-plan/update , method = com.dt.platform.eam.controller.InventoryPlanController.update
[POST] /service-bpm/bpm-task-approval/update , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.update
[POST] /service-job/sys-job/query-list , method = org.github.foxnic.web.job.controller.JobController.queryList
[POST] /service-system/sys-busi-role/query-list , method = org.github.foxnic.web.system.controller.BusiRoleController.queryList
[POST] /service-eam/eam-inventory-plan/save , method = com.dt.platform.eam.controller.InventoryPlanController.save
[POST] /service-job/sys-job/delete , method = org.github.foxnic.web.job.controller.JobController.deleteById
[POST] /service-bpm/bpm-task-approval/save , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.save
[POST] /service-system/sys-busi-role/delete , method = org.github.foxnic.web.system.controller.BusiRoleController.deleteById
[POST] /service-job/sys-job/delete-by-ids , method = org.github.foxnic.web.job.controller.JobController.deleteByIds
[POST] /service-system/sys-busi-role/delete-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleController.deleteByIds
[POST] /service-eam/eam-inventory-plan/insert , method = com.dt.platform.eam.controller.InventoryPlanController.insert
[POST] /service-eam/eam-inventory-plan/apply-tpl , method = com.dt.platform.eam.controller.InventoryPlanController.applyTpl
[POST] /service-job/sys-job/query-paged-list , method = org.github.foxnic.web.job.controller.JobController.queryPagedList
[POST] /service-bpm/bpm-task-approval/insert , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.insert
[POST] /service-eam/eam-inventory-plan/get-by-id , method = com.dt.platform.eam.controller.InventoryPlanController.getById
[ALL] /business/job/job_worker/job_worker_form.html , method = org.github.foxnic.web.job.page.JobWorkerPageController.form
[POST] /service-bpm/bpm-task-approval/get-by-id , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.getById
[ALL] /business/job/job_worker/job_worker_list.html , method = org.github.foxnic.web.job.page.JobWorkerPageController.list
[POST] /service-eam/eam-inventory-plan/get-by-ids , method = com.dt.platform.eam.controller.InventoryPlanController.getByIds
[POST] /service-bpm/bpm-task-approval/get-by-ids , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.getByIds
[ALL] /business/job/job_log/job_log_form.html , method = org.github.foxnic.web.job.page.JobLogPageController.form
[ALL] /business/job/job_log/job_log_list.html , method = org.github.foxnic.web.job.page.JobLogPageController.list
[ALL] /business/job/job/job_form.html , method = org.github.foxnic.web.job.page.JobPageController.form
[POST] /service-eam/eam-inventory-plan/query-list , method = com.dt.platform.eam.controller.InventoryPlanController.queryList
[ALL] /business/job/job/job_list.html , method = org.github.foxnic.web.job.page.JobPageController.list
[POST] /service-bpm/bpm-task-approval/query-list , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.queryList
[POST] /service-eam/eam-inventory-plan/delete , method = com.dt.platform.eam.controller.InventoryPlanController.deleteById
[POST] /service-docs/table-meta/query-table-meta , method = org.github.foxnic.web.docs.controller.DBTableMetaController.queryTableMeta
[POST] /service-bpm/bpm-task-approval/delete , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.deleteById
[POST] /service-eam/eam-inventory-plan/delete-by-ids , method = com.dt.platform.eam.controller.InventoryPlanController.deleteByIds
[POST] /service-common/sys-code-attr/update , method = com.dt.platform.common.controller.CodeAttrController.update
[POST] /service-docs/table-meta/query-table-nodes , method = org.github.foxnic.web.docs.controller.DBTableMetaController.queryTableNodes
[POST] /service-bpm/bpm-task-approval/delete-by-ids , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.deleteByIds
[POST] /service-common/sys-code-attr/save , method = com.dt.platform.common.controller.CodeAttrController.save
[POST] /service-eam/eam-inventory-plan/query-paged-list , method = com.dt.platform.eam.controller.InventoryPlanController.queryPagedList
[ALL] /service-eam/eam-inventory-plan/export-excel , method = com.dt.platform.eam.controller.InventoryPlanController.exportExcel
[POST] /service-docs/sys-api-source/update , method = org.github.foxnic.web.docs.controller.ApiSourceController.update
[ALL] /service-eam/eam-inventory-plan/export-excel-template , method = com.dt.platform.eam.controller.InventoryPlanController.exportExcelTemplate
[POST] /service-bpm/bpm-task-approval/query-paged-list , method = org.github.foxnic.web.bpm.controller.TaskApprovalController.queryPagedList
[POST] /service-common/sys-code-attr/insert , method = com.dt.platform.common.controller.CodeAttrController.insert
[ALL] /service-eam/eam-inventory-plan/import-excel , method = com.dt.platform.eam.controller.InventoryPlanController.importExcel
[POST] /service-common/sys-code-attr/get-by-id , method = com.dt.platform.common.controller.CodeAttrController.getById
[POST] /service-docs/sys-api-source/save , method = org.github.foxnic.web.docs.controller.ApiSourceController.save
[POST] /service-bpm/bpm-process-definition-file/update , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.update
[POST] /service-eam/eam-inventory-position/update , method = com.dt.platform.eam.controller.InventoryPositionController.update
[POST] /service-common/sys-code-attr/get-by-ids , method = com.dt.platform.common.controller.CodeAttrController.getByIds
[POST] /service-bpm/bpm-process-definition-file/save , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.save
[POST] /service-eam/eam-inventory-position/save , method = com.dt.platform.eam.controller.InventoryPositionController.save
[POST] /service-common/sys-code-attr/query-list , method = com.dt.platform.common.controller.CodeAttrController.queryList
[POST] /service-docs/sys-api-source/insert , method = org.github.foxnic.web.docs.controller.ApiSourceController.insert
[POST] /service-common/sys-code-attr/delete , method = com.dt.platform.common.controller.CodeAttrController.deleteById
[POST] /service-docs/sys-api-source/get-by-id , method = org.github.foxnic.web.docs.controller.ApiSourceController.getById
[POST] /service-eam/eam-inventory-position/insert , method = com.dt.platform.eam.controller.InventoryPositionController.insert
[POST] /service-bpm/bpm-process-definition-file/insert , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.insert
[POST] /service-common/sys-code-attr/delete-by-ids , method = com.dt.platform.common.controller.CodeAttrController.deleteByIds
[ALL] /service-eam/eam-asset-software/import-excel , method = com.dt.platform.eam.controller.AssetSoftwareController.importExcel
[POST] /service-docs/sys-api-source/get-by-ids , method = org.github.foxnic.web.docs.controller.ApiSourceController.getByIds
[POST] /service-eam/eam-inventory-position/get-by-id , method = com.dt.platform.eam.controller.InventoryPositionController.getById
[POST] /service-bpm/bpm-process-definition-file/duplicate , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.duplicate
[POST] /service-eam/eam-asset-software/query-paged-list-by-select , method = com.dt.platform.eam.controller.AssetSoftwareController.queryPagedListBySelect
[POST] /service-docs/sys-api-source/fetch-api-doc , method = org.github.foxnic.web.docs.controller.ApiSourceController.fetchApiDoc
[POST] /service-eam/eam-inventory-position/get-by-ids , method = com.dt.platform.eam.controller.InventoryPositionController.getByIds
[POST] /service-eam/eam-asset-software/query-paged-list-by-selected , method = com.dt.platform.eam.controller.AssetSoftwareController.queryPagedListBySelected
[POST] /service-bpm/bpm-process-definition-file/get-by-id , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.getById
[POST] /service-common/sys-code-attr/query-paged-list , method = com.dt.platform.common.controller.CodeAttrController.queryPagedList
[POST] /service-docs/sys-api-source/query-api-nodes , method = org.github.foxnic.web.docs.controller.ApiSourceController.queryApiNodes
[POST] /service-bpm/bpm-process-definition-file/get-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.getByIds
[POST] /service-eam/eam-inventory-position/query-list , method = com.dt.platform.eam.controller.InventoryPositionController.queryList
[POST] /service-common/sys-code-module/generate-code-by-data , method = com.dt.platform.common.controller.CodeModuleController.generateCodeByData
[POST] /service-bpm/bpm-process-definition-file/deploy , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.deploy
[POST] /service-docs/sys-api-source/query-api-detail , method = org.github.foxnic.web.docs.controller.ApiSourceController.queryApiDetail
[POST] /service-eam/eam-inventory-position/delete , method = com.dt.platform.eam.controller.InventoryPositionController.deleteById
[POST] /service-common/sys-code-module/generate-code , method = com.dt.platform.common.controller.CodeModuleController.generateCode
[POST] /service-eam/eam-asset-software-distribute/update , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.update
[POST] /service-eam/eam-inventory-position/delete-by-ids , method = com.dt.platform.eam.controller.InventoryPositionController.deleteByIds
[POST] /service-bpm/bpm-process-definition-file/query-list , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.queryList
[POST] /service-common/sys-code-register/update , method = com.dt.platform.common.controller.CodeRegisterController.update
[POST] /service-docs/sys-api-source/query-list , method = org.github.foxnic.web.docs.controller.ApiSourceController.queryList
[POST] /service-bpm/bpm-process-definition-file/delete , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.deleteById
[POST] /service-eam/eam-inventory-position/query-paged-list , method = com.dt.platform.eam.controller.InventoryPositionController.queryPagedList
[POST] /service-docs/sys-api-source/delete , method = org.github.foxnic.web.docs.controller.ApiSourceController.deleteById
[POST] /service-bpm/bpm-process-definition-file/delete-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.deleteByIds
[POST] /service-common/sys-code-register/save , method = com.dt.platform.common.controller.CodeRegisterController.save
[ALL] /service-eam/eam-inventory-position/export-excel , method = com.dt.platform.eam.controller.InventoryPositionController.exportExcel
[POST] /service-eam/eam-asset-software-distribute/save , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.save
[POST] /service-docs/sys-api-source/delete-by-ids , method = org.github.foxnic.web.docs.controller.ApiSourceController.deleteByIds
[ALL] /service-eam/eam-inventory-position/export-excel-template , method = com.dt.platform.eam.controller.InventoryPositionController.exportExcelTemplate
[POST] /service-common/sys-code-register/insert , method = com.dt.platform.common.controller.CodeRegisterController.insert
[ALL] /service-eam/eam-inventory-position/import-excel , method = com.dt.platform.eam.controller.InventoryPositionController.importExcel
[POST] /service-common/sys-code-register/get-by-id , method = com.dt.platform.common.controller.CodeRegisterController.getById
[POST] /service-docs/sys-api-source/query-paged-list , method = org.github.foxnic.web.docs.controller.ApiSourceController.queryPagedList
[POST] /service-bpm/bpm-process-definition-file/query-paged-list , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.queryPagedList
[POST] /service-eam/eam-inventory-user/update , method = com.dt.platform.eam.controller.InventoryUserController.update
[POST] /service-eam/eam-asset-software-distribute/insert , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.insert
[POST] /service-common/sys-code-register/get-by-ids , method = com.dt.platform.common.controller.CodeRegisterController.getByIds
[ALL] /service-bpm/bpm-process-definition-file/export-excel , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.exportExcel
[POST] /service-eam/eam-asset-software-distribute/get-by-id , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.getById
[POST] /service-eam/eam-inventory-user/save , method = com.dt.platform.eam.controller.InventoryUserController.save
[ALL] /business/system/sequence/sequence_form.html , method = org.github.foxnic.web.system.page.SequencePageController.form
[ALL] /service-bpm/bpm-process-definition-file/export-excel-template , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.exportExcelTemplate
[POST] /service-common/sys-code-register/query-list , method = com.dt.platform.common.controller.CodeRegisterController.queryList
[POST] /service-eam/eam-asset-software-distribute/get-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.getByIds
[ALL] /service-bpm/bpm-process-definition-file/import-excel , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionFileController.importExcel
[ALL] /business/system/sequence/sequence_list.html , method = org.github.foxnic.web.system.page.SequencePageController.list
[POST] /service-eam/eam-inventory-user/insert , method = com.dt.platform.eam.controller.InventoryUserController.insert
[POST] /service-common/sys-code-register/delete , method = com.dt.platform.common.controller.CodeRegisterController.deleteById
[ALL] /business/system/dict_item/dict_item_form.html , method = org.github.foxnic.web.system.page.DictItemPageController.form
[ALL] /service-eam/eam-asset-software-distribute/confirm-operation , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.confirmOperation
[ALL] /business/system/dict_item/dict_item_list.html , method = org.github.foxnic.web.system.page.DictItemPageController.list
[POST] /service-bpm/bpm-task/update , method = org.github.foxnic.web.bpm.controller.TaskController.update
[POST] /service-eam/eam-inventory-user/get-by-id , method = com.dt.platform.eam.controller.InventoryUserController.getById
[POST] /service-common/sys-code-register/delete-by-ids , method = com.dt.platform.common.controller.CodeRegisterController.deleteByIds
[ALL] /business/system/profile/profile_form.html , method = org.github.foxnic.web.system.page.ProfilePageController.form
[ALL] /business/system/profile/profile_list.html , method = org.github.foxnic.web.system.page.ProfilePageController.list
[POST] /service-eam/eam-inventory-user/get-by-ids , method = com.dt.platform.eam.controller.InventoryUserController.getByIds
[POST] /service-bpm/bpm-task/save , method = org.github.foxnic.web.bpm.controller.TaskController.save
[POST] /service-common/sys-code-register/query-paged-list , method = com.dt.platform.common.controller.CodeRegisterController.queryPagedList
[ALL] /business/system/code_example_mulit_pk/code_example_mulit_pk_form.html , method = org.github.foxnic.web.system.page.CodeExampleMulitPkPageController.form
[POST] /service-eam/eam-asset-software-distribute/query-list , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.queryList
[ALL] /service-common/sys-code-register/export-excel , method = com.dt.platform.common.controller.CodeRegisterController.exportExcel
[ALL] /business/system/code_example_mulit_pk/code_example_mulit_pk_list.html , method = org.github.foxnic.web.system.page.CodeExampleMulitPkPageController.list
[POST] /service-eam/eam-inventory-user/query-list , method = com.dt.platform.eam.controller.InventoryUserController.queryList
[POST] /service-eam/eam-asset-software-distribute/delete , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.deleteById
[POST] /service-bpm/bpm-task/insert , method = org.github.foxnic.web.bpm.controller.TaskController.insert
[ALL] /service-common/sys-code-register/export-excel-template , method = com.dt.platform.common.controller.CodeRegisterController.exportExcelTemplate
[ALL] /business/system/busi_role/busi_role_form.html , method = org.github.foxnic.web.system.page.BusiRolePageController.form
[POST] /service-eam/eam-inventory-user/delete , method = com.dt.platform.eam.controller.InventoryUserController.deleteById
[ALL] /service-common/sys-code-register/import-excel , method = com.dt.platform.common.controller.CodeRegisterController.importExcel
[POST] /service-bpm/bpm-task/get-by-id , method = org.github.foxnic.web.bpm.controller.TaskController.getById
[POST] /service-eam/eam-asset-software-distribute/delete-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.deleteByIds
[ALL] /business/system/busi_role/busi_role_list.html , method = org.github.foxnic.web.system.page.BusiRolePageController.list
[POST] /service-eam/eam-inventory-user/delete-by-ids , method = com.dt.platform.eam.controller.InventoryUserController.deleteByIds
[GET] /console/pear/component/pear/css/pear-support.css , method = org.github.foxnic.web.system.theme.PearThemeSupport.pearCss
[POST] /service-bpm/bpm-task/get-by-ids , method = org.github.foxnic.web.bpm.controller.TaskController.getByIds
[POST] /service-common/sys-code-rule/update , method = com.dt.platform.common.controller.CodeRuleController.update
[GET] /console/pear/component/pear/css/pear-support.js , method = org.github.foxnic.web.system.theme.PearThemeSupport.pearJs
[POST] /service-eam/eam-inventory-user/query-paged-list , method = com.dt.platform.eam.controller.InventoryUserController.queryPagedList
[POST] /service-bpm/bpm-task/cancel-task , method = org.github.foxnic.web.bpm.controller.TaskController.cancelTask
[POST] /service-common/sys-code-rule/save , method = com.dt.platform.common.controller.CodeRuleController.save
[ALL] /service-eam/eam-inventory-user/export-excel , method = com.dt.platform.eam.controller.InventoryUserController.exportExcel
[POST] /service-eam/eam-asset-software-distribute/query-paged-list , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.queryPagedList
[POST] /service-bpm/bpm-task/process-task , method = org.github.foxnic.web.bpm.controller.TaskController.processTask
[ALL] /service-eam/eam-inventory-user/export-excel-template , method = com.dt.platform.eam.controller.InventoryUserController.exportExcelTemplate
[POST] /service-bpm/bpm-task/query-task , method = org.github.foxnic.web.bpm.controller.TaskController.queryTasks
[ALL] /service-eam/eam-asset-software-distribute/export-excel , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.exportExcel
[ALL] /service-eam/eam-inventory-user/import-excel , method = com.dt.platform.eam.controller.InventoryUserController.importExcel
[POST] /service-common/sys-code-rule/insert , method = com.dt.platform.common.controller.CodeRuleController.insert
[POST] /service-oauth/sys-menu/update , method = org.github.foxnic.web.oauth.controller.MenuController.update
[ALL] /service-eam/eam-asset-software-distribute/export-excel-template , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.exportExcelTemplate
[POST] /service-common/sys-code-rule/get-by-id , method = com.dt.platform.common.controller.CodeRuleController.getById
[POST] /service-bpm/bpm-task/query-list , method = org.github.foxnic.web.bpm.controller.TaskController.queryList
[ALL] /service-eam/eam-asset-software-distribute/import-excel , method = com.dt.platform.eam.controller.AssetSoftwareDistributeController.importExcel
[POST] /service-eam/eam-inventory-warehouse/update , method = com.dt.platform.eam.controller.InventoryWarehouseController.update
[POST] /service-common/sys-code-rule/get-by-ids , method = com.dt.platform.common.controller.CodeRuleController.getByIds
[POST] /service-bpm/bpm-task/delete , method = org.github.foxnic.web.bpm.controller.TaskController.deleteById
[POST] /service-eam/eam-asset-software-distribute-data/update , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.update
[POST] /service-eam/eam-inventory-warehouse/save , method = com.dt.platform.eam.controller.InventoryWarehouseController.save
[POST] /service-bpm/bpm-task/delete-by-ids , method = org.github.foxnic.web.bpm.controller.TaskController.deleteByIds
[POST] /service-common/sys-code-rule/query-list , method = com.dt.platform.common.controller.CodeRuleController.queryList
[POST] /service-oauth/sys-menu/save , method = org.github.foxnic.web.oauth.controller.MenuController.save
[POST] /service-eam/eam-asset-software-distribute-data/save , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.save
[POST] /service-common/sys-code-rule/delete , method = com.dt.platform.common.controller.CodeRuleController.deleteById
[POST] /service-eam/eam-inventory-warehouse/insert , method = com.dt.platform.eam.controller.InventoryWarehouseController.insert
[POST] /service-bpm/bpm-task/query-paged-list , method = org.github.foxnic.web.bpm.controller.TaskController.queryPagedList
[ALL] /service-bpm/bpm-task/export-excel , method = org.github.foxnic.web.bpm.controller.TaskController.exportExcel
[POST] /service-common/sys-code-rule/delete-by-ids , method = com.dt.platform.common.controller.CodeRuleController.deleteByIds
[POST] /service-eam/eam-inventory-warehouse/get-by-id , method = com.dt.platform.eam.controller.InventoryWarehouseController.getById
[POST] /service-eam/eam-asset-software-distribute-data/insert , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.insert
[ALL] /service-bpm/bpm-task/export-excel-template , method = org.github.foxnic.web.bpm.controller.TaskController.exportExcelTemplate
[ALL] /service-bpm/bpm-task/import-excel , method = org.github.foxnic.web.bpm.controller.TaskController.importExcel
[POST] /service-oauth/sys-menu/insert , method = org.github.foxnic.web.oauth.controller.MenuController.insert
[POST] /service-eam/eam-asset-software-distribute-data/get-by-id , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.getById
[POST] /service-eam/eam-inventory-warehouse/get-by-ids , method = com.dt.platform.eam.controller.InventoryWarehouseController.getByIds
[POST] /service-common/sys-code-rule/query-paged-list , method = com.dt.platform.common.controller.CodeRuleController.queryPagedList
[POST] /service-oauth/sys-menu/search , method = org.github.foxnic.web.oauth.controller.MenuController.search
[POST] /service-eam/eam-asset-software-distribute-data/get-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.getByIds
[ALL] /service-common/sys-code-rule/export-excel , method = com.dt.platform.common.controller.CodeRuleController.exportExcel
[POST] /service-eam/eam-inventory-warehouse/query-list , method = com.dt.platform.eam.controller.InventoryWarehouseController.queryList
[ALL] /service-common/sys-code-rule/export-excel-template , method = com.dt.platform.common.controller.CodeRuleController.exportExcelTemplate
[POST] /service-oauth/sys-menu/get-by-id , method = org.github.foxnic.web.oauth.controller.MenuController.getById
[POST] /service-bpm/bpm-process-definition-node/update , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.update
[POST] /service-eam/eam-asset-software-distribute-data/query-list , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.queryList
[ALL] /service-common/sys-code-rule/import-excel , method = com.dt.platform.common.controller.CodeRuleController.importExcel
[POST] /service-eam/eam-inventory-warehouse/delete , method = com.dt.platform.eam.controller.InventoryWarehouseController.deleteById
[POST] /service-eam/eam-asset-software-distribute-data/delete , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.deleteById
[POST] /service-oauth/sys-menu/save-hierarchy , method = org.github.foxnic.web.oauth.controller.MenuController.changeParent
[POST] /service-eam/eam-inventory-warehouse/delete-by-ids , method = com.dt.platform.eam.controller.InventoryWarehouseController.deleteByIds
[POST] /service-bpm/bpm-process-definition-node/save , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.save
[POST] /service-eam/eam-asset-software-distribute-data/delete-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.deleteByIds
[POST] /service-common/sys-licence-switch/update , method = com.dt.platform.common.controller.LicenceSwitchController.update
[POST] /service-eam/eam-inventory-warehouse/query-paged-list , method = com.dt.platform.eam.controller.InventoryWarehouseController.queryPagedList
[POST] /service-oauth/sys-menu/query-nodes , method = org.github.foxnic.web.oauth.controller.MenuController.queryNodes
[ALL] /service-eam/eam-inventory-warehouse/export-excel , method = com.dt.platform.eam.controller.InventoryWarehouseController.exportExcel
[POST] /service-eam/eam-asset-software-distribute-data/query-paged-list , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.queryPagedList
[POST] /service-bpm/bpm-process-definition-node/insert , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.insert
[POST] /service-common/sys-licence-switch/save , method = com.dt.platform.common.controller.LicenceSwitchController.save
[ALL] /service-eam/eam-inventory-warehouse/export-excel-template , method = com.dt.platform.eam.controller.InventoryWarehouseController.exportExcelTemplate
[ALL] /service-eam/eam-asset-software-distribute-data/export-excel , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.exportExcel
[POST] /service-bpm/bpm-process-definition-node/get-by-id , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.getById
[ALL] /service-eam/eam-inventory-warehouse/import-excel , method = com.dt.platform.eam.controller.InventoryWarehouseController.importExcel
[ALL] /service-eam/eam-asset-software-distribute-data/export-excel-template , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.exportExcelTemplate
[POST] /service-bpm/bpm-process-definition-node/get-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.getByIds
[POST] /service-common/sys-licence-switch/insert , method = com.dt.platform.common.controller.LicenceSwitchController.insert
[ALL] /service-eam/eam-asset-software-distribute-data/import-excel , method = com.dt.platform.eam.controller.AssetSoftwareDistributeDataController.importExcel
[POST] /service-eam/eam-maintain-group/update , method = com.dt.platform.eam.controller.MaintainGroupController.update
[POST] /service-common/sys-licence-switch/get-by-id , method = com.dt.platform.common.controller.LicenceSwitchController.getById
[POST] /service-oauth/sys-menu/query-list , method = org.github.foxnic.web.oauth.controller.MenuController.queryList
[POST] /service-bpm/bpm-process-definition-node/query-list , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.queryList
[POST] /service-common/sys-licence-switch/get-by-ids , method = com.dt.platform.common.controller.LicenceSwitchController.getByIds
[POST] /service-oauth/sys-menu/delete , method = org.github.foxnic.web.oauth.controller.MenuController.deleteById
[POST] /service-bpm/bpm-process-definition-node/delete , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.deleteById
[POST] /service-eam/eam-maintain-group/save , method = com.dt.platform.eam.controller.MaintainGroupController.save
[POST] /service-oauth/sys-menu/batch-delete , method = org.github.foxnic.web.oauth.controller.MenuController.deleteByIds
[POST] /service-bpm/bpm-process-definition-node/delete-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.deleteByIds
[POST] /service-eam/eam-asset-software-maintenance/update , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.update
[POST] /service-common/sys-licence-switch/query-list , method = com.dt.platform.common.controller.LicenceSwitchController.queryList
[POST] /service-eam/eam-maintain-group/insert , method = com.dt.platform.eam.controller.MaintainGroupController.insert
[POST] /service-common/sys-licence-switch/delete , method = com.dt.platform.common.controller.LicenceSwitchController.deleteById
[POST] /service-eam/eam-maintain-group/get-by-id , method = com.dt.platform.eam.controller.MaintainGroupController.getById
[POST] /service-bpm/bpm-process-definition-node/query-paged-list , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionNodeController.queryPagedList
[POST] /service-common/sys-licence-switch/delete-by-ids , method = com.dt.platform.common.controller.LicenceSwitchController.deleteByIds
[POST] /service-eam/eam-maintain-group/get-by-ids , method = com.dt.platform.eam.controller.MaintainGroupController.getByIds
[POST] /service-bpm/bpm-demo-business-case/update , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.update
[POST] /service-eam/eam-asset-software-maintenance/save , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.save
[POST] /service-oauth/sys-menu/query-paged-list , method = org.github.foxnic.web.oauth.controller.MenuController.queryPagedList
[POST] /service-eam/eam-maintain-group/query-list , method = com.dt.platform.eam.controller.MaintainGroupController.queryList
[POST] /service-common/sys-licence-switch/query-paged-list , method = com.dt.platform.common.controller.LicenceSwitchController.queryPagedList
[POST] /security/login , method = org.github.foxnic.web.oauth.controller.SecurityController.login
[ALL] /service-common/sys-licence-switch/export-excel , method = com.dt.platform.common.controller.LicenceSwitchController.exportExcel
[POST] /service-bpm/bpm-demo-business-case/save , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.save
[POST] /service-eam/eam-maintain-group/delete , method = com.dt.platform.eam.controller.MaintainGroupController.deleteById
[ALL] /service-common/sys-licence-switch/export-excel-template , method = com.dt.platform.common.controller.LicenceSwitchController.exportExcelTemplate
[ALL] /service-common/sys-licence-switch/import-excel , method = com.dt.platform.common.controller.LicenceSwitchController.importExcel
[POST] /service-eam/eam-maintain-group/delete-by-ids , method = com.dt.platform.eam.controller.MaintainGroupController.deleteByIds
[POST] /service-bpm/bpm-demo-business-case/insert , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.insert
[POST] /service-eam/eam-asset-software-maintenance/insert , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.insert
[POST] /service-common/sys-licence-switch/switch-enable , method = com.dt.platform.common.controller.LicenceSwitchController.switchEnable
[POST] /service-oauth/sys-user/update , method = org.github.foxnic.web.oauth.controller.UserController.update
[POST] /service-eam/eam-asset-software-maintenance/get-by-id , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.getById
[POST] /service-bpm/bpm-demo-business-case/get-by-id , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.getById
[POST] /service-eam/eam-maintain-group/query-paged-list , method = com.dt.platform.eam.controller.MaintainGroupController.queryPagedList
[ALL] /service-eam/eam-maintain-group/export-excel , method = com.dt.platform.eam.controller.MaintainGroupController.exportExcel
[POST] /service-bpm/bpm-demo-business-case/get-by-ids , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.getByIds
[POST] /service-eam/eam-asset-software-maintenance/get-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.getByIds
[POST] /service-common/sys-log-collect/update , method = com.dt.platform.common.controller.LogCollectController.update
[ALL] /service-eam/eam-maintain-group/export-excel-template , method = com.dt.platform.eam.controller.MaintainGroupController.exportExcelTemplate
[POST] /service-bpm/bpm-demo-business-case/bpm-callback , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.onProcessCallback
[ALL] /service-eam/eam-asset-software-maintenance/confirm-operation , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.confirmOperation
[ALL] /service-eam/eam-maintain-group/import-excel , method = com.dt.platform.eam.controller.MaintainGroupController.importExcel
[POST] /service-common/sys-log-collect/collect , method = com.dt.platform.common.controller.LogCollectController.collect
[POST] /service-oauth/sys-user/save , method = org.github.foxnic.web.oauth.controller.UserController.save
[POST] /service-bpm/bpm-demo-business-case/query-list , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.queryList
[POST] /service-common/sys-log-collect/save , method = com.dt.platform.common.controller.LogCollectController.save
[POST] /service-bpm/bpm-demo-business-case/delete , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.deleteById
[POST] /service-bpm/bpm-demo-business-case/delete-by-ids , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.deleteByIds
[POST] /service-eam/eam-asset-software-maintenance/query-list , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.queryList
[POST] /service-oauth/sys-user/insert , method = org.github.foxnic.web.oauth.controller.UserController.insert
[POST] /service-common/sys-log-collect/insert , method = com.dt.platform.common.controller.LogCollectController.insert
[POST] /service-eam/eam-maintain-plan/update , method = com.dt.platform.eam.controller.MaintainPlanController.update
[POST] /service-eam/eam-asset-software-maintenance/delete , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.deleteById
[POST] /service-oauth/sys-user/get-by-id , method = org.github.foxnic.web.oauth.controller.UserController.getById
[POST] /service-bpm/bpm-demo-business-case/query-paged-list , method = org.github.foxnic.web.bpm.controller.DemoBusinessCaseController.queryPagedList
[POST] /service-common/sys-log-collect/get-by-id , method = com.dt.platform.common.controller.LogCollectController.getById
[POST] /service-eam/eam-maintain-plan/execute , method = com.dt.platform.eam.controller.MaintainPlanController.execute
[POST] /service-oauth/sys-user/get-by-ids , method = org.github.foxnic.web.oauth.controller.UserController.getByIds
[POST] /service-eam/eam-asset-software-maintenance/delete-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.deleteByIds
[POST] /service-common/sys-log-collect/get-by-ids , method = com.dt.platform.common.controller.LogCollectController.getByIds
[POST] /service-eam/eam-maintain-plan/start , method = com.dt.platform.eam.controller.MaintainPlanController.start
[POST] /service-bpm/bpm-catalog/update , method = org.github.foxnic.web.bpm.controller.CatalogController.update
[POST] /service-oauth/sys-user/get-by-account , method = org.github.foxnic.web.oauth.controller.UserController.getByAccount
[POST] /service-eam/eam-maintain-plan/stop , method = com.dt.platform.eam.controller.MaintainPlanController.stop
[POST] /service-oauth/sys-user/change-passwd , method = org.github.foxnic.web.oauth.controller.UserController.changePasswd
[POST] /service-common/sys-log-collect/query-list , method = com.dt.platform.common.controller.LogCollectController.queryList
[POST] /security/get-system-login-page , method = org.github.foxnic.web.oauth.controller.UserController.getSystemLoginPage
[POST] /service-bpm/bpm-catalog/save , method = org.github.foxnic.web.bpm.controller.CatalogController.save
[POST] /service-common/sys-log-collect/delete , method = com.dt.platform.common.controller.LogCollectController.deleteById
[POST] /service-eam/eam-asset-software-maintenance/query-paged-list , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.queryPagedList
[ALL] /service-eam/eam-asset-software-maintenance/export-excel , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.exportExcel
[POST] /service-common/sys-log-collect/delete-by-ids , method = com.dt.platform.common.controller.LogCollectController.deleteByIds
[POST] /service-bpm/bpm-catalog/insert , method = org.github.foxnic.web.bpm.controller.CatalogController.insert
[ALL] /service-eam/eam-asset-software-maintenance/export-excel-template , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.exportExcelTemplate
[POST] /service-eam/eam-maintain-plan/save , method = com.dt.platform.eam.controller.MaintainPlanController.save
[ALL] /service-eam/eam-asset-software-maintenance/import-excel , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceController.importExcel
[POST] /service-oauth/sys-user/query-list , method = org.github.foxnic.web.oauth.controller.UserController.queryList
[POST] /service-bpm/bpm-catalog/get-by-id , method = org.github.foxnic.web.bpm.controller.CatalogController.getById
[POST] /service-common/sys-log-collect/query-paged-list , method = com.dt.platform.common.controller.LogCollectController.queryPagedList
[POST] /service-oauth/sys-user/delete , method = org.github.foxnic.web.oauth.controller.UserController.deleteById
[POST] /service-bpm/bpm-catalog/get-by-ids , method = org.github.foxnic.web.bpm.controller.CatalogController.getByIds
[POST] /service-common/mobile/login-index , method = com.dt.platform.common.controller.MobileInfoController.loginIndex
[POST] /service-eam/eam-asset-software-maintenance-detail/update , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.update
[POST] /service-oauth/sys-user/batch-delete , method = org.github.foxnic.web.oauth.controller.UserController.deleteByIds
[POST] /service-eam/eam-maintain-plan/insert , method = com.dt.platform.eam.controller.MaintainPlanController.insert
[POST] /service-eam/eam-asset-software-maintenance-detail/save , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.save
[POST] /service-bpm/bpm-catalog/query-list , method = org.github.foxnic.web.bpm.controller.CatalogController.queryList
[POST] /service-eam/eam-maintain-plan/get-by-id , method = com.dt.platform.eam.controller.MaintainPlanController.getById
[POST] /service-common/sys-node-load/update , method = com.dt.platform.common.controller.NodeLoadController.update
[POST] /service-bpm/bpm-catalog/delete , method = org.github.foxnic.web.bpm.controller.CatalogController.deleteById
[POST] /service-eam/eam-asset-software-maintenance-detail/insert , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.insert
[POST] /service-oauth/sys-user/query-paged-list , method = org.github.foxnic.web.oauth.controller.UserController.queryPagedList
[POST] /security/get-session-user , method = org.github.foxnic.web.oauth.controller.UserController.getSessionUser
[POST] /service-bpm/bpm-catalog/delete-by-ids , method = org.github.foxnic.web.bpm.controller.CatalogController.deleteByIds
[POST] /service-eam/eam-asset-software-maintenance-detail/get-by-id , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.getById
[POST] /service-common/sys-node-load/save , method = com.dt.platform.common.controller.NodeLoadController.save
[POST] /service-eam/eam-asset-software-maintenance-detail/get-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.getByIds
[POST] /service-oauth/sys-user/update-profile , method = org.github.foxnic.web.oauth.controller.UserController.updateProfile
[POST] /service-bpm/bpm-catalog/query-paged-list , method = org.github.foxnic.web.bpm.controller.CatalogController.queryPagedList
[POST] /service-oauth/sys-user/reset-passwd , method = org.github.foxnic.web.oauth.controller.UserController.resetPasswd
[POST] /service-eam/eam-maintain-plan/get-by-ids , method = com.dt.platform.eam.controller.MaintainPlanController.getByIds
[POST] /service-eam/eam-asset-software-maintenance-detail/query-list , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.queryList
[POST] /service-bpm/bpm-process-initiator/update , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.update
[POST] /service-common/sys-node-load/insert , method = com.dt.platform.common.controller.NodeLoadController.insert
[POST] /service-eam/eam-asset-software-maintenance-detail/delete , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.deleteById
[POST] /service-oauth/sys-role/update , method = org.github.foxnic.web.oauth.controller.RoleController.update
[POST] /service-bpm/bpm-process-initiator/save , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.save
[POST] /service-common/sys-node-load/get-by-id , method = com.dt.platform.common.controller.NodeLoadController.getById
[POST] /service-eam/eam-asset-software-maintenance-detail/delete-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.deleteByIds
[POST] /service-common/sys-node-load/get-by-ids , method = com.dt.platform.common.controller.NodeLoadController.getByIds
[POST] /service-bpm/bpm-process-initiator/insert , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.insert
[POST] /service-oauth/sys-role/save , method = org.github.foxnic.web.oauth.controller.RoleController.save
[POST] /service-eam/eam-maintain-plan/query-list , method = com.dt.platform.eam.controller.MaintainPlanController.queryList
[POST] /service-common/sys-node-load/load-data , method = com.dt.platform.common.controller.NodeLoadController.loadData
[POST] /service-eam/eam-asset-software-maintenance-detail/query-paged-list , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.queryPagedList
[POST] /service-bpm/bpm-process-initiator/get-by-id , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.getById
[POST] /service-eam/eam-maintain-plan/delete , method = com.dt.platform.eam.controller.MaintainPlanController.deleteById
[ALL] /service-eam/eam-asset-software-maintenance-detail/export-excel , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.exportExcel
[POST] /service-oauth/sys-role/insert , method = org.github.foxnic.web.oauth.controller.RoleController.insert
[POST] /service-bpm/bpm-process-initiator/get-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.getByIds
[ALL] /service-eam/eam-asset-software-maintenance-detail/export-excel-template , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.exportExcelTemplate
[POST] /service-eam/eam-maintain-plan/delete-by-ids , method = com.dt.platform.eam.controller.MaintainPlanController.deleteByIds
[POST] /service-oauth/sys-role/get-by-id , method = org.github.foxnic.web.oauth.controller.RoleController.getById
[ALL] /service-eam/eam-asset-software-maintenance-detail/import-excel , method = com.dt.platform.eam.controller.AssetSoftwareMaintenanceDetailController.importExcel
[POST] /service-bpm/bpm-process-initiator/query-list , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.queryList
[POST] /service-common/sys-node-load/query-list , method = com.dt.platform.common.controller.NodeLoadController.queryList
[POST] /service-oauth/sys-role/get-by-ids , method = org.github.foxnic.web.oauth.controller.RoleController.getByIds
[POST] /service-bpm/bpm-process-initiator/delete , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.deleteById
[POST] /service-common/sys-node-load/delete , method = com.dt.platform.common.controller.NodeLoadController.deleteById
[POST] /service-eam/eam-asset-status/update , method = com.dt.platform.eam.controller.AssetStatusController.update
[POST] /service-bpm/bpm-process-initiator/delete-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.deleteByIds
[POST] /service-oauth/sys-role/query-list , method = org.github.foxnic.web.oauth.controller.RoleController.queryList
[POST] /service-common/sys-node-load/delete-by-ids , method = com.dt.platform.common.controller.NodeLoadController.deleteByIds
[POST] /service-eam/eam-maintain-plan/query-paged-list , method = com.dt.platform.eam.controller.MaintainPlanController.queryPagedList
[POST] /service-bpm/bpm-process-initiator/query-paged-list , method = org.github.foxnic.web.bpm.controller.ProcessInitiatorController.queryPagedList
[POST] /service-eam/eam-asset-status/save , method = com.dt.platform.eam.controller.AssetStatusController.save
[POST] /service-oauth/sys-role/delete , method = org.github.foxnic.web.oauth.controller.RoleController.deleteById
[ALL] /service-eam/eam-maintain-plan/export-excel , method = com.dt.platform.eam.controller.MaintainPlanController.exportExcel
[POST] /service-system/unit-test/bpm/deploy , method = org.github.foxnic.web.bpm.controller.BpmUnitTestController.deploy
[POST] /service-oauth/sys-role/delete-by-ids , method = org.github.foxnic.web.oauth.controller.RoleController.deleteByIds
[ALL] /service-eam/eam-maintain-plan/export-excel-template , method = com.dt.platform.eam.controller.MaintainPlanController.exportExcelTemplate
[POST] /service-eam/eam-asset-status/insert , method = com.dt.platform.eam.controller.AssetStatusController.insert
[ALL] /service-eam/eam-maintain-plan/import-excel , method = com.dt.platform.eam.controller.MaintainPlanController.importExcel
[POST] /service-common/sys-node-load/query-paged-list , method = com.dt.platform.common.controller.NodeLoadController.queryPagedList
[POST] /service-bpm/bpm-process-error/update , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.update
[POST] /service-oauth/sys-role/query-paged-list , method = org.github.foxnic.web.oauth.controller.RoleController.queryPagedList
[POST] /service-eam/eam-asset-status/get-by-id , method = com.dt.platform.eam.controller.AssetStatusController.getById
[POST] /service-eam/eam-maintain-plan/create-task , method = com.dt.platform.eam.controller.MaintainPlanController.createTask
[POST] /service-oauth/sys-role/export-excel , method = org.github.foxnic.web.oauth.controller.RoleController.exportExcel
[POST] /service-eam/eam-asset-status/get-by-ids , method = com.dt.platform.eam.controller.AssetStatusController.getByIds
[POST] /service-common/sys-tpl-file/update , method = com.dt.platform.common.controller.TplFileController.update
[POST] /service-oauth/sys-role/export-excel-template , method = org.github.foxnic.web.oauth.controller.RoleController.exportExcelTemplate
[POST] /service-bpm/bpm-process-error/save , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.save
[POST] /service-oauth/sys-role/import-excel , method = org.github.foxnic.web.oauth.controller.RoleController.importExcel
[POST] /service-eam/eam-maintain-project/update , method = com.dt.platform.eam.controller.MaintainProjectController.update
[POST] /service-eam/eam-asset-status/query-list , method = com.dt.platform.eam.controller.AssetStatusController.queryList
[POST] /service-common/sys-tpl-file/save , method = com.dt.platform.common.controller.TplFileController.save
[POST] /service-bpm/bpm-process-error/insert , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.insert
[POST] /service-eam/eam-asset-status/delete , method = com.dt.platform.eam.controller.AssetStatusController.deleteById
[POST] /service-oauth/sys-session-online/update , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.update
[POST] /service-bpm/bpm-process-error/get-by-id , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.getById
[POST] /service-eam/eam-asset-status/delete-by-ids , method = com.dt.platform.eam.controller.AssetStatusController.deleteByIds
[POST] /service-eam/eam-maintain-project/save , method = com.dt.platform.eam.controller.MaintainProjectController.save
[POST] /service-common/sys-tpl-file/insert , method = com.dt.platform.common.controller.TplFileController.insert
[POST] /service-bpm/bpm-process-error/get-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.getByIds
[POST] /service-bpm/bpm-process-error/sync-errors , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.syncCamundaErrors
[POST] /service-common/sys-tpl-file/get-by-id , method = com.dt.platform.common.controller.TplFileController.getById
[POST] /service-eam/eam-asset-status/query-paged-list , method = com.dt.platform.eam.controller.AssetStatusController.queryPagedList
[POST] /service-oauth/sys-session-online/save , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.save
[POST] /service-common/sys-tpl-file/get-by-ids , method = com.dt.platform.common.controller.TplFileController.getByIds
[POST] /service-eam/eam-maintain-project/insert , method = com.dt.platform.eam.controller.MaintainProjectController.insert
[POST] /service-bpm/bpm-process-error/query-list , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.queryList
[POST] /service-eam/eam-asset-status-rule/update , method = com.dt.platform.eam.controller.AssetStatusRuleController.update
[POST] /service-eam/eam-maintain-project/selected , method = com.dt.platform.eam.controller.MaintainProjectController.selected
[POST] /service-common/sys-tpl-file/get-tpl-file-stream-by-code , method = com.dt.platform.common.controller.TplFileController.getTplFileStreamByCode
[POST] /service-bpm/bpm-process-error/delete , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.deleteById
[POST] /service-oauth/sys-session-online/insert , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.insert
[POST] /service-eam/eam-asset-status-rule/save , method = com.dt.platform.eam.controller.AssetStatusRuleController.save
[POST] /service-eam/eam-maintain-project/get-by-id , method = com.dt.platform.eam.controller.MaintainProjectController.getById
[POST] /service-bpm/bpm-process-error/delete-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.deleteByIds
[POST] /service-oauth/sys-session-online/get-by-id , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.getById
[POST] /service-common/sys-tpl-file/query-list , method = com.dt.platform.common.controller.TplFileController.queryList
[POST] /service-eam/eam-maintain-project/get-by-ids , method = com.dt.platform.eam.controller.MaintainProjectController.getByIds
[POST] /service-eam/eam-asset-status-rule/insert , method = com.dt.platform.eam.controller.AssetStatusRuleController.insert
[POST] /service-common/sys-tpl-file/delete , method = com.dt.platform.common.controller.TplFileController.deleteById
[POST] /service-eam/eam-asset-status-rule/get-by-id , method = com.dt.platform.eam.controller.AssetStatusRuleController.getById
[POST] /service-bpm/bpm-process-error/query-paged-list , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.queryPagedList
[ALL] /service-bpm/bpm-process-error/export-excel , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.exportExcel
[POST] /service-common/sys-tpl-file/delete-by-ids , method = com.dt.platform.common.controller.TplFileController.deleteByIds
[POST] /service-eam/eam-asset-status-rule/get-by-ids , method = com.dt.platform.eam.controller.AssetStatusRuleController.getByIds
[POST] /service-oauth/sys-session-online/query-list , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.queryList
[ALL] /service-bpm/bpm-process-error/export-excel-template , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.exportExcelTemplate
[ALL] /service-bpm/bpm-process-error/import-excel , method = org.github.foxnic.web.bpm.controller.ProcessErrorController.importExcel
[POST] /service-oauth/sys-session-online/delete , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.deleteById
[ALL] /service-bpm/identity/identities , method = org.github.foxnic.web.bpm.controller.BpmIdentityController.getIdentities
[POST] /service-eam/eam-asset-status-rule/query-list , method = com.dt.platform.eam.controller.AssetStatusRuleController.queryList
[POST] /service-common/sys-tpl-file/query-paged-list , method = com.dt.platform.common.controller.TplFileController.queryPagedList
[POST] /service-oauth/sys-session-online/batch-delete , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.deleteByIds
[POST] /service-eam/eam-maintain-project/query-list , method = com.dt.platform.eam.controller.MaintainProjectController.queryList
[POST] /service-eam/eam-asset-status-rule/delete , method = com.dt.platform.eam.controller.AssetStatusRuleController.deleteById
[ALL] /service-common/sys-tpl-file/export-excel , method = com.dt.platform.common.controller.TplFileController.exportExcel
[POST] /service-bpm/bpm-demo-leave/update , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.update
[POST] /service-eam/eam-maintain-project/delete , method = com.dt.platform.eam.controller.MaintainProjectController.deleteById
[ALL] /service-common/sys-tpl-file/export-excel-template , method = com.dt.platform.common.controller.TplFileController.exportExcelTemplate
[POST] /service-eam/eam-asset-status-rule/delete-by-ids , method = com.dt.platform.eam.controller.AssetStatusRuleController.deleteByIds
[POST] /service-oauth/sys-session-online/query-paged-list , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.queryPagedList
[ALL] /service-common/sys-tpl-file/import-excel , method = com.dt.platform.common.controller.TplFileController.importExcel
[POST] /service-bpm/bpm-demo-leave/save , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.save
[POST] /service-eam/eam-maintain-project/delete-by-ids , method = com.dt.platform.eam.controller.MaintainProjectController.deleteByIds
[ALL] /business/common/auto_module_role_item/auto_module_role_item_form.html , method = com.dt.platform.common.page.AutoModuleRoleItemPageController.form
[POST] /service-oauth/sys-menu-fork/update , method = org.github.foxnic.web.oauth.controller.MenuForkController.update
[ALL] /business/common/auto_module_role_item/auto_module_role_item_list.html , method = com.dt.platform.common.page.AutoModuleRoleItemPageController.list
[POST] /service-eam/eam-asset-status-rule/query-paged-list , method = com.dt.platform.eam.controller.AssetStatusRuleController.queryPagedList
[POST] /service-eam/eam-maintain-project/query-paged-list-by-select , method = com.dt.platform.eam.controller.MaintainProjectController.queryPagedList
[POST] /service-bpm/bpm-demo-leave/insert , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.insert
[ALL] /business/common/auto_module_role/auto_module_role_form.html , method = com.dt.platform.common.page.AutoModuleRolePageController.form
[POST] /service-oauth/sys-menu-fork/save , method = org.github.foxnic.web.oauth.controller.MenuForkController.save
[POST] /service-eam/eam-asset-status-rule-v/update , method = com.dt.platform.eam.controller.AssetStatusRuleVController.update
[POST] /service-bpm/bpm-demo-leave/get-by-id , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.getById
[ALL] /business/common/auto_module_role/auto_module_role_list.html , method = com.dt.platform.common.page.AutoModuleRolePageController.list
[POST] /service-bpm/bpm-demo-leave/get-by-ids , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.getByIds
[POST] /service-oauth/sys-menu-fork/insert , method = org.github.foxnic.web.oauth.controller.MenuForkController.insert
[POST] /service-eam/eam-asset-status-rule-v/save , method = com.dt.platform.eam.controller.AssetStatusRuleVController.save
[ALL] /business/common/auto_module_role/permission_downgrade_list.html , method = com.dt.platform.common.page.AutoModuleRolePageController.permlist
[POST] /service-bpm/bpm-demo-leave/bpm-callback , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.onProcessCallback
[POST] /service-oauth/sys-menu-fork/get-by-id , method = org.github.foxnic.web.oauth.controller.MenuForkController.getById
[POST] /service-eam/eam-asset-status-rule-v/insert , method = com.dt.platform.eam.controller.AssetStatusRuleVController.insert
[POST] /service-oauth/sys-menu-fork/get-by-ids , method = org.github.foxnic.web.oauth.controller.MenuForkController.getByIds
[POST] /service-eam/eam-asset-status-rule-v/get-by-id , method = com.dt.platform.eam.controller.AssetStatusRuleVController.getById
[POST] /service-bpm/bpm-demo-leave/query-list , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.queryList
[ALL] /business/common/auto_role_grant_rcd/auto_role_grant_rcd_form.html , method = com.dt.platform.common.page.AutoRoleGrantRcdPageController.form
[POST] /service-eam/eam-maintain-project/query-paged-list , method = com.dt.platform.eam.controller.MaintainProjectController.queryPagedList
[POST] /service-bpm/bpm-demo-leave/delete , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.deleteById
[POST] /service-oauth/sys-menu-fork/query-list , method = org.github.foxnic.web.oauth.controller.MenuForkController.queryList
[POST] /service-eam/eam-asset-status-rule-v/get-by-ids , method = com.dt.platform.eam.controller.AssetStatusRuleVController.getByIds
[ALL] /service-eam/eam-maintain-project/export-excel , method = com.dt.platform.eam.controller.MaintainProjectController.exportExcel
[ALL] /business/common/auto_role_grant_rcd/auto_role_grant_rcd_list.html , method = com.dt.platform.common.page.AutoRoleGrantRcdPageController.list
[ALL] /service-eam/eam-maintain-project/export-excel-template , method = com.dt.platform.eam.controller.MaintainProjectController.exportExcelTemplate
[POST] /service-oauth/sys-menu-fork/delete , method = org.github.foxnic.web.oauth.controller.MenuForkController.deleteById
[POST] /service-bpm/bpm-demo-leave/delete-by-ids , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.deleteByIds
[ALL] /business/common/auto_user_predefined/auto_user_predefined_form.html , method = com.dt.platform.common.page.AutoUserPredefinedPageController.form
[POST] /service-eam/eam-asset-status-rule-v/query-list , method = com.dt.platform.eam.controller.AssetStatusRuleVController.queryList
[ALL] /service-eam/eam-maintain-project/import-excel , method = com.dt.platform.eam.controller.MaintainProjectController.importExcel
[ALL] /business/common/auto_user_predefined/auto_user_predefined_list.html , method = com.dt.platform.common.page.AutoUserPredefinedPageController.list
[POST] /service-oauth/sys-menu-fork/delete-by-ids , method = org.github.foxnic.web.oauth.controller.MenuForkController.deleteByIds
[POST] /service-eam/eam-asset-status-rule-v/delete , method = com.dt.platform.eam.controller.AssetStatusRuleVController.deleteById
[POST] /service-bpm/bpm-demo-leave/query-paged-list , method = org.github.foxnic.web.bpm.controller.DemoLeaveController.queryPagedList
[ALL] /business/common/backup_db/backup_db_form.html , method = com.dt.platform.common.page.BackupDbPageController.form
[POST] /service-eam/eam-asset-status-rule-v/delete-by-ids , method = com.dt.platform.eam.controller.AssetStatusRuleVController.deleteByIds
[ALL] /business/common/backup_db/backup_db_list.html , method = com.dt.platform.common.page.BackupDbPageController.list
[POST] /service-oauth/sys-menu-fork/query-paged-list , method = org.github.foxnic.web.oauth.controller.MenuForkController.queryPagedList
[POST] /service-eam/eam-asset-status-rule-v/query-paged-list , method = com.dt.platform.eam.controller.AssetStatusRuleVController.queryPagedList
[ALL] /business/common/backup_db_strategy/backup_db_strategy_form.html , method = com.dt.platform.common.page.BackupDbStrategyPageController.form
[GET] /security/captcha/image/{browserId} , method = org.github.foxnic.web.oauth.controller.CaptchaController.createCode
[POST] /service-hrm/hrm-favourite-group-item/delete , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.deleteById
[POST] /service-docs/error-codes/query , method = org.github.foxnic.web.docs.controller.ErrorCodesController.query
[ALL] /business/common/backup_db_strategy/backup_db_strategy_list.html , method = com.dt.platform.common.page.BackupDbStrategyPageController.list
[POST] /service-hrm/hrm-favourite-group-item/delete-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.deleteByIds
[ALL] /business/common/code_allocation/code_allocation_form.html , method = com.dt.platform.common.page.CodeAllocationPageController.form
[ALL] /business/docs/errors/errors.html , method = org.github.foxnic.web.docs.page.ErrorCodesPageController.errors
[POST] /service-oauth/sys-resourze/update , method = org.github.foxnic.web.oauth.controller.ResourzeController.update
[POST] /service-eam/eam-asset-stock-collection/update , method = com.dt.platform.eam.controller.AssetStockCollectionController.update
[ALL] /business/common/code_allocation/code_allocation_list.html , method = com.dt.platform.common.page.CodeAllocationPageController.list
[ALL] /business/docs/api_navigator/detail.html , method = org.github.foxnic.web.docs.page.ApiPageController.detail
[ALL] /business/common/code_attr/code_attr_form.html , method = com.dt.platform.common.page.CodeAttrPageController.form
[ALL] /business/docs/api_navigator/index.html , method = org.github.foxnic.web.docs.page.ApiPageController.index
[POST] /service-hrm/hrm-favourite-group-item/query-paged-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.queryPagedList
[POST] /service-changes/chs-change-event/query-list , method = org.github.foxnic.web.changes.controller.ChangeEventController.queryList
[ALL] /business/common/code_attr/code_attr_list.html , method = com.dt.platform.common.page.CodeAttrPageController.list
[ALL] /business/docs/db_navigator/index.html , method = org.github.foxnic.web.docs.page.DBTableMetaPageController.index
[POST] /service-oauth/sys-resourze/save , method = org.github.foxnic.web.oauth.controller.ResourzeController.save
[ALL] /business/common/code_register/code_register_form.html , method = com.dt.platform.common.page.CodeRegisterPageController.form
[ALL] /business/docs/api_source/api_source_form.html , method = org.github.foxnic.web.docs.page.ApiSourcePageController.form
[POST] /service-hrm/hrm-person/update , method = org.github.foxnic.web.hrm.controller.PersonController.update
[ALL] /business/docs/api_source/api_source_list.html , method = org.github.foxnic.web.docs.page.ApiSourcePageController.list
[ALL] /business/common/code_register/code_register_list.html , method = com.dt.platform.common.page.CodeRegisterPageController.list
[POST] /service-oauth/sys-resourze/insert , method = org.github.foxnic.web.oauth.controller.ResourzeController.insert
[ALL] /business/common/code_rule/code_rule_form.html , method = com.dt.platform.common.page.CodeRulePageController.form
[POST] /service-hrm/hrm-person/save , method = org.github.foxnic.web.hrm.controller.PersonController.save
[POST] /service-oauth/sys-resourze/get-by-id , method = org.github.foxnic.web.oauth.controller.ResourzeController.getById
[ALL] /business/common/code_rule/code_rule_list.html , method = com.dt.platform.common.page.CodeRulePageController.list
[POST] /service-example/example-address/update , method = org.github.foxnic.web.example.controller.AddressController.update
[POST] /service-oauth/sys-resourze/get-by-ids , method = org.github.foxnic.web.oauth.controller.ResourzeController.getByIds
[ALL] /business/common/licence_switch/licence_switch_form.html , method = com.dt.platform.common.page.LicenceSwitchPageController.form
[POST] /service-hrm/hrm-person/insert , method = org.github.foxnic.web.hrm.controller.PersonController.insert
[ALL] /business/common/licence_switch/licence_switch_list.html , method = com.dt.platform.common.page.LicenceSwitchPageController.list
[POST] /service-example/example-address/save , method = org.github.foxnic.web.example.controller.AddressController.save
[POST] /service-hrm/hrm-person/get-by-id , method = org.github.foxnic.web.hrm.controller.PersonController.getById
[ALL] /business/common/log_collect/log_collect_form.html , method = com.dt.platform.common.page.LogCollectPageController.form
[POST] /service-oauth/sys-resourze/query-list , method = org.github.foxnic.web.oauth.controller.ResourzeController.queryList
[ALL] /business/common/log_collect/log_collect_list.html , method = com.dt.platform.common.page.LogCollectPageController.list
[POST] /service-hrm/hrm-person/get-by-ids , method = org.github.foxnic.web.hrm.controller.PersonController.getByIds
[POST] /service-example/example-address/insert , method = org.github.foxnic.web.example.controller.AddressController.insert
[POST] /service-oauth/sys-resourze/delete , method = org.github.foxnic.web.oauth.controller.ResourzeController.deleteById
[ALL] /business/common/node_load/node_load_form.html , method = com.dt.platform.common.page.NodeLoadPageController.form
[ALL] /business/common/node_load/node_load_list.html , method = com.dt.platform.common.page.NodeLoadPageController.list
[POST] /service-example/example-address/get-by-id , method = org.github.foxnic.web.example.controller.AddressController.getById
[POST] /service-oauth/sys-resourze/delete-by-ids , method = org.github.foxnic.web.oauth.controller.ResourzeController.deleteByIds
[POST] /service-hrm/hrm-person/query-list , method = org.github.foxnic.web.hrm.controller.PersonController.queryList
[ALL] /business/common/node_load/node_load_dashboard.html , method = com.dt.platform.common.page.NodeLoadPageController.dashboard
[POST] /service-example/example-address/get-by-ids , method = org.github.foxnic.web.example.controller.AddressController.getByIds
[ALL] /business/common/tpl_file/tpl_file_form.html , method = com.dt.platform.common.page.TplFilePageController.form
[POST] /service-hrm/hrm-person/delete , method = org.github.foxnic.web.hrm.controller.PersonController.deleteById
[ALL] /business/common/tpl_file/tpl_file_list.html , method = com.dt.platform.common.page.TplFilePageController.list
[GET] /service-example/example-address/new-api-name-1 , method = org.github.foxnic.web.example.controller.AddressController.newApiName1
[POST] /service-eam/eam-maintain-project/query-paged-list-by-selected , method = com.dt.platform.eam.controller.MaintainProjectController.queryPagedListBySelected
[POST] /service-oauth/sys-resourze/query-paged-list , method = org.github.foxnic.web.oauth.controller.ResourzeController.queryPagedList
[POST] /service-hrm/hrm-person/delete-by-ids , method = org.github.foxnic.web.hrm.controller.PersonController.deleteByIds
[POST] /service-oauth/sys-resourze/export-excel , method = org.github.foxnic.web.oauth.controller.ResourzeController.exportExcel
[POST] /service-example/example-address/new-api-name-2 , method = org.github.foxnic.web.example.controller.AddressController.newApiName2
[POST] /service-oauth/sys-resourze/export-excel-template , method = org.github.foxnic.web.oauth.controller.ResourzeController.exportExcelTemplate
[POST] /service-hrm/hrm-person/query-paged-list , method = org.github.foxnic.web.hrm.controller.PersonController.queryPagedList
[POST] /service-eam/eam-maintain-project-select/update , method = com.dt.platform.eam.controller.MaintainProjectSelectController.update
[POST] /service-oauth/sys-resourze/import-excel , method = org.github.foxnic.web.oauth.controller.ResourzeController.importExcel
[POST] /service-knowledgebase/kn-category/update , method = com.dt.platform.knowledgebase.controller.CategoryController.update
[POST] /service-example/example-address/query-list , method = org.github.foxnic.web.example.controller.AddressController.queryList
[ALL] /business/oauth/oauth_client/oauth_client_form.html , method = org.github.foxnic.web.oauth.page.OauthClientPageController.form
[POST] /service-example/example-address/delete , method = org.github.foxnic.web.example.controller.AddressController.deleteById
[POST] /service-eam/eam-maintain-project-select/save , method = com.dt.platform.eam.controller.MaintainProjectSelectController.save
[ALL] /business/oauth/oauth_client/oauth_client_list.html , method = org.github.foxnic.web.oauth.page.OauthClientPageController.list
[POST] /service-hrm/hrm-position/update , method = org.github.foxnic.web.hrm.controller.PositionController.update
[POST] /service-knowledgebase/kn-category/save , method = com.dt.platform.knowledgebase.controller.CategoryController.save
[ALL] /business/oauth/menu/menu_form.html , method = org.github.foxnic.web.oauth.page.MenuPageController.form
[POST] /service-example/example-address/delete-by-ids , method = org.github.foxnic.web.example.controller.AddressController.deleteByIds
[POST] /service-eam/eam-maintain-project-select/insert , method = com.dt.platform.eam.controller.MaintainProjectSelectController.insert
[ALL] /business/oauth/menu/menu_list.html , method = org.github.foxnic.web.oauth.page.MenuPageController.list
[ALL] /business/oauth/menu/menu_dialog.html , method = org.github.foxnic.web.oauth.page.MenuPageController.dialog
[POST] /service-hrm/hrm-position/save , method = org.github.foxnic.web.hrm.controller.PositionController.save
[POST] /service-eam/eam-maintain-project-select/get-by-id , method = com.dt.platform.eam.controller.MaintainProjectSelectController.getById
[ALL] /business/oauth/session_online/session_online_form.html , method = org.github.foxnic.web.oauth.page.SessionOnlinePageController.form
[POST] /service-knowledgebase/kn-category/insert , method = com.dt.platform.knowledgebase.controller.CategoryController.insert
[POST] /service-example/example-address/query-paged-list , method = org.github.foxnic.web.example.controller.AddressController.queryPagedList
[ALL] /business/oauth/session_online/session_online_list.html , method = org.github.foxnic.web.oauth.page.SessionOnlinePageController.list
[POST] /service-eam/eam-maintain-project-select/get-by-ids , method = com.dt.platform.eam.controller.MaintainProjectSelectController.getByIds
[ALL] /service-example/example-address/export-excel , method = org.github.foxnic.web.example.controller.AddressController.exportExcel
[ALL] /business/oauth/resourze/resourze_form.html , method = org.github.foxnic.web.oauth.page.ResourzePageController.form
[POST] /service-hrm/hrm-position/insert , method = org.github.foxnic.web.hrm.controller.PositionController.insert
[POST] /service-knowledgebase/kn-category/get-by-id , method = com.dt.platform.knowledgebase.controller.CategoryController.getById
[ALL] /service-example/example-address/export-excel-template , method = org.github.foxnic.web.example.controller.AddressController.exportExcelTemplate
[POST] /service-eam/eam-maintain-project-select/query-list , method = com.dt.platform.eam.controller.MaintainProjectSelectController.queryList
[ALL] /business/oauth/resourze/resourze_list.html , method = org.github.foxnic.web.oauth.page.ResourzePageController.list
[POST] /service-hrm/hrm-position/get-by-id , method = org.github.foxnic.web.hrm.controller.PositionController.getById
[POST] /service-example/example-address/import-excel , method = org.github.foxnic.web.example.controller.AddressController.importExcel
[ALL] /business/oauth/token/token_form.html , method = org.github.foxnic.web.oauth.page.TokenPageController.form
[POST] /service-changes/chs-change-event/delete , method = org.github.foxnic.web.changes.controller.ChangeEventController.deleteById
[POST] /service-eam/eam-maintain-project-select/delete , method = com.dt.platform.eam.controller.MaintainProjectSelectController.deleteById
[POST] /service-hrm/hrm-position/get-by-ids , method = org.github.foxnic.web.hrm.controller.PositionController.getByIds
[ALL] /business/oauth/token/token_list.html , method = org.github.foxnic.web.oauth.page.TokenPageController.list
[ALL] /business/oauth/user/user_form.html , method = org.github.foxnic.web.oauth.page.UserPageController.form
[POST] /service-eam/eam-maintain-project-select/delete-by-ids , method = com.dt.platform.eam.controller.MaintainProjectSelectController.deleteByIds
[POST] /service-example/example-api/demo2 , method = org.github.foxnic.web.example.controller.ApiDocDemoController.demo2
[ALL] /business/oauth/user/user_list.html , method = org.github.foxnic.web.oauth.page.UserPageController.list
[ALL] /business/oauth/user/user_profile.html , method = org.github.foxnic.web.oauth.page.UserPageController.profileForm
[POST] /service-eam/eam-maintain-project-select/query-paged-list , method = com.dt.platform.eam.controller.MaintainProjectSelectController.queryPagedList
[POST] /service-hrm/hrm-position/query-list , method = org.github.foxnic.web.hrm.controller.PositionController.queryList
[POST] /service-changes/chs-change-event/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeEventController.deleteByIds
[ALL] /business/oauth/user/user_passwd_form.html , method = org.github.foxnic.web.oauth.page.UserPageController.passwdForm
[POST] /service-example/example-api/demo1 , method = org.github.foxnic.web.example.controller.ApiDocDemoController.demo1
[ALL] /service-eam/eam-maintain-project-select/export-excel , method = com.dt.platform.eam.controller.MaintainProjectSelectController.exportExcel
[POST] /service-hrm/hrm-position/delete , method = org.github.foxnic.web.hrm.controller.PositionController.deleteById
[ALL] /business/oauth/role/role_form.html , method = org.github.foxnic.web.oauth.page.RolePageController.form
[ALL] /business/oauth/role/role_list.html , method = org.github.foxnic.web.oauth.page.RolePageController.list
[ALL] /service-eam/eam-maintain-project-select/export-excel-template , method = com.dt.platform.eam.controller.MaintainProjectSelectController.exportExcelTemplate
[POST] /service-hrm/hrm-position/delete-by-ids , method = org.github.foxnic.web.hrm.controller.PositionController.deleteByIds
[ALL] /business/oauth/menu_fork/menu_fork_form.html , method = org.github.foxnic.web.oauth.page.MenuForkPageController.form
[ALL] /service-eam/eam-maintain-project-select/import-excel , method = com.dt.platform.eam.controller.MaintainProjectSelectController.importExcel
[POST] /service-example/example-api/new-name-2 , method = org.github.foxnic.web.example.controller.ApiDocDemoController.newApiName2
[ALL] /business/oauth/menu_fork/menu_fork_list.html , method = org.github.foxnic.web.oauth.page.MenuForkPageController.list
[POST] /service-eam/eam-maintain-report/maintain-item-report , method = com.dt.platform.eam.controller.MaintainReportController.maintainItemReport
[POST] /service-example/example-api/demo3 , method = org.github.foxnic.web.example.controller.ApiDocDemoController.createOrder1235332
[POST] /service-hrm/hrm-position/query-paged-list , method = org.github.foxnic.web.hrm.controller.PositionController.queryPagedList
[ALL] /business/example/address/address_form.html , method = org.github.foxnic.web.example.page.AddressPageController.form
[ALL] /business/example/address/address_list.html , method = org.github.foxnic.web.example.page.AddressPageController.list
[POST] /service-hrm/hrm-company/update , method = org.github.foxnic.web.hrm.controller.CompanyController.update
[POST] /service-hrm/hrm-employee/update , method = org.github.foxnic.web.hrm.controller.EmployeeController.update
[POST] /service-eam/eam-action-crontab/update , method = com.dt.platform.eam.controller.ActionCrontabController.update
[POST] /service-hrm/hrm-company/save , method = org.github.foxnic.web.hrm.controller.CompanyController.save
[POST] /service-eam/eam-maintain-task/update , method = com.dt.platform.eam.controller.MaintainTaskController.update
[POST] /service-hrm/hrm-employee/save , method = org.github.foxnic.web.hrm.controller.EmployeeController.save
[POST] /service-changes/chs-change-event/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeEventController.queryPagedList
[POST] /service-eam/eam-maintain-task/execute , method = com.dt.platform.eam.controller.MaintainTaskController.execute
[POST] /service-hrm/hrm-company/insert , method = org.github.foxnic.web.hrm.controller.CompanyController.insert
[POST] /service-eam/eam-action-crontab/save , method = com.dt.platform.eam.controller.ActionCrontabController.save
[POST] /service-hrm/hrm-employee/insert , method = org.github.foxnic.web.hrm.controller.EmployeeController.insert
[POST] /service-hrm/hrm-company/get-by-id , method = org.github.foxnic.web.hrm.controller.CompanyController.getById
[POST] /service-hrm/hrm-employee/get-by-id , method = org.github.foxnic.web.hrm.controller.EmployeeController.getById
[POST] /service-hrm/hrm-company/get-by-ids , method = org.github.foxnic.web.hrm.controller.CompanyController.getByIds
[POST] /service-hrm/hrm-employee/get-by-ids , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByIds
[POST] /service-eam/eam-action-crontab/insert , method = com.dt.platform.eam.controller.ActionCrontabController.insert
[POST] /service-hrm/hrm-company/query-list , method = org.github.foxnic.web.hrm.controller.CompanyController.queryList
[POST] /service-hrm/hrm-employee/get-by-badge , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByBadge
[POST] /service-eam/eam-action-crontab/get-by-id , method = com.dt.platform.eam.controller.ActionCrontabController.getById
[ALL] /service-changes/chs-change-event/export-excel , method = org.github.foxnic.web.changes.controller.ChangeEventController.exportExcel
[POST] /service-eam/eam-maintain-task/save , method = com.dt.platform.eam.controller.MaintainTaskController.save
[POST] /service-hrm/hrm-company/delete , method = org.github.foxnic.web.hrm.controller.CompanyController.deleteById
[POST] /service-hrm/hrm-employee/get-by-badges , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByBadges
[POST] /service-eam/eam-action-crontab/get-by-ids , method = com.dt.platform.eam.controller.ActionCrontabController.getByIds
[POST] /service-hrm/hrm-company/delete-by-ids , method = org.github.foxnic.web.hrm.controller.CompanyController.deleteByIds
[POST] /service-eam/eam-action-crontab/get-by-owner-id , method = com.dt.platform.eam.controller.ActionCrontabController.getByOwnerId
[POST] /service-hrm/hrm-employee/query-list , method = org.github.foxnic.web.hrm.controller.EmployeeController.queryList
[ALL] /service-changes/chs-change-event/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeEventController.exportExcelTemplate
[POST] /service-hrm/hrm-company/query-paged-list , method = org.github.foxnic.web.hrm.controller.CompanyController.queryPagedList
[POST] /service-hrm/hrm-employee/delete , method = org.github.foxnic.web.hrm.controller.EmployeeController.deleteById
[ALL] /service-changes/chs-change-event/import-excel , method = org.github.foxnic.web.changes.controller.ChangeEventController.importExcel
[POST] /service-eam/eam-action-crontab/query-list , method = com.dt.platform.eam.controller.ActionCrontabController.queryList
[POST] /service-hrm/hrm-employee/delete-by-ids , method = org.github.foxnic.web.hrm.controller.EmployeeController.deleteByIds
[POST] /service-eam/eam-maintain-task/insert , method = com.dt.platform.eam.controller.MaintainTaskController.insert
[POST] /service-eam/eam-action-crontab/delete , method = com.dt.platform.eam.controller.ActionCrontabController.deleteById
[POST] /service-eam/eam-maintain-task/cancel , method = com.dt.platform.eam.controller.MaintainTaskController.cancel
[POST] /service-hrm/hrm-organization/update , method = org.github.foxnic.web.hrm.controller.OrganizationController.update
[POST] /service-hrm/hrm-employee/query-paged-list , method = org.github.foxnic.web.hrm.controller.EmployeeController.queryPagedList
[POST] /service-eam/eam-maintain-task/finish , method = com.dt.platform.eam.controller.MaintainTaskController.finish
[POST] /service-eam/eam-action-crontab/delete-by-ids , method = com.dt.platform.eam.controller.ActionCrontabController.deleteByIds
[POST] /service-eam/eam-maintain-task/get-by-id , method = com.dt.platform.eam.controller.MaintainTaskController.getById
[POST] /service-hrm/hrm-favourite-group/update , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.update
[POST] /service-changes/chs-example-order-item/update , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.update
[POST] /service-eam/eam-maintain-task/get-by-ids , method = com.dt.platform.eam.controller.MaintainTaskController.getByIds
[POST] /service-hrm/hrm-organization/save , method = org.github.foxnic.web.hrm.controller.OrganizationController.save
[POST] /service-eam/eam-action-crontab/query-paged-list , method = com.dt.platform.eam.controller.ActionCrontabController.queryPagedList
[POST] /service-hrm/hrm-favourite-group/save , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.save
[ALL] /service-eam/eam-action-crontab/export-excel , method = com.dt.platform.eam.controller.ActionCrontabController.exportExcel
[POST] /service-eam/eam-maintain-task/batch-cancel , method = com.dt.platform.eam.controller.MaintainTaskController.batchCancel
[ALL] /service-eam/eam-action-crontab/export-excel-template , method = com.dt.platform.eam.controller.ActionCrontabController.exportExcelTemplate
[POST] /service-hrm/hrm-favourite-group/insert , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.insert
[ALL] /service-eam/eam-action-crontab/import-excel , method = com.dt.platform.eam.controller.ActionCrontabController.importExcel
[POST] /service-hrm/hrm-organization/insert , method = org.github.foxnic.web.hrm.controller.OrganizationController.insert
[POST] /service-changes/chs-example-order-item/save , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.save
[POST] /service-hrm/hrm-favourite-group/get-by-id , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.getById
[POST] /service-hrm/hrm-organization/search , method = org.github.foxnic.web.hrm.controller.OrganizationController.search
[POST] /service-eam/eam-action-crontab-log/update , method = com.dt.platform.eam.controller.ActionCrontabLogController.update
[POST] /service-hrm/hrm-organization/get-by-id , method = org.github.foxnic.web.hrm.controller.OrganizationController.getById
[POST] /service-hrm/hrm-favourite-group/get-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.getByIds
[POST] /service-eam/eam-maintain-task/query-list , method = com.dt.platform.eam.controller.MaintainTaskController.queryList
[POST] /service-eam/eam-action-crontab-log/save , method = com.dt.platform.eam.controller.ActionCrontabLogController.save
[POST] /service-eam/eam-maintain-task/delete , method = com.dt.platform.eam.controller.MaintainTaskController.deleteById
[POST] /service-hrm/hrm-organization/get-by-ids , method = org.github.foxnic.web.hrm.controller.OrganizationController.getByIds
[POST] /service-changes/chs-example-order-item/insert , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.insert
[POST] /service-hrm/hrm-favourite-group/query-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.queryList
[POST] /service-eam/eam-maintain-task/delete-by-ids , method = com.dt.platform.eam.controller.MaintainTaskController.deleteByIds
[POST] /service-eam/eam-action-crontab-log/insert , method = com.dt.platform.eam.controller.ActionCrontabLogController.insert
[POST] /service-hrm/hrm-organization/save-hierarchy , method = org.github.foxnic.web.hrm.controller.OrganizationController.changeParent
[POST] /service-hrm/hrm-favourite-group/delete , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.deleteById
[POST] /service-hrm/hrm-organization/query-nodes-flatten , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryNodesFlatten
[POST] /service-eam/eam-action-crontab-log/get-by-id , method = com.dt.platform.eam.controller.ActionCrontabLogController.getById
[POST] /service-hrm/hrm-organization/query-nodes , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryNodes
[POST] /service-hrm/hrm-favourite-group/delete-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.deleteByIds
[POST] /service-changes/chs-example-order-item/get-by-id , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.getById
[POST] /service-eam/eam-action-crontab-log/get-by-ids , method = com.dt.platform.eam.controller.ActionCrontabLogController.getByIds
[POST] /service-hrm/hrm-favourite-group/query-paged-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.queryPagedList
[POST] /service-eam/eam-maintain-task/query-paged-list , method = com.dt.platform.eam.controller.MaintainTaskController.queryPagedList
[POST] /service-eam/eam-action-crontab-log/query-list , method = com.dt.platform.eam.controller.ActionCrontabLogController.queryList
[POST] /service-changes/chs-example-order-item/get-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.getByIds
[POST] /service-hrm/hrm-organization/query-list , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryList
[ALL] /service-eam/eam-maintain-task/export-excel , method = com.dt.platform.eam.controller.MaintainTaskController.exportExcel
[POST] /service-eam/eam-action-crontab-log/delete , method = com.dt.platform.eam.controller.ActionCrontabLogController.deleteById
[POST] /service-hrm/hrm-favourite-group-item/update , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.update
[POST] /service-hrm/hrm-organization/delete , method = org.github.foxnic.web.hrm.controller.OrganizationController.deleteById
[ALL] /service-eam/eam-maintain-task/export-excel-template , method = com.dt.platform.eam.controller.MaintainTaskController.exportExcelTemplate
[ALL] /service-eam/eam-maintain-task/import-excel , method = com.dt.platform.eam.controller.MaintainTaskController.importExcel
[POST] /service-eam/eam-action-crontab-log/delete-by-ids , method = com.dt.platform.eam.controller.ActionCrontabLogController.deleteByIds
[POST] /service-hrm/hrm-organization/delete-by-ids , method = org.github.foxnic.web.hrm.controller.OrganizationController.deleteByIds
[POST] /service-hrm/hrm-favourite-group-item/save , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.save
[POST] /service-eam/eam-action-crontab-log/query-paged-list , method = com.dt.platform.eam.controller.ActionCrontabLogController.queryPagedList
[POST] /service-eam/eam-maintain-task-project/update , method = com.dt.platform.eam.controller.MaintainTaskProjectController.update
[ALL] /service-eam/eam-action-crontab-log/export-excel , method = com.dt.platform.eam.controller.ActionCrontabLogController.exportExcel
[POST] /service-hrm/hrm-favourite-group-item/insert , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.insert
[POST] /service-hrm/hrm-organization/query-paged-list , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryPagedList
[ALL] /service-eam/eam-action-crontab-log/export-excel-template , method = com.dt.platform.eam.controller.ActionCrontabLogController.exportExcelTemplate
[POST] /service-hrm/hrm-favourite-group-item/remove-all , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.removeAll
[ALL] /business/hrm/favourite_group/favourite_group_form.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupPageController.form
[ALL] /service-eam/eam-action-crontab-log/import-excel , method = com.dt.platform.eam.controller.ActionCrontabLogController.importExcel
[POST] /service-eam/eam-maintain-task-project/save , method = com.dt.platform.eam.controller.MaintainTaskProjectController.save
[ALL] /business/hrm/favourite_group/favourite_group_list.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupPageController.list
[POST] /service-hrm/hrm-favourite-group-item/get-by-id , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.getById
[ALL] /business/hrm/employee/employee_form.html , method = org.github.foxnic.web.hrm.page.EmployeePageController.form
[ALL] /business/hrm/employee/employee_list.html , method = org.github.foxnic.web.hrm.page.EmployeePageController.list
[POST] /service-hrm/hrm-favourite-group-item/get-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.getByIds
[POST] /service-eam/eam-approve-configure/update , method = com.dt.platform.eam.controller.ApproveConfigureController.update
[POST] /service-hrm/hrm-favourite-group-item/inserts , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.batchInsert
[ALL] /business/hrm/employee/dialog/emp_dialog.html , method = org.github.foxnic.web.hrm.page.EmployeePageController.empDialog
[ALL] /business/hrm/favourite_group_item/favourite_group_item_form.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupItemPageController.form
[POST] /service-eam/eam-maintain-task-project/insert , method = com.dt.platform.eam.controller.MaintainTaskProjectController.insert
[ALL] /business/hrm/favourite_group_item/favourite_group_item_list.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupItemPageController.list
[ALL] /business/hrm/position/position_form.html , method = org.github.foxnic.web.hrm.page.PositionPageController.form
[POST] /service-eam/eam-approve-configure/save , method = com.dt.platform.eam.controller.ApproveConfigureController.save
[POST] /service-eam/eam-maintain-task-project/get-by-id , method = com.dt.platform.eam.controller.MaintainTaskProjectController.getById
[POST] /service-hrm/hrm-favourite-group-item/query-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.queryList
[ALL] /business/hrm/position/position_list.html , method = org.github.foxnic.web.hrm.page.PositionPageController.list
[ALL] /business/hrm/company/company_form.html , method = org.github.foxnic.web.hrm.page.CompanyPageController.form
[POST] /service-eam/eam-maintain-task-project/get-by-ids , method = com.dt.platform.eam.controller.MaintainTaskProjectController.getByIds
[ALL] /business/hrm/company/company_list.html , method = org.github.foxnic.web.hrm.page.CompanyPageController.list
[POST] /service-eam/eam-approve-configure/insert , method = com.dt.platform.eam.controller.ApproveConfigureController.insert
[ALL] /business/hrm/person/person_form.html , method = org.github.foxnic.web.hrm.page.PersonPageController.form
[ALL] /business/hrm/person/person_list.html , method = org.github.foxnic.web.hrm.page.PersonPageController.list
[POST] /service-eam/eam-approve-configure/get-by-id , method = com.dt.platform.eam.controller.ApproveConfigureController.getById
[ALL] /business/hrm/organization/organization_form.html , method = org.github.foxnic.web.hrm.page.OrganizationPageController.form
[ALL] /business/hrm/organization/organization_list.html , method = org.github.foxnic.web.hrm.page.OrganizationPageController.list
[POST] /service-eam/eam-approve-configure/get-by-ids , method = com.dt.platform.eam.controller.ApproveConfigureController.getByIds
[POST] /service-eam/eam-maintain-task-project/query-list , method = com.dt.platform.eam.controller.MaintainTaskProjectController.queryList
[ALL] /business/hrm/organization/org_tree.html , method = org.github.foxnic.web.hrm.page.OrganizationPageController.orgTree
[POST] /service-eam/eam-asset-depreciation-cal-rule/insert , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.insert
[ALL] /business/hrm/organization/org_dialog.html , method = org.github.foxnic.web.hrm.page.OrganizationPageController.orgDialog
[POST] /service-eam/eam-maintain-task-project/delete , method = com.dt.platform.eam.controller.MaintainTaskProjectController.deleteById
[POST] /service-eam/eam-asset-depreciation-cal-rule/get-by-id , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.getById
[POST] /service-eam/eam-approve-configure/query-list , method = com.dt.platform.eam.controller.ApproveConfigureController.queryList
[POST] /service-pcm/pcm-catalog/update , method = org.github.foxnic.web.pcm.controller.CatalogController.update
[POST] /service-eam/eam-maintain-task-project/delete-by-ids , method = com.dt.platform.eam.controller.MaintainTaskProjectController.deleteByIds
[POST] /service-eam/eam-asset-depreciation-cal-rule/get-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.getByIds
[POST] /service-pcm/pcm-catalog/save , method = org.github.foxnic.web.pcm.controller.CatalogController.save
[POST] /service-eam/eam-asset-depreciation-cal-rule/query-list , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.queryList
[POST] /service-eam/eam-maintain-task-project/query-paged-list , method = com.dt.platform.eam.controller.MaintainTaskProjectController.queryPagedList
[POST] /service-pcm/pcm-catalog/insert , method = org.github.foxnic.web.pcm.controller.CatalogController.insert
[POST] /service-eam/eam-asset-depreciation-cal-rule/delete , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.deleteById
[POST] /service-pcm/pcm-catalog/search , method = org.github.foxnic.web.pcm.controller.CatalogController.search
[POST] /service-pcm/pcm-catalog/versions , method = org.github.foxnic.web.pcm.controller.CatalogController.versions
[POST] /service-eam/eam-asset-depreciation-cal-rule/delete-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.deleteByIds
[POST] /service-changes/chs-example-order-item/query-list , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.queryList
[POST] /service-pcm/pcm-catalog/get-by-id , method = org.github.foxnic.web.pcm.controller.CatalogController.getById
[POST] /service-eam/eam-maintainer/update , method = com.dt.platform.eam.controller.MaintainerController.update
[POST] /service-eam/eam-approve-configure/delete , method = com.dt.platform.eam.controller.ApproveConfigureController.deleteById
[POST] /service-eam/eam-asset-depreciation-cal-rule/query-paged-list , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.queryPagedList
[POST] /service-pcm/pcm-catalog/get-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogController.getByIds
[POST] /service-eam/eam-approve-configure/delete-by-ids , method = com.dt.platform.eam.controller.ApproveConfigureController.deleteByIds
[POST] /service-pcm/pcm-catalog/save-data , method = org.github.foxnic.web.pcm.controller.CatalogController.saveData
[POST] /service-eam/eam-maintainer/save , method = com.dt.platform.eam.controller.MaintainerController.save
[POST] /service-eam/eam-asset-depreciation-category/update , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.update
[POST] /service-changes/chs-example-order-item/delete , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.deleteById
[POST] /service-pcm/pcm-catalog/save-hierarchy , method = org.github.foxnic.web.pcm.controller.CatalogController.changeParent
[POST] /service-eam/eam-approve-configure/query-paged-list , method = com.dt.platform.eam.controller.ApproveConfigureController.queryPagedList
[POST] /service-eam/eam-asset-depreciation-category/save , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.save
[POST] /service-pcm/pcm-catalog/delete-data , method = org.github.foxnic.web.pcm.controller.CatalogController.deleteData
[POST] /service-eam/eam-maintainer/insert , method = com.dt.platform.eam.controller.MaintainerController.insert
[ALL] /service-eam/eam-approve-configure/export-excel , method = com.dt.platform.eam.controller.ApproveConfigureController.exportExcel
[POST] /service-pcm/pcm-catalog/query-nodes-flatten , method = org.github.foxnic.web.pcm.controller.CatalogController.queryNodesFlatten
[POST] /service-eam/eam-asset-depreciation-category/insert , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.insert
[POST] /service-eam/eam-maintainer/get-by-id , method = com.dt.platform.eam.controller.MaintainerController.getById
[POST] /service-changes/chs-example-order-item/delete-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.deleteByIds
[ALL] /service-eam/eam-approve-configure/export-excel-template , method = com.dt.platform.eam.controller.ApproveConfigureController.exportExcelTemplate
[POST] /service-eam/eam-asset-depreciation-category/get-by-id , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.getById
[POST] /service-eam/eam-maintainer/get-by-ids , method = com.dt.platform.eam.controller.MaintainerController.getByIds
[ALL] /service-eam/eam-approve-configure/import-excel , method = com.dt.platform.eam.controller.ApproveConfigureController.importExcel
[POST] /service-pcm/pcm-catalog/query-nodes , method = org.github.foxnic.web.pcm.controller.CatalogController.queryNodes
[POST] /service-eam/eam-asset-depreciation-category/get-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.getByIds
[POST] /service-eam/eam-area/update , method = com.dt.platform.eam.controller.AreaController.update
[POST] /service-eam/eam-asset-depreciation-category/query-list , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.queryList
[POST] /service-pcm/pcm-catalog/query-list , method = org.github.foxnic.web.pcm.controller.CatalogController.queryList
[POST] /service-eam/eam-maintainer/query-list , method = com.dt.platform.eam.controller.MaintainerController.queryList
[POST] /service-eam/eam-maintainer/delete , method = com.dt.platform.eam.controller.MaintainerController.deleteById
[POST] /service-pcm/pcm-catalog/delete , method = org.github.foxnic.web.pcm.controller.CatalogController.deleteById
[POST] /service-eam/eam-asset-depreciation-category/delete , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.deleteById
[POST] /service-eam/eam-area/save , method = com.dt.platform.eam.controller.AreaController.save
[POST] /service-eam/eam-asset-stock-collection/save , method = com.dt.platform.eam.controller.AssetStockCollectionController.save
[POST] /service-eam/eam-maintainer/delete-by-ids , method = com.dt.platform.eam.controller.MaintainerController.deleteByIds
[POST] /service-eam/eam-asset-depreciation-category/delete-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.deleteByIds
[POST] /service-pcm/pcm-catalog/query-paged-list , method = org.github.foxnic.web.pcm.controller.CatalogController.queryPagedList
[POST] /service-eam/eam-area/insert , method = com.dt.platform.eam.controller.AreaController.insert
[POST] /service-changes/chs-example-order-item/query-paged-list , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.queryPagedList
[ALL] /service-pcm/pcm-catalog/export-excel , method = org.github.foxnic.web.pcm.controller.CatalogController.exportExcel
[POST] /service-eam/eam-asset-depreciation-category/query-paged-list , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.queryPagedList
[POST] /service-eam/eam-area/get-by-id , method = com.dt.platform.eam.controller.AreaController.getById
[ALL] /service-pcm/pcm-catalog/export-excel-template , method = org.github.foxnic.web.pcm.controller.CatalogController.exportExcelTemplate
[ALL] /service-eam/eam-asset-depreciation-category/export-excel , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.exportExcel
[POST] /service-eam/eam-maintainer/query-paged-list , method = com.dt.platform.eam.controller.MaintainerController.queryPagedList
[ALL] /service-pcm/pcm-catalog/import-excel , method = org.github.foxnic.web.pcm.controller.CatalogController.importExcel
[ALL] /service-eam/eam-asset-depreciation-category/export-excel-template , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.exportExcelTemplate
[ALL] /service-changes/chs-example-order-item/export-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.exportExcel
[POST] /service-eam/eam-area/get-by-ids , method = com.dt.platform.eam.controller.AreaController.getByIds
[POST] /service-pcm/pcm-catalog/storage-tables , method = org.github.foxnic.web.pcm.controller.CatalogController.storageTables
[ALL] /service-eam/eam-asset-depreciation-category/import-excel , method = com.dt.platform.eam.controller.AssetDepreciationCategoryController.importExcel
[POST] /service-eam/eam-manufacturer/update , method = com.dt.platform.eam.controller.ManufacturerController.update
[POST] /service-pcm/pcm-catalog/create-version , method = org.github.foxnic.web.pcm.controller.CatalogController.createVersion
[ALL] /service-changes/chs-example-order-item/export-excel-template , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.exportExcelTemplate
[POST] /service-eam/eam-area/query-list , method = com.dt.platform.eam.controller.AreaController.queryList
[POST] /service-pcm/pcm-catalog/apply-version , method = org.github.foxnic.web.pcm.controller.CatalogController.applyVersion
[POST] /service-eam/eam-manufacturer/save , method = com.dt.platform.eam.controller.ManufacturerController.save
[POST] /service-pcm/pcm-catalog/query-data , method = org.github.foxnic.web.pcm.controller.CatalogController.queryData
[POST] /service-eam/eam-area/delete , method = com.dt.platform.eam.controller.AreaController.deleteById
[ALL] /service-changes/chs-example-order-item/import-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.importExcel
[POST] /service-eam/eam-asset-depreciation/update , method = com.dt.platform.eam.controller.AssetDepreciationController.update
[POST] /service-pcm/pcm-catalog/save-data-list , method = org.github.foxnic.web.pcm.controller.CatalogController.saveDataList
[POST] /service-eam/eam-manufacturer/insert , method = com.dt.platform.eam.controller.ManufacturerController.insert
[POST] /service-eam/eam-area/delete-by-ids , method = com.dt.platform.eam.controller.AreaController.deleteByIds
[POST] /service-eam/eam-manufacturer/get-by-id , method = com.dt.platform.eam.controller.ManufacturerController.getById
[POST] /service-eam/eam-area/query-paged-list , method = com.dt.platform.eam.controller.AreaController.queryPagedList
[POST] /service-eam/eam-manufacturer/get-by-ids , method = com.dt.platform.eam.controller.ManufacturerController.getByIds
[POST] /service-eam/eam-asset-depreciation/save , method = com.dt.platform.eam.controller.AssetDepreciationController.save
[POST] /service-eam/eam-asset-stock-collection/insert , method = com.dt.platform.eam.controller.AssetStockCollectionController.insert
[POST] /service-pcm/pcm-catalog-attribute/update , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.update
[ALL] /service-eam/eam-area/export-excel , method = com.dt.platform.eam.controller.AreaController.exportExcel
[POST] /service-eam/eam-manufacturer/query-list , method = com.dt.platform.eam.controller.ManufacturerController.queryList
[ALL] /service-eam/eam-area/export-excel-template , method = com.dt.platform.eam.controller.AreaController.exportExcelTemplate
[ALL] /service-eam/eam-area/import-excel , method = com.dt.platform.eam.controller.AreaController.importExcel
[POST] /service-eam/eam-manufacturer/delete , method = com.dt.platform.eam.controller.ManufacturerController.deleteById
[POST] /service-eam/eam-asset-depreciation/insert , method = com.dt.platform.eam.controller.AssetDepreciationController.insert
[POST] /service-eam/eam-asset-stock-collection/get-by-id , method = com.dt.platform.eam.controller.AssetStockCollectionController.getById
[POST] /service-eam/eam-asset-alarm/query-borrow-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryBorrowExpirationData
[POST] /service-pcm/pcm-catalog-attribute/save , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.save
[POST] /service-eam/eam-asset-depreciation/get-by-id , method = com.dt.platform.eam.controller.AssetDepreciationController.getById
[POST] /service-eam/eam-manufacturer/delete-by-ids , method = com.dt.platform.eam.controller.ManufacturerController.deleteByIds
[POST] /service-eam/eam-asset-depreciation/get-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationController.getByIds
[ALL] /business/bpm/process_definition_file/process_definition_file_form.html , method = org.github.foxnic.web.bpm.page.ProcessDefinitionFilePageController.form
[POST] /service-eam/eam-manufacturer/query-paged-list , method = com.dt.platform.eam.controller.ManufacturerController.queryPagedList
[POST] /service-eam/eam-asset-stock-collection/get-by-ids , method = com.dt.platform.eam.controller.AssetStockCollectionController.getByIds
[ALL] /business/bpm/process_definition_file/process_definition_file_list.html , method = org.github.foxnic.web.bpm.page.ProcessDefinitionFilePageController.list
[POST] /service-pcm/pcm-catalog-attribute/insert , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.insert
[ALL] /camunda/dialog/assignee_dialog.html , method = org.github.foxnic.web.bpm.page.ProcessDefinitionDialogController.list
[POST] /service-eam/eam-operate/update , method = com.dt.platform.eam.controller.OperateController.update
[POST] /service-eam/eam-asset-depreciation/query-list , method = com.dt.platform.eam.controller.AssetDepreciationController.queryList
[POST] /service-pcm/pcm-catalog-attribute/get-by-id , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.getById
[ALL] /business/bpm/demo_common/demo_common_form.html , method = org.github.foxnic.web.bpm.page.DemoCommonPageController.form
[POST] /service-eam/eam-asset-depreciation/delete , method = com.dt.platform.eam.controller.AssetDepreciationController.deleteById
[POST] /service-pcm/pcm-catalog-attribute/get-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.getByIds
[ALL] /service-eam/eam-asset-stock-collection/confirm-operation , method = com.dt.platform.eam.controller.AssetStockCollectionController.confirmOperation
[ALL] /business/bpm/demo_common/demo_common_list.html , method = org.github.foxnic.web.bpm.page.DemoCommonPageController.list
[POST] /service-eam/eam-operate/save , method = com.dt.platform.eam.controller.OperateController.save
[POST] /service-eam/eam-asset-depreciation/delete-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationController.deleteByIds
[ALL] /business/bpm/demo_business_case/demo_business_case_form.html , method = org.github.foxnic.web.bpm.page.DemoBusinessCasePageController.form
[POST] /service-changes/chs-change-instance/update , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.update
[ALL] /business/bpm/demo_business_case/demo_business_case_list.html , method = org.github.foxnic.web.bpm.page.DemoBusinessCasePageController.list
[POST] /service-eam/eam-operate/insert , method = com.dt.platform.eam.controller.OperateController.insert
[POST] /service-pcm/pcm-catalog-attribute/query-list , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryList
[ALL] /business/bpm/process_error/process_error_form.html , method = org.github.foxnic.web.bpm.page.ProcessErrorPageController.form
[POST] /service-eam/eam-asset-depreciation/query-paged-list , method = com.dt.platform.eam.controller.AssetDepreciationController.queryPagedList
[POST] /service-eam/eam-operate/get-by-id , method = com.dt.platform.eam.controller.OperateController.getById
[ALL] /business/bpm/process_error/process_error_list.html , method = org.github.foxnic.web.bpm.page.ProcessErrorPageController.list
[POST] /service-pcm/pcm-catalog-attribute/delete , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.deleteById
[ALL] /service-eam/eam-asset-depreciation/export-excel , method = com.dt.platform.eam.controller.AssetDepreciationController.exportExcel
[ALL] /business/bpm/portal/index.html , method = org.github.foxnic.web.bpm.page.PortalPageController.index
[POST] /service-eam/eam-operate/get-by-ids , method = com.dt.platform.eam.controller.OperateController.getByIds
[ALL] /service-eam/eam-asset-depreciation/export-excel-template , method = com.dt.platform.eam.controller.AssetDepreciationController.exportExcelTemplate
[POST] /service-pcm/pcm-catalog-attribute/delete-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.deleteByIds
[ALL] /business/bpm/process_definition_node/process_definition_node_form.html , method = org.github.foxnic.web.bpm.page.ProcessDefinitionNodePageController.form
[ALL] /service-eam/eam-asset-depreciation/import-excel , method = com.dt.platform.eam.controller.AssetDepreciationController.importExcel
[POST] /service-eam/eam-operate/approval-required , method = com.dt.platform.eam.controller.OperateController.approvalRequired
[POST] /service-changes/chs-change-instance/save , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.save
[ALL] /business/bpm/process_definition_node/process_definition_node_list.html , method = org.github.foxnic.web.bpm.page.ProcessDefinitionNodePageController.list
[POST] /service-eam/eam-operate/query-asset-code-auto-create , method = com.dt.platform.eam.controller.OperateController.queryAssetCodeAutoCreate
[POST] /service-eam/eam-asset-stock-collection/query-list , method = com.dt.platform.eam.controller.AssetStockCollectionController.queryList
[ALL] /business/bpm/process_instance/process_instance_form.html , method = org.github.foxnic.web.bpm.page.ProcessInstancePageController.form
[POST] /service-pcm/pcm-catalog-attribute/query-paged-list , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList
[POST] /service-changes/chs-change-instance/request , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.request
[ALL] /business/bpm/process_instance/process_instance_list.html , method = org.github.foxnic.web.bpm.page.ProcessInstancePageController.list
[POST] /service-eam/eam-operate/query-list , method = com.dt.platform.eam.controller.OperateController.queryList
[ALL] /business/pcm/catalog_attribute/catalog_attribute_form.html , method = org.github.foxnic.web.pcm.page.CatalogAttributePageController.form
[POST] /service-eam/eam-asset-stock-collection/delete , method = com.dt.platform.eam.controller.AssetStockCollectionController.deleteById
[ALL] /business/bpm/demo_leave/demo_leave_form.html , method = org.github.foxnic.web.bpm.page.DemoLeavePageController.form
[ALL] /business/pcm/catalog_attribute/catalog_attribute_list.html , method = org.github.foxnic.web.pcm.page.CatalogAttributePageController.list
[POST] /service-eam/eam-operate/delete , method = com.dt.platform.eam.controller.OperateController.deleteById
[POST] /service-changes/chs-change-instance/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.getById
[ALL] /business/bpm/demo_leave/demo_leave_list.html , method = org.github.foxnic.web.bpm.page.DemoLeavePageController.list
[POST] /service-eam/eam-operate/delete-by-ids , method = com.dt.platform.eam.controller.OperateController.deleteByIds
[ALL] /business/pcm/catalog/catalog_form.html , method = org.github.foxnic.web.pcm.page.CatalogPageController.form
[POST] /service-eam/eam-asset-stock-collection/delete-by-ids , method = com.dt.platform.eam.controller.AssetStockCollectionController.deleteByIds
[ALL] /business/bpm/form_definition/form_definition_form.html , method = org.github.foxnic.web.bpm.page.FormDefinitionPageController.form
[ALL] /business/pcm/catalog/catalog_list.html , method = org.github.foxnic.web.pcm.page.CatalogPageController.list
[ALL] /business/bpm/form_definition/form_definition_list.html , method = org.github.foxnic.web.bpm.page.FormDefinitionPageController.list
[POST] /service-eam/eam-operate/query-paged-list , method = com.dt.platform.eam.controller.OperateController.queryPagedList
[ALL] /business/pcm/catalog/catalog_tree.html , method = org.github.foxnic.web.pcm.page.CatalogPageController.tree
[POST] /service-changes/chs-change-instance/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.getByIds
[ALL] /business/bpm/catalog/catalog_form.html , method = org.github.foxnic.web.bpm.page.CatalogPageController.form
[ALL] /service-eam/eam-operate/export-excel , method = com.dt.platform.eam.controller.OperateController.exportExcel
[ALL] /business/bpm/catalog/catalog_list.html , method = org.github.foxnic.web.bpm.page.CatalogPageController.list
[POST] /service-eam/eam-asset-depreciation-detail/update , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.update
[ALL] /service-eam/eam-operate/export-excel-template , method = com.dt.platform.eam.controller.OperateController.exportExcelTemplate
[POST] /service-changes/chs-change-instance/approve , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.approve
[ALL] /business/bpm/task/task_form.html , method = org.github.foxnic.web.bpm.page.TaskPageController.form
[ALL] /service-eam/eam-operate/import-excel , method = com.dt.platform.eam.controller.OperateController.importExcel
[POST] /service-changes/chs-example-order/update , method = org.github.foxnic.web.changes.controller.ExampleOrderController.update
[ALL] /business/bpm/task/task_list.html , method = org.github.foxnic.web.bpm.page.TaskPageController.list
[POST] /service-eam/eam-operate/query-asset-status-column-disable , method = com.dt.platform.eam.controller.OperateController.queryAssetStatusColumnDisable
[ALL] /business/bpm/process_definition/process_definition_form.html , method = org.github.foxnic.web.bpm.page.ProcessDefinitionPageController.form
[POST] /service-eam/eam-operate/query-asset-direct-update-mode , method = com.dt.platform.eam.controller.OperateController.queryAssetDirectUpdateMode
[ALL] /business/bpm/process_definition/process_definition_list.html , method = org.github.foxnic.web.bpm.page.ProcessDefinitionPageController.list
[POST] /service-changes/chs-example-order/save , method = org.github.foxnic.web.changes.controller.ExampleOrderController.save
[ALL] /business/bpm/process_initiator/process_initiator_form.html , method = org.github.foxnic.web.bpm.page.ProcessInitiatorPageController.form
[POST] /service-eam/eam-plan-execute-log/update , method = com.dt.platform.eam.controller.PlanExecuteLogController.update
[POST] /service-eam/eam-asset-stock-collection/query-paged-list , method = com.dt.platform.eam.controller.AssetStockCollectionController.queryPagedList
[ALL] /business/bpm/process_initiator/process_initiator_list.html , method = org.github.foxnic.web.bpm.page.ProcessInitiatorPageController.list
[POST] /service-changes/chs-change-instance/query-list , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.queryList
[POST] /service-eam/eam-plan-execute-log/save , method = com.dt.platform.eam.controller.PlanExecuteLogController.save
[POST] /service-changes/chs-example-order/insert , method = org.github.foxnic.web.changes.controller.ExampleOrderController.insert
[ALL] /service-eam/eam-asset-stock-collection/export-excel , method = com.dt.platform.eam.controller.AssetStockCollectionController.exportExcel
[POST] /service-dataperm/dp-example-shop/update , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.update
[POST] /service-changes/chs-example-order/get-by-id , method = org.github.foxnic.web.changes.controller.ExampleOrderController.getById
[POST] /service-eam/eam-plan-execute-log/insert , method = com.dt.platform.eam.controller.PlanExecuteLogController.insert
[POST] /service-changes/chs-change-instance/delete , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.deleteById
[ALL] /service-eam/eam-asset-stock-collection/export-excel-template , method = com.dt.platform.eam.controller.AssetStockCollectionController.exportExcelTemplate
[POST] /service-dataperm/dp-example-shop/save , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.save
[POST] /service-eam/eam-plan-execute-log/get-by-id , method = com.dt.platform.eam.controller.PlanExecuteLogController.getById
[POST] /service-changes/chs-example-order/get-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderController.getByIds
[POST] /service-eam/eam-asset-depreciation-detail/save , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.save
[ALL] /service-eam/eam-asset-stock-collection/import-excel , method = com.dt.platform.eam.controller.AssetStockCollectionController.importExcel
[POST] /service-changes/chs-example-order/approve , method = org.github.foxnic.web.changes.controller.ExampleOrderController.approve
[POST] /service-eam/eam-plan-execute-log/get-by-ids , method = com.dt.platform.eam.controller.PlanExecuteLogController.getByIds
[POST] /service-dataperm/dp-example-shop/insert , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.insert
[POST] /service-changes/chs-change-instance/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.deleteByIds
[POST] /service-changes/chs-example-order/start-process , method = org.github.foxnic.web.changes.controller.ExampleOrderController.startProcess
[POST] /service-dataperm/dp-example-shop/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.getById
[POST] /service-eam/eam-plan-execute-log/query-list , method = com.dt.platform.eam.controller.PlanExecuteLogController.queryList
[ALL] /service-eam/eam-asset-stock-collection/stock-collection , method = com.dt.platform.eam.controller.AssetStockCollectionController.stockCollection
[POST] /service-dataperm/dp-example-shop/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.getByIds
[POST] /service-eam/eam-plan-execute-log/delete , method = com.dt.platform.eam.controller.PlanExecuteLogController.deleteById
[POST] /service-changes/chs-example-order/query-list , method = org.github.foxnic.web.changes.controller.ExampleOrderController.queryList
[ALL] /service-eam/eam-asset-stock-collection/stock-distribute , method = com.dt.platform.eam.controller.AssetStockCollectionController.stockDistribute
[POST] /service-eam/eam-plan-execute-log/delete-by-ids , method = com.dt.platform.eam.controller.PlanExecuteLogController.deleteByIds
[POST] /service-dataperm/dp-example-shop/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.queryList
[POST] /service-changes/chs-example-order/delete , method = org.github.foxnic.web.changes.controller.ExampleOrderController.deleteById
[POST] /service-changes/chs-change-instance/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.queryPagedList
[POST] /service-eam/eam-plan-execute-log/query-paged-list , method = com.dt.platform.eam.controller.PlanExecuteLogController.queryPagedList
[POST] /service-dataperm/dp-example-shop/delete , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.deleteById
[POST] /service-changes/chs-example-order/delete-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderController.deleteByIds
[ALL] /service-changes/chs-change-instance/export-excel , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.exportExcel
[POST] /service-dataperm/dp-example-shop/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.deleteByIds
[POST] /service-eam/eam-position/update , method = com.dt.platform.eam.controller.PositionController.update
[POST] /service-eam/eam-asset-depreciation-detail/insert , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.insert
[ALL] /service-changes/chs-change-instance/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.exportExcelTemplate
[POST] /service-changes/chs-example-order/query-paged-list , method = org.github.foxnic.web.changes.controller.ExampleOrderController.queryPagedList
[POST] /service-dataperm/dp-example-shop/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.queryPagedList
[POST] /service-eam/eam-asset-depreciation-detail/get-by-id , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.getById
[ALL] /service-changes/chs-example-order/export-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderController.exportExcel
[POST] /service-eam/eam-position/save , method = com.dt.platform.eam.controller.PositionController.save
[ALL] /service-changes/chs-change-instance/import-excel , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.importExcel
[POST] /service-eam/eam-asset-stock-deliver/update , method = com.dt.platform.eam.controller.AssetStockDeliverController.update
[POST] /service-knowledgebase/kn-category/get-by-ids , method = com.dt.platform.knowledgebase.controller.CategoryController.getByIds
[POST] /service-system/sys-busi-role/query-paged-list , method = org.github.foxnic.web.system.controller.BusiRoleController.queryPagedList
[ALL] /service-changes/chs-example-order/export-excel-template , method = org.github.foxnic.web.changes.controller.ExampleOrderController.exportExcelTemplate
[ALL] /service-changes/chs-example-order/import-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderController.importExcel
[POST] /service-changes/chs-change-bill/update , method = org.github.foxnic.web.changes.controller.ChangeBillController.update
[POST] /service-changes/chs-change-bill/save , method = org.github.foxnic.web.changes.controller.ChangeBillController.save
[POST] /service-changes/chs-change-bill/insert , method = org.github.foxnic.web.changes.controller.ChangeBillController.insert
[POST] /service-changes/chs-change-bill/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeBillController.getById
[POST] /service-changes/chs-change-bill/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeBillController.getByIds
[POST] /service-changes/chs-change-definition/update , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.update
[POST] /service-changes/chs-change-bill/query-list , method = org.github.foxnic.web.changes.controller.ChangeBillController.queryList
[POST] /service-changes/chs-change-definition/save , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.save
[POST] /service-changes/chs-change-bill/delete , method = org.github.foxnic.web.changes.controller.ChangeBillController.deleteById
[POST] /service-changes/chs-change-definition/insert , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.insert
[POST] /service-changes/chs-change-bill/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeBillController.deleteByIds
[POST] /service-changes/chs-change-definition/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.getById
[POST] /service-knowledgebase/kn-category/query-list , method = com.dt.platform.knowledgebase.controller.CategoryController.queryList
[POST] /service-changes/chs-change-bill/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeBillController.queryPagedList
[POST] /service-changes/chs-change-definition/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.getByIds
[POST] /service-knowledgebase/kn-category/delete , method = com.dt.platform.knowledgebase.controller.CategoryController.deleteById
[ALL] /service-changes/chs-change-bill/export-excel , method = org.github.foxnic.web.changes.controller.ChangeBillController.exportExcel
[POST] /service-knowledgebase/kn-category/delete-by-ids , method = com.dt.platform.knowledgebase.controller.CategoryController.deleteByIds
[ALL] /service-changes/chs-change-bill/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeBillController.exportExcelTemplate
[POST] /service-changes/chs-change-definition/query-list , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.queryList
[ALL] /service-changes/chs-change-bill/import-excel , method = org.github.foxnic.web.changes.controller.ChangeBillController.importExcel
[POST] /service-changes/chs-change-definition/delete , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.deleteById
[POST] /service-knowledgebase/kn-category/query-paged-list , method = com.dt.platform.knowledgebase.controller.CategoryController.queryPagedList
[ALL] /service-knowledgebase/kn-category/export-excel , method = com.dt.platform.knowledgebase.controller.CategoryController.exportExcel
[POST] /service-changes/chs-change-definition/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.deleteByIds
[ALL] /service-knowledgebase/kn-category/export-excel-template , method = com.dt.platform.knowledgebase.controller.CategoryController.exportExcelTemplate
[ALL] /service-knowledgebase/kn-category/import-excel , method = com.dt.platform.knowledgebase.controller.CategoryController.importExcel
[POST] /service-changes/chs-change-event/update , method = org.github.foxnic.web.changes.controller.ChangeEventController.update
[POST] /service-changes/chs-change-definition/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.queryPagedList
[POST] /service-eam/eam-asset-stock-deliver/save , method = com.dt.platform.eam.controller.AssetStockDeliverController.save
[POST] /service-changes/chs-change-data/update , method = org.github.foxnic.web.changes.controller.ChangeDataController.update
[POST] /service-knowledgebase/kn-content/update , method = com.dt.platform.knowledgebase.controller.ContentController.update
[POST] /service-changes/chs-change-event/save , method = org.github.foxnic.web.changes.controller.ChangeEventController.save
[POST] /service-changes/chs-change-data/save , method = org.github.foxnic.web.changes.controller.ChangeDataController.save
[POST] /service-eam/eam-asset-stock-deliver/insert , method = com.dt.platform.eam.controller.AssetStockDeliverController.insert
[POST] /service-eam/eam-position/insert , method = com.dt.platform.eam.controller.PositionController.insert
[POST] /service-knowledgebase/kn-content/save , method = com.dt.platform.knowledgebase.controller.ContentController.save
[POST] /service-eam/eam-asset-stock-deliver/get-by-id , method = com.dt.platform.eam.controller.AssetStockDeliverController.getById
[POST] /service-changes/chs-change-data/insert , method = org.github.foxnic.web.changes.controller.ChangeDataController.insert
[POST] /service-eam/eam-position/get-by-id , method = com.dt.platform.eam.controller.PositionController.getById
[POST] /service-changes/chs-change-event/insert , method = org.github.foxnic.web.changes.controller.ChangeEventController.insert
[POST] /service-eam/eam-asset-stock-deliver/get-by-ids , method = com.dt.platform.eam.controller.AssetStockDeliverController.getByIds
[POST] /service-eam/eam-position/get-by-ids , method = com.dt.platform.eam.controller.PositionController.getByIds
[POST] /service-changes/chs-change-data/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeDataController.getById
[POST] /service-knowledgebase/kn-content/insert , method = com.dt.platform.knowledgebase.controller.ContentController.insert
[POST] /service-changes/chs-change-event/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeEventController.getById
[ALL] /service-eam/eam-asset-stock-deliver/confirm-operation , method = com.dt.platform.eam.controller.AssetStockDeliverController.confirmOperation
[POST] /service-changes/chs-change-data/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDataController.getByIds
[POST] /service-knowledgebase/kn-content/get-by-id , method = com.dt.platform.knowledgebase.controller.ContentController.getById
[POST] /service-changes/chs-change-event/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeEventController.getByIds
[POST] /service-eam/eam-position/query-list , method = com.dt.platform.eam.controller.PositionController.queryList
[POST] /service-knowledgebase/kn-content/get-by-ids , method = com.dt.platform.knowledgebase.controller.ContentController.getByIds
[POST] /service-changes/chs-change-data/query-list , method = org.github.foxnic.web.changes.controller.ChangeDataController.queryList
[POST] /service-eam/eam-position/delete , method = com.dt.platform.eam.controller.PositionController.deleteById
[POST] /service-eam/eam-asset-stock-deliver/query-list , method = com.dt.platform.eam.controller.AssetStockDeliverController.queryList
[POST] /service-eam/eam-position/delete-by-ids , method = com.dt.platform.eam.controller.PositionController.deleteByIds
[POST] /service-changes/chs-change-data/delete , method = org.github.foxnic.web.changes.controller.ChangeDataController.deleteById
[POST] /service-eam/eam-asset-stock-deliver/delete , method = com.dt.platform.eam.controller.AssetStockDeliverController.deleteById
[POST] /service-knowledgebase/kn-content/query-list , method = com.dt.platform.knowledgebase.controller.ContentController.queryList
[POST] /service-changes/chs-change-data/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDataController.deleteByIds
[POST] /service-eam/eam-position/query-paged-list , method = com.dt.platform.eam.controller.PositionController.queryPagedList
[POST] /service-eam/eam-asset-stock-deliver/delete-by-ids , method = com.dt.platform.eam.controller.AssetStockDeliverController.deleteByIds
[POST] /service-knowledgebase/kn-content/delete , method = com.dt.platform.knowledgebase.controller.ContentController.deleteById
[POST] /service-changes/chs-change-data/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeDataController.queryPagedList
[POST] /service-eam/eam-asset-collection-return/query-paged-list , method = com.dt.platform.eam.controller.AssetCollectionReturnController.queryPagedList
[ALL] /service-changes/chs-change-data/export-excel , method = org.github.foxnic.web.changes.controller.ChangeDataController.exportExcel
[POST] /service-knowledgebase/kn-content/delete-by-ids , method = com.dt.platform.knowledgebase.controller.ContentController.deleteByIds
[ALL] /service-eam/eam-asset-collection-return/export-excel , method = com.dt.platform.eam.controller.AssetCollectionReturnController.exportExcel
[ALL] /service-changes/chs-change-data/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeDataController.exportExcelTemplate
[ALL] /service-eam/eam-asset-collection-return/export-excel-template , method = com.dt.platform.eam.controller.AssetCollectionReturnController.exportExcelTemplate
[POST] /service-eam/eam-asset-stock-deliver/query-paged-list , method = com.dt.platform.eam.controller.AssetStockDeliverController.queryPagedList
[POST] /service-eam/eam-purchase-apply/update , method = com.dt.platform.eam.controller.PurchaseApplyController.update
[ALL] /service-changes/chs-change-data/import-excel , method = org.github.foxnic.web.changes.controller.ChangeDataController.importExcel
[ALL] /service-eam/eam-asset-collection-return/import-excel , method = com.dt.platform.eam.controller.AssetCollectionReturnController.importExcel
[ALL] /service-eam/eam-asset-stock-deliver/export-excel , method = com.dt.platform.eam.controller.AssetStockDeliverController.exportExcel
[POST] /service-knowledgebase/kn-content/query-paged-list , method = com.dt.platform.knowledgebase.controller.ContentController.queryPagedList
[ALL] /service-eam/eam-purchase-apply/check , method = com.dt.platform.eam.controller.PurchaseApplyController.check
[ALL] /service-eam/eam-asset-stock-deliver/export-excel-template , method = com.dt.platform.eam.controller.AssetStockDeliverController.exportExcelTemplate
[ALL] /service-knowledgebase/kn-content/export-excel , method = com.dt.platform.knowledgebase.controller.ContentController.exportExcel
[POST] /service-changes/chs-change-approver/update , method = org.github.foxnic.web.changes.controller.ChangeApproverController.update
[ALL] /service-eam/eam-asset-stock-deliver/import-excel , method = com.dt.platform.eam.controller.AssetStockDeliverController.importExcel
[ALL] /service-knowledgebase/kn-content/export-excel-template , method = com.dt.platform.knowledgebase.controller.ContentController.exportExcelTemplate
[POST] /service-changes/chs-change-approver/save , method = org.github.foxnic.web.changes.controller.ChangeApproverController.save
[ALL] /service-knowledgebase/kn-content/import-excel , method = com.dt.platform.knowledgebase.controller.ContentController.importExcel
[ALL] /business/knowledgebase/category/category_form.html , method = com.dt.platform.knowledgebase.page.CategoryPageController.form
[POST] /service-eam/eam-purchase-apply/save , method = com.dt.platform.eam.controller.PurchaseApplyController.save
[POST] /service-changes/chs-change-approver/insert , method = org.github.foxnic.web.changes.controller.ChangeApproverController.insert
[POST] /service-eam/eam-asset-depreciation-detail/get-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.getByIds
[ALL] /business/knowledgebase/category/category_list.html , method = com.dt.platform.knowledgebase.page.CategoryPageController.list
[ALL] /business/knowledgebase/content/content_form.html , method = com.dt.platform.knowledgebase.page.ContentPageController.form
[ALL] /business/knowledgebase/content/content_list.html , method = com.dt.platform.knowledgebase.page.ContentPageController.list
[POST] /service-system/sys-dict-item/update , method = org.github.foxnic.web.system.controller.DictItemController.update
[POST] /service-cust/cust-clps-demo/update , method = com.dt.platform.customer.controller.ClpsDemoController.update
[POST] /service-eam/eam-purchase-apply/insert , method = com.dt.platform.eam.controller.PurchaseApplyController.insert
[POST] /service-cust/cust-clps-demo/save , method = com.dt.platform.customer.controller.ClpsDemoController.save
[POST] /service-eam/eam-purchase-apply/get-by-id , method = com.dt.platform.eam.controller.PurchaseApplyController.getById
[POST] /service-system/sys-dict-item/save , method = org.github.foxnic.web.system.controller.DictItemController.save
[POST] /service-cust/cust-clps-demo/insert , method = com.dt.platform.customer.controller.ClpsDemoController.insert
[POST] /service-eam/eam-purchase-apply/get-by-ids , method = com.dt.platform.eam.controller.PurchaseApplyController.getByIds
[POST] /service-cust/cust-clps-demo/get-by-id , method = com.dt.platform.customer.controller.ClpsDemoController.getById
[ALL] /service-eam/eam-purchase-apply/confirm-operation , method = com.dt.platform.eam.controller.PurchaseApplyController.confirmOperation
[POST] /service-system/sys-dict-item/insert , method = org.github.foxnic.web.system.controller.DictItemController.insert
[POST] /service-cust/cust-clps-demo/get-by-ids , method = com.dt.platform.customer.controller.ClpsDemoController.getByIds
[POST] /service-changes/chs-change-approver/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeApproverController.getById
[POST] /service-system/sys-dict-item/get-by-id , method = org.github.foxnic.web.system.controller.DictItemController.getById
[POST] /service-changes/chs-change-approver/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeApproverController.getByIds
[POST] /service-cust/cust-clps-demo/query-list , method = com.dt.platform.customer.controller.ClpsDemoController.queryList
[POST] /service-system/sys-dict-item/get-by-ids , method = org.github.foxnic.web.system.controller.DictItemController.getByIds
[POST] /service-cust/cust-clps-demo/delete , method = com.dt.platform.customer.controller.ClpsDemoController.deleteById
[POST] /service-changes/chs-change-approver/query-list , method = org.github.foxnic.web.changes.controller.ChangeApproverController.queryList
[POST] /service-cust/cust-clps-demo/delete-by-ids , method = com.dt.platform.customer.controller.ClpsDemoController.deleteByIds
[POST] /service-changes/chs-change-approver/delete , method = org.github.foxnic.web.changes.controller.ChangeApproverController.deleteById
[POST] /service-system/sys-dict-item/query-list , method = org.github.foxnic.web.system.controller.DictItemController.queryList
[POST] /service-cust/cust-clps-demo/query-paged-list , method = com.dt.platform.customer.controller.ClpsDemoController.queryPagedList
[POST] /service-changes/chs-change-approver/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeApproverController.deleteByIds
[POST] /service-system/sys-dict-item/delete , method = org.github.foxnic.web.system.controller.DictItemController.deleteById
[POST] /service-changes/chs-change-approver/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeApproverController.queryPagedList
[POST] /service-system/sys-dict-item/delete-by-ids , method = org.github.foxnic.web.system.controller.DictItemController.deleteByIds
[POST] /service-eam/eam-asset-depreciation-detail/query-list , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.queryList
[ALL] /service-changes/chs-change-approver/export-excel , method = org.github.foxnic.web.changes.controller.ChangeApproverController.exportExcel
[ALL] /service-changes/chs-change-approver/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeApproverController.exportExcelTemplate
[POST] /service-eam/eam-asset-depreciation-detail/delete , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.deleteById
[ALL] /service-changes/chs-change-approver/import-excel , method = org.github.foxnic.web.changes.controller.ChangeApproverController.importExcel
[POST] /service-system/sys-dict-item/query-paged-list , method = org.github.foxnic.web.system.controller.DictItemController.queryPagedList
[ALL] /business/changes/example_order/example_order_form.html , method = org.github.foxnic.web.changes.page.ExampleOrderPageController.form
[POST] /service-eam/eam-asset-depreciation-detail/delete-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.deleteByIds
[ALL] /business/changes/example_order/example_order_list.html , method = org.github.foxnic.web.changes.page.ExampleOrderPageController.list
[POST] /service-customer/cust-repiar-demo/update , method = com.dt.platform.customer.controller.RepiarDemoController.update
[ALL] /business/changes/change_approver/change_approver_form.html , method = org.github.foxnic.web.changes.page.ChangeApproverPageController.form
[ALL] /business/changes/change_approver/change_approver_list.html , method = org.github.foxnic.web.changes.page.ChangeApproverPageController.list
[POST] /service-customer/cust-repiar-demo/save , method = com.dt.platform.customer.controller.RepiarDemoController.save
[ALL] /business/changes/change_bill/change_bill_form.html , method = org.github.foxnic.web.changes.page.ChangeBillPageController.form
[POST] /service-system/sys-code-example-car/update , method = org.github.foxnic.web.system.controller.CodeExampleCarController.update
[ALL] /business/changes/change_bill/change_bill_list.html , method = org.github.foxnic.web.changes.page.ChangeBillPageController.list
[POST] /service-customer/cust-repiar-demo/insert , method = com.dt.platform.customer.controller.RepiarDemoController.insert
[ALL] /business/changes/change_definition/change_definition_form.html , method = org.github.foxnic.web.changes.page.ChangeDefinitionPageController.form
[ALL] /business/changes/change_definition/change_definition_list.html , method = org.github.foxnic.web.changes.page.ChangeDefinitionPageController.list
[POST] /service-customer/cust-repiar-demo/get-by-id , method = com.dt.platform.customer.controller.RepiarDemoController.getById
[ALL] /business/changes/change_data/change_data_form.html , method = org.github.foxnic.web.changes.page.ChangeDataPageController.form
[POST] /service-system/sys-code-example-car/save , method = org.github.foxnic.web.system.controller.CodeExampleCarController.save
[POST] /service-customer/cust-repiar-demo/get-by-ids , method = com.dt.platform.customer.controller.RepiarDemoController.getByIds
[ALL] /business/changes/change_data/change_data_list.html , method = org.github.foxnic.web.changes.page.ChangeDataPageController.list
[ALL] /business/changes/change_instance/change_instance_form.html , method = org.github.foxnic.web.changes.page.ChangeInstancePageController.form
[POST] /service-eam/eam-asset/update , method = com.dt.platform.eam.controller.AssetController.update
[ALL] /business/changes/change_instance/change_instance_list.html , method = org.github.foxnic.web.changes.page.ChangeInstancePageController.list
[POST] /service-customer/cust-repiar-demo/query-list , method = com.dt.platform.customer.controller.RepiarDemoController.queryList
[POST] /service-eam/eam-asset-depreciation-detail/query-paged-list , method = com.dt.platform.eam.controller.AssetDepreciationDetailController.queryPagedList
[POST] /service-system/sys-code-example-car/insert , method = org.github.foxnic.web.system.controller.CodeExampleCarController.insert
[ALL] /business/changes/example_order_item/example_order_item_form.html , method = org.github.foxnic.web.changes.page.ExampleOrderItemPageController.form
[POST] /service-customer/cust-repiar-demo/delete , method = com.dt.platform.customer.controller.RepiarDemoController.deleteById
[POST] /service-dataperm/dp-example-catalog/update , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.update
[POST] /service-eam/eam-asset-depreciation-exclude/update , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.update
[ALL] /business/changes/example_order_item/example_order_item_list.html , method = org.github.foxnic.web.changes.page.ExampleOrderItemPageController.list
[POST] /service-system/sys-code-example-car/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleCarController.getById
[POST] /service-customer/cust-repiar-demo/delete-by-ids , method = com.dt.platform.customer.controller.RepiarDemoController.deleteByIds
[ALL] /business/changes/change_event/change_event_form.html , method = org.github.foxnic.web.changes.page.ChangeEventPageController.form
[POST] /service-system/sys-code-example-car/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleCarController.getByIds
[ALL] /business/changes/change_event/change_event_list.html , method = org.github.foxnic.web.changes.page.ChangeEventPageController.list
[POST] /service-eam/eam-asset-depreciation-exclude/save , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.save
[POST] /service-customer/cust-repiar-demo/query-paged-list , method = com.dt.platform.customer.controller.RepiarDemoController.queryPagedList
[POST] /service-dataperm/dp-example-catalog/save , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.save
[ALL] /business/customer/clps_demo/clps_demo_form.html , method = com.dt.platform.customer.page.ClpsDemoPageController.form
[POST] /service-eam/eam-asset-depreciation-exclude/insert , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.insert
[POST] /service-bpm/bpm-task-read/update , method = org.github.foxnic.web.bpm.controller.TaskReadController.update
[POST] /service-system/sys-code-example-car/query-list , method = org.github.foxnic.web.system.controller.CodeExampleCarController.queryList
[ALL] /business/customer/clps_demo/clps_demo_list.html , method = com.dt.platform.customer.page.ClpsDemoPageController.list
[POST] /service-eam/eam-asset-depreciation-exclude/get-by-id , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.getById
[POST] /service-bpm/bpm-task-read/save , method = org.github.foxnic.web.bpm.controller.TaskReadController.save
[ALL] /business/customer/repiar_demo/repiar_demo_form.html , method = com.dt.platform.customer.page.RepiarDemoPageController.form
[POST] /service-system/sys-code-example-car/delete , method = org.github.foxnic.web.system.controller.CodeExampleCarController.deleteById
[POST] /service-dataperm/dp-example-catalog/insert , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.insert
[POST] /service-eam/eam-asset-depreciation-exclude/get-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.getByIds
[ALL] /business/customer/repiar_demo/repiar_demo_list.html , method = com.dt.platform.customer.page.RepiarDemoPageController.list
[POST] /service-bpm/bpm-task-read/insert , method = org.github.foxnic.web.bpm.controller.TaskReadController.insert
[POST] /service-system/sys-code-example-car/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleCarController.deleteByIds
[POST] /service-bpm/bpm-task-read/get-by-id , method = org.github.foxnic.web.bpm.controller.TaskReadController.getById
[POST] /service-eam/eam-asset-depreciation-exclude/query-list , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.queryList
[POST] /service-vehicle/vehicle-a-select-item/update , method = com.dt.platform.vehicle.controller.ASelectItemController.update
[POST] /service-dataperm/dp-example-catalog/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.getById
[POST] /service-bpm/bpm-task-read/get-by-ids , method = org.github.foxnic.web.bpm.controller.TaskReadController.getByIds
[POST] /service-eam/eam-asset-depreciation-exclude/delete , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.deleteById
[POST] /service-vehicle/vehicle-a-select-item/save , method = com.dt.platform.vehicle.controller.ASelectItemController.save
[POST] /service-system/sys-code-example-car/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleCarController.queryPagedList
[POST] /service-dataperm/dp-example-catalog/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.getByIds
[POST] /service-vehicle/vehicle-a-select-item/insert , method = com.dt.platform.vehicle.controller.ASelectItemController.insert
[POST] /service-eam/eam-asset-depreciation-exclude/delete-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.deleteByIds
[ALL] /service-system/sys-code-example-car/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleCarController.exportExcel
[POST] /service-bpm/bpm-task-read/query-list , method = org.github.foxnic.web.bpm.controller.TaskReadController.queryList
[POST] /service-vehicle/vehicle-a-select-item/get-by-id , method = com.dt.platform.vehicle.controller.ASelectItemController.getById
[ALL] /service-system/sys-code-example-car/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleCarController.exportExcelTemplate
[POST] /service-bpm/bpm-task-read/delete , method = org.github.foxnic.web.bpm.controller.TaskReadController.deleteById
[POST] /service-eam/eam-asset-depreciation-exclude/query-paged-list , method = com.dt.platform.eam.controller.AssetDepreciationExcludeController.queryPagedList
[POST] /service-vehicle/vehicle-a-select-item/get-by-ids , method = com.dt.platform.vehicle.controller.ASelectItemController.getByIds
[ALL] /service-system/sys-code-example-car/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleCarController.importExcel
[POST] /service-dataperm/dp-example-catalog/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.queryList
[POST] /service-bpm/bpm-task-read/delete-by-ids , method = org.github.foxnic.web.bpm.controller.TaskReadController.deleteByIds
[POST] /service-vehicle/vehicle-a-select-item/query-list , method = com.dt.platform.vehicle.controller.ASelectItemController.queryList
[POST] /service-system/sys-code-example-mulit-pk/update , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.update
[POST] /service-eam/eam-asset-depreciation-history/update , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.update
[POST] /service-vehicle/vehicle-a-select-item/delete , method = com.dt.platform.vehicle.controller.ASelectItemController.deleteById
[POST] /service-bpm/bpm-task-read/query-paged-list , method = org.github.foxnic.web.bpm.controller.TaskReadController.queryPagedList
[POST] /service-dataperm/dp-example-catalog/delete , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.deleteById
[POST] /service-system/sys-code-example-mulit-pk/save , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.save
[POST] /service-vehicle/vehicle-a-select-item/delete-by-ids , method = com.dt.platform.vehicle.controller.ASelectItemController.deleteByIds
[POST] /service-eam/eam-asset-depreciation-history/save , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.save
[POST] /service-bpm/bpm-form-definition/update , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.update
[POST] /service-system/sys-code-example-mulit-pk/insert , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.insert
[POST] /service-vehicle/vehicle-a-select-item/query-paged-list , method = com.dt.platform.vehicle.controller.ASelectItemController.queryPagedList
[POST] /service-dataperm/dp-example-catalog/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.deleteByIds
[POST] /service-eam/eam-asset/save , method = com.dt.platform.eam.controller.AssetController.save
[ALL] /service-vehicle/vehicle-a-select-item/export-excel , method = com.dt.platform.vehicle.controller.ASelectItemController.exportExcel
[POST] /service-system/sys-code-example-mulit-pk/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.getById
[POST] /service-eam/eam-asset-depreciation-history/insert , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.insert
[POST] /service-bpm/bpm-form-definition/save , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.save
[ALL] /service-vehicle/vehicle-a-select-item/export-excel-template , method = com.dt.platform.vehicle.controller.ASelectItemController.exportExcelTemplate
[ALL] /service-vehicle/vehicle-a-select-item/import-excel , method = com.dt.platform.vehicle.controller.ASelectItemController.importExcel
[POST] /service-eam/eam-asset-depreciation-history/get-by-id , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.getById
[POST] /service-system/sys-code-example-mulit-pk/query-list , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.queryList
[POST] /service-eam/eam-asset-depreciation-history/get-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.getByIds
[POST] /service-bpm/bpm-form-definition/insert , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.insert
[POST] /service-dataperm/dp-example-catalog/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.queryPagedList
[POST] /service-system/sys-code-example-mulit-pk/delete , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.deleteById
[POST] /service-bpm/bpm-form-definition/get-by-id , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.getById
[POST] /service-vehicle/vehicle-apply/update , method = com.dt.platform.vehicle.controller.ApplyController.update
[POST] /service-system/sys-code-example-mulit-pk/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.queryPagedList
[POST] /service-eam/eam-asset-depreciation-history/query-list , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.queryList
[POST] /service-bpm/bpm-form-definition/get-by-ids , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.getByIds
[ALL] /service-system/sys-code-example-mulit-pk/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.exportExcel
[POST] /service-eam/eam-asset-depreciation-history/delete , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.deleteById
[ALL] /service-system/sys-code-example-mulit-pk/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.exportExcelTemplate
[POST] /service-dataperm/dp-rule/update , method = org.github.foxnic.web.dataperm.controller.RuleController.update
[POST] /service-vehicle/vehicle-apply/save , method = com.dt.platform.vehicle.controller.ApplyController.save
[POST] /service-eam/eam-asset-depreciation-history/delete-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.deleteByIds
[POST] /service-bpm/bpm-form-definition/query-list , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.queryList
[ALL] /service-system/sys-code-example-mulit-pk/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleMulitPkController.importExcel
[POST] /service-bpm/bpm-form-definition/delete , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.deleteById
[POST] /service-system/unit-test/rest/io/array , method = org.github.foxnic.web.system.test.RestApiTestController.array
[POST] /service-dataperm/dp-rule/apply , method = org.github.foxnic.web.dataperm.controller.RuleController.apply
[POST] /service-system/unit-test/rest/io/list , method = org.github.foxnic.web.system.test.RestApiTestController.list
[POST] /service-bpm/bpm-form-definition/delete-by-ids , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.deleteByIds
[POST] /service-eam/eam-asset-depreciation-history/query-paged-list , method = com.dt.platform.eam.controller.AssetDepreciationHistoryController.queryPagedList
[POST] /service-vehicle/vehicle-apply/insert , method = com.dt.platform.vehicle.controller.ApplyController.insert
[POST] /service-system/unit-test/rest/io/map , method = org.github.foxnic.web.system.test.RestApiTestController.map
[POST] /service-vehicle/vehicle-apply/cancel , method = com.dt.platform.vehicle.controller.ApplyController.cancel
[POST] /service-system/unit-test/rest/io/list-map , method = org.github.foxnic.web.system.test.RestApiTestController.listmap
[POST] /service-bpm/bpm-form-definition/query-paged-list , method = org.github.foxnic.web.bpm.controller.FormDefinitionController.queryPagedList
[POST] /service-eam/eam-asset-depreciation-oper/update , method = com.dt.platform.eam.controller.AssetDepreciationOperController.update
[POST] /service-vehicle/vehicle-apply/confirm , method = com.dt.platform.vehicle.controller.ApplyController.confirm
[POST] /service-system/unit-test/rest/io/vo2-list , method = org.github.foxnic.web.system.test.RestApiTestController.vo2list
[POST] /service-dataperm/dp-rule/save , method = org.github.foxnic.web.dataperm.controller.RuleController.save
[POST] /service-system/unit-test/rest/io/vo1-list , method = org.github.foxnic.web.system.test.RestApiTestController.vo1List
[POST] /service-vehicle/vehicle-apply/get-by-id , method = com.dt.platform.vehicle.controller.ApplyController.getById
[POST] /service-bpm/bpm-demo-common/update , method = org.github.foxnic.web.bpm.controller.DemoCommonController.update
[POST] /service-system/unit-test/rest/io/simple , method = org.github.foxnic.web.system.test.RestApiTestController.simple
[POST] /service-vehicle/vehicle-apply/get-by-ids , method = com.dt.platform.vehicle.controller.ApplyController.getByIds
[POST] /service-bpm/bpm-demo-common/save , method = org.github.foxnic.web.bpm.controller.DemoCommonController.save
[POST] /service-system/unit-test/rest/io/vo1 , method = org.github.foxnic.web.system.test.RestApiTestController.vo1
[POST] /service-dataperm/dp-rule/insert , method = org.github.foxnic.web.dataperm.controller.RuleController.insert
[POST] /service-bpm/bpm-demo-common/insert , method = org.github.foxnic.web.bpm.controller.DemoCommonController.insert
[POST] /service-system/unit-test/rest/io/vo2 , method = org.github.foxnic.web.system.test.RestApiTestController.vo2
[POST] /service-system/unit-test/rest/io/vo2-arr , method = org.github.foxnic.web.system.test.RestApiTestController.vo2arr
[POST] /service-vehicle/vehicle-apply/query-list , method = com.dt.platform.vehicle.controller.ApplyController.queryList
[POST] /service-bpm/bpm-demo-common/get-by-id , method = org.github.foxnic.web.bpm.controller.DemoCommonController.getById
[POST] /service-system/unit-test/rest/io/vo2-map , method = org.github.foxnic.web.system.test.RestApiTestController.vo2map
[POST] /service-dataperm/dp-rule/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleController.getById
[POST] /service-bpm/bpm-demo-common/get-by-ids , method = org.github.foxnic.web.bpm.controller.DemoCommonController.getByIds
[POST] /service-vehicle/vehicle-apply/delete , method = com.dt.platform.vehicle.controller.ApplyController.deleteById
[POST] /service-system/unit-test/rest/io/map-prop , method = org.github.foxnic.web.system.test.RestApiTestController.vo2map
[POST] /service-bpm/bpm-demo-common/bpm-callback , method = org.github.foxnic.web.bpm.controller.DemoCommonController.onProcessCallback
[POST] /service-vehicle/vehicle-apply/delete-by-ids , method = com.dt.platform.vehicle.controller.ApplyController.deleteByIds
[POST] /service-system/unit-test/rest/io/json , method = org.github.foxnic.web.system.test.RestApiTestController.json
[POST] /service-dataperm/dp-rule/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleController.getByIds
[POST] /service-system/unit-test/rest/io/simple/{id},{name} , method = org.github.foxnic.web.system.test.RestApiTestController.simple4Path
[POST] /service-bpm/bpm-demo-common/query-list , method = org.github.foxnic.web.bpm.controller.DemoCommonController.queryList
[POST] /service-dataperm/dp-rule/query-field-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryFieldList
[POST] /service-bpm/bpm-demo-common/delete , method = org.github.foxnic.web.bpm.controller.DemoCommonController.deleteById
[POST] /service-vehicle/vehicle-apply/query-paged-list , method = com.dt.platform.vehicle.controller.ApplyController.queryPagedList
[POST] /service-system/sys-tenant/update , method = org.github.foxnic.web.system.controller.TenantController.update
[ALL] /service-vehicle/vehicle-apply/export-excel , method = com.dt.platform.vehicle.controller.ApplyController.exportExcel
[POST] /service-bpm/bpm-demo-common/delete-by-ids , method = org.github.foxnic.web.bpm.controller.DemoCommonController.deleteByIds
[POST] /service-system/sys-tenant/save , method = org.github.foxnic.web.system.controller.TenantController.save
[ALL] /service-vehicle/vehicle-apply/export-excel-template , method = com.dt.platform.vehicle.controller.ApplyController.exportExcelTemplate
[POST] /service-bpm/bpm-demo-common/query-paged-list , method = org.github.foxnic.web.bpm.controller.DemoCommonController.queryPagedList
[POST] /service-dataperm/dp-rule/query-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryList
[ALL] /service-vehicle/vehicle-apply/import-excel , method = com.dt.platform.vehicle.controller.ApplyController.importExcel
[POST] /service-system/sys-tenant/insert , method = org.github.foxnic.web.system.controller.TenantController.insert
[POST] /service-vehicle/vehicle-apply/action-return , method = com.dt.platform.vehicle.controller.ApplyController.actionReturn
[POST] /service-system/sys-tenant/get-by-id , method = org.github.foxnic.web.system.controller.TenantController.getById
[POST] /service-bpm/bpm-process-definition/update , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.update
[POST] /service-system/sys-tenant/get-by-ids , method = org.github.foxnic.web.system.controller.TenantController.getByIds
[POST] /service-system/sys-tenant/query-list , method = org.github.foxnic.web.system.controller.TenantController.queryList
[POST] /service-bpm/bpm-process-definition/save , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.save
[POST] /service-system/sys-tenant/delete , method = org.github.foxnic.web.system.controller.TenantController.deleteById
[POST] /service-vehicle/vehicle-info/update , method = com.dt.platform.vehicle.controller.InfoController.update
[POST] /service-system/sys-tenant/delete-by-ids , method = org.github.foxnic.web.system.controller.TenantController.deleteByIds
[POST] /service-eam/eam-asset/insert , method = com.dt.platform.eam.controller.AssetController.insert
[POST] /service-dataperm/dp-rule/delete , method = org.github.foxnic.web.dataperm.controller.RuleController.deleteById
[POST] /service-bpm/bpm-process-definition/insert , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.insert
[POST] /service-eam/eam-asset/get-by-id , method = com.dt.platform.eam.controller.AssetController.getById
[POST] /service-system/sys-tenant/query-paged-list , method = org.github.foxnic.web.system.controller.TenantController.queryPagedList
[POST] /service-system/unit-test/bpm/start , method = org.github.foxnic.web.system.test.BPMTestController.start
[POST] /service-bpm/bpm-process-definition/get-by-id , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.getById
[POST] /service-eam/eam-asset/get-by-ids , method = com.dt.platform.eam.controller.AssetController.getByIds
[POST] /service-vehicle/vehicle-info/save , method = com.dt.platform.vehicle.controller.InfoController.save
[POST] /service-system/unit-test/bpm/save , method = org.github.foxnic.web.system.test.BPMTestController.save
[ALL] /service-eam/eam-asset/approve , method = com.dt.platform.eam.controller.AssetController.approve
[POST] /service-bpm/bpm-process-definition/get-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.getByIds
[POST] /service-system/sys-busi-role-member/update , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.update
[POST] /service-dataperm/dp-rule/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleController.deleteByIds
[POST] /service-system/sys-busi-role-member/save , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.save
[POST] /service-bpm/bpm-process-definition/query-list , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.queryList
[POST] /service-vehicle/vehicle-info/insert , method = com.dt.platform.vehicle.controller.InfoController.insert
[POST] /service-bpm/bpm-process-definition/delete , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.deleteById
[POST] /service-vehicle/vehicle-info/get-by-id , method = com.dt.platform.vehicle.controller.InfoController.getById
[POST] /service-system/sys-busi-role-member/insert , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.insert
[POST] /service-bpm/bpm-process-definition/delete-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.deleteByIds
[POST] /service-vehicle/vehicle-info/get-by-ids , method = com.dt.platform.vehicle.controller.InfoController.getByIds
[POST] /service-system/sys-busi-role-member/get-by-id , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.getById
[POST] /service-dataperm/dp-rule/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryPagedList
[POST] /service-system/sys-busi-role-member/get-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.getByIds
[ALL] /service-dataperm/dp-rule/export-excel , method = org.github.foxnic.web.dataperm.controller.RuleController.exportExcel
[POST] /service-bpm/bpm-process-definition/query-paged-list , method = org.github.foxnic.web.bpm.controller.ProcessDefinitionController.queryPagedList
[POST] /service-system/sys-busi-role-member/inserts , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.inserts
[POST] /service-vehicle/vehicle-info/query-list , method = com.dt.platform.vehicle.controller.InfoController.queryList
[POST] /service-bpm/portal/query-summary , method = org.github.foxnic.web.bpm.controller.PortalController.querySummary
[ALL] /service-dataperm/dp-rule/export-excel-template , method = org.github.foxnic.web.dataperm.controller.RuleController.exportExcelTemplate
[POST] /service-system/sys-busi-role-member/query-list , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.queryList
[POST] /service-vehicle/vehicle-info/delete , method = com.dt.platform.vehicle.controller.InfoController.deleteById
[POST] /service-bpm/portal/query-commonly-used , method = org.github.foxnic.web.bpm.controller.PortalController.queryCommonlyUsed
[ALL] /service-dataperm/dp-rule/import-excel , method = org.github.foxnic.web.dataperm.controller.RuleController.importExcel
[POST] /service-bpm/portal/query-latest-used , method = org.github.foxnic.web.bpm.controller.PortalController.queryLatestUsed
[POST] /service-vehicle/vehicle-info/delete-by-ids , method = com.dt.platform.vehicle.controller.InfoController.deleteByIds
[POST] /service-system/sys-busi-role-member/delete , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.deleteById
[POST] /service-bpm/portal/query-my-process , method = org.github.foxnic.web.bpm.controller.PortalController.queryMyDrafted
[POST] /service-system/sys-busi-role-member/delete-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.deleteByIds
[POST] /service-bpm/portal/query-catalog , method = org.github.foxnic.web.bpm.controller.PortalController.queryCatalog
[POST] /service-dataperm/dp-example-brand/update , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.update
[POST] /service-bpm/bpm-process-instance/start , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.start
[POST] /service-system/sys-busi-role-member/query-paged-list , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.queryPagedList
[POST] /service-vehicle/vehicle-info/query-paged-list , method = com.dt.platform.vehicle.controller.InfoController.queryPagedList
[POST] /service-bpm/bpm-process-instance/get-by-id , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.getById
[POST] /service-dataperm/dp-example-brand/save , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.save
[POST] /service-bpm/bpm-process-instance/get-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.getByIds
[ALL] /service-vehicle/vehicle-info/export-excel , method = com.dt.platform.vehicle.controller.InfoController.exportExcel
[ALL] /service-vehicle/vehicle-info/export-excel-template , method = com.dt.platform.vehicle.controller.InfoController.exportExcelTemplate
[POST] /service-system/sys-code-example/update , method = org.github.foxnic.web.system.controller.CodeExampleController.update
[POST] /service-bpm/bpm-process-instance/delete-by-ids , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.abandonProcess
[ALL] /service-vehicle/vehicle-info/import-excel , method = com.dt.platform.vehicle.controller.InfoController.importExcel
[POST] /service-dataperm/dp-example-brand/insert , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.insert
[POST] /service-eam/eam-asset/query-list , method = com.dt.platform.eam.controller.AssetController.queryList
[POST] /service-bpm/bpm-process-instance/delete , method = org.github.foxnic.web.bpm.controller.ProcessInstanceController.abandonProcess
[POST] /service-eam/eam-asset/delete , method = com.dt.platform.eam.controller.AssetController.deleteById
[POST] /service-system/sys-code-example/save , method = org.github.foxnic.web.system.controller.CodeExampleController.save
[POST] /service-dataperm/dp-example-brand/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.getById
[ALL] /service-eam/eam-asset-employee-repair/import-excel , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.importExcel
[POST] /service-vehicle/vehicle-info/query-paged-select-list , method = com.dt.platform.vehicle.controller.InfoController.queryPagedSelectList
[POST] /service-eam/eam-asset/delete-by-ids , method = com.dt.platform.eam.controller.AssetController.deleteByIds
[POST] /service-vehicle/vehicle-m-select-item/update , method = com.dt.platform.vehicle.controller.MSelectItemController.update
[POST] /service-dataperm/dp-example-brand/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.getByIds
[POST] /service-system/sys-code-example/insert , method = org.github.foxnic.web.system.controller.CodeExampleController.insert
[POST] /service-eam/eam-asset-handle/update , method = com.dt.platform.eam.controller.AssetHandleController.update
[POST] /service-vehicle/vehicle-m-select-item/save , method = com.dt.platform.vehicle.controller.MSelectItemController.save
[POST] /service-system/sys-code-example/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleController.getById
[POST] /service-vehicle/vehicle-m-select-item/insert , method = com.dt.platform.vehicle.controller.MSelectItemController.insert
[POST] /service-dataperm/dp-example-brand/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.queryList
[POST] /service-system/sys-code-example/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleController.getByIds
[POST] /service-eam/eam-asset-handle/save , method = com.dt.platform.eam.controller.AssetHandleController.save
[POST] /service-vehicle/vehicle-m-select-item/get-by-id , method = com.dt.platform.vehicle.controller.MSelectItemController.getById
[POST] /service-dataperm/dp-example-brand/delete , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.deleteById
[POST] /service-vehicle/vehicle-m-select-item/get-by-ids , method = com.dt.platform.vehicle.controller.MSelectItemController.getByIds
[POST] /service-system/sys-code-example/query-list , method = org.github.foxnic.web.system.controller.CodeExampleController.queryList
[POST] /service-eam/eam-asset-handle/insert , method = com.dt.platform.eam.controller.AssetHandleController.insert
[POST] /service-vehicle/vehicle-m-select-item/query-list , method = com.dt.platform.vehicle.controller.MSelectItemController.queryList
[POST] /service-dataperm/dp-example-brand/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.deleteByIds
[POST] /service-system/sys-code-example/delete , method = org.github.foxnic.web.system.controller.CodeExampleController.deleteById
[POST] /service-eam/eam-asset-handle/get-by-id , method = com.dt.platform.eam.controller.AssetHandleController.getById
[POST] /service-vehicle/vehicle-m-select-item/delete , method = com.dt.platform.vehicle.controller.MSelectItemController.deleteById
[POST] /service-system/sys-code-example/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleController.deleteByIds
[POST] /service-vehicle/vehicle-m-select-item/delete-by-ids , method = com.dt.platform.vehicle.controller.MSelectItemController.deleteByIds
[POST] /service-eam/eam-asset-handle/get-by-ids , method = com.dt.platform.eam.controller.AssetHandleController.getByIds
[POST] /service-dataperm/dp-example-brand/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.queryPagedList
[POST] /service-vehicle/vehicle-m-select-item/query-paged-list , method = com.dt.platform.vehicle.controller.MSelectItemController.queryPagedList
[POST] /service-system/sys-code-example/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleController.queryPagedList
[POST] /service-eam/eam-asset-handle/query-list , method = com.dt.platform.eam.controller.AssetHandleController.queryList
[ALL] /business/system/busi_role_member/busi_role_member_form.html , method = org.github.foxnic.web.system.page.BusiRoleMemberPageController.form
[POST] /service-eam/eam-asset-handle/delete , method = com.dt.platform.eam.controller.AssetHandleController.deleteById
[POST] /service-vehicle/vehicle-maintenance/update , method = com.dt.platform.vehicle.controller.MaintenanceController.update
[POST] /service-dataperm/dp-example-product/update , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.update
[ALL] /business/system/busi_role_member/busi_role_member_list.html , method = org.github.foxnic.web.system.page.BusiRoleMemberPageController.list
[POST] /service-eam/eam-asset-handle/delete-by-ids , method = com.dt.platform.eam.controller.AssetHandleController.deleteByIds
[ALL] /business/system/layui/table_custom_dialog.html , method = org.github.foxnic.web.system.page.LayUIPageController.login
[ALL] /business/system/code_example_car/code_example_car_form.html , method = org.github.foxnic.web.system.page.CodeExampleCarPageController.form
[ALL] /business/system/code_example_car/code_example_car_list.html , method = org.github.foxnic.web.system.page.CodeExampleCarPageController.list
[POST] /service-vehicle/vehicle-maintenance/save , method = com.dt.platform.vehicle.controller.MaintenanceController.save
[ALL] /business/system/invoke_log/invoke_log_form.html , method = org.github.foxnic.web.system.page.InvokeLogPageController.form
[POST] /service-dataperm/dp-example-product/save , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.save
[POST] /service-eam/eam-asset-handle/query-paged-list , method = com.dt.platform.eam.controller.AssetHandleController.queryPagedList
[POST] /service-eam/eam-asset/query-paged-list , method = com.dt.platform.eam.controller.AssetController.queryPagedList
[ALL] /business/system/invoke_log/invoke_log_list.html , method = org.github.foxnic.web.system.page.InvokeLogPageController.list
[ALL] /service-eam/eam-asset-handle/export-excel , method = com.dt.platform.eam.controller.AssetHandleController.exportExcel
[ALL] /service-eam/eam-asset/export-excel , method = com.dt.platform.eam.controller.AssetController.exportExcel
[ALL] /business/system/code_example_student/code_example_student_form.html , method = org.github.foxnic.web.system.page.CodeExampleStudentPageController.form
[POST] /service-vehicle/vehicle-maintenance/insert , method = com.dt.platform.vehicle.controller.MaintenanceController.insert
[ALL] /service-eam/eam-asset-handle/export-excel-template , method = com.dt.platform.eam.controller.AssetHandleController.exportExcelTemplate
[ALL] /business/system/code_example_student/code_example_student_list.html , method = org.github.foxnic.web.system.page.CodeExampleStudentPageController.list
[ALL] /service-eam/eam-asset/export-excel-template , method = com.dt.platform.eam.controller.AssetController.exportExcelTemplate
[POST] /service-vehicle/vehicle-maintenance/cancel , method = com.dt.platform.vehicle.controller.MaintenanceController.cancel
[ALL] /service-eam/eam-asset-handle/import-excel , method = com.dt.platform.eam.controller.AssetHandleController.importExcel
[ALL] /service-eam/eam-asset/import-excel , method = com.dt.platform.eam.controller.AssetController.importExcel
[ALL] /business/system/node/node_form.html , method = org.github.foxnic.web.system.page.NodePageController.form
[POST] /service-dataperm/dp-example-product/insert , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.insert
[POST] /service-vehicle/vehicle-maintenance/finish , method = com.dt.platform.vehicle.controller.MaintenanceController.finish
[ALL] /business/system/node/node_list.html , method = org.github.foxnic.web.system.page.NodePageController.list
[POST] /service-eam/eam-asset-item/update , method = com.dt.platform.eam.controller.AssetItemController.update
[POST] /service-vehicle/vehicle-maintenance/confirm , method = com.dt.platform.vehicle.controller.MaintenanceController.confirm
[ALL] /business/system/config/config_form.html , method = org.github.foxnic.web.system.page.ConfigPageController.form
[POST] /service-vehicle/vehicle-maintenance/get-by-id , method = com.dt.platform.vehicle.controller.MaintenanceController.getById
[POST] /service-dataperm/dp-example-product/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.getById
[ALL] /business/system/config/config_list.html , method = org.github.foxnic.web.system.page.ConfigPageController.list
[POST] /service-eam/eam-asset-item/save , method = com.dt.platform.eam.controller.AssetItemController.save
[POST] /service-vehicle/vehicle-maintenance/get-by-ids , method = com.dt.platform.vehicle.controller.MaintenanceController.getByIds
[ALL] /business/system/config/config_define_form.html , method = org.github.foxnic.web.system.page.ConfigPageController.defileForm
[ALL] /business/system/lang/lang_form.html , method = org.github.foxnic.web.system.page.LangPageController.form
[POST] /service-dataperm/dp-example-product/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.getByIds
[POST] /service-eam/eam-asset-item/insert , method = com.dt.platform.eam.controller.AssetItemController.insert
[ALL] /business/system/lang/lang_list.html , method = org.github.foxnic.web.system.page.LangPageController.list
[POST] /service-vehicle/vehicle-maintenance/query-list , method = com.dt.platform.vehicle.controller.MaintenanceController.queryList
[POST] /service-eam/eam-asset-item/get-by-id , method = com.dt.platform.eam.controller.AssetItemController.getById
[ALL] /index.html , method = org.github.foxnic.web.system.page.PortalPageController.index
[ALL] / , method = org.github.foxnic.web.system.page.PortalPageController.index
[POST] /service-vehicle/vehicle-maintenance/delete , method = com.dt.platform.vehicle.controller.MaintenanceController.deleteById
[POST] /service-eam/eam-asset-item/get-by-ids , method = com.dt.platform.eam.controller.AssetItemController.getByIds
[POST] /service-eam/eam-asset/query-paged-list-by-select , method = com.dt.platform.eam.controller.AssetController.queryPagedListBySelect
[ALL] /login.html , method = org.github.foxnic.web.system.page.PortalPageController.login
[POST] /service-vehicle/vehicle-maintenance/delete-by-ids , method = com.dt.platform.vehicle.controller.MaintenanceController.deleteByIds
[ALL] /security/sso-login.html , method = org.github.foxnic.web.system.page.PortalPageController.ssoLogin
[POST] /service-eam/eam-asset-item/query-list , method = com.dt.platform.eam.controller.AssetItemController.queryList
[ALL] /pages/tpl/password.html , method = org.github.foxnic.web.system.page.PortalPageController.changePasswd
[POST] /service-eam/eam-asset-item/delete , method = com.dt.platform.eam.controller.AssetItemController.deleteById
[ALL] /business/system/tenant/tenant_form.html , method = org.github.foxnic.web.system.page.TenantPageController.form
[ALL] /business/system/tenant/tenant_list.html , method = org.github.foxnic.web.system.page.TenantPageController.list
[POST] /service-vehicle/vehicle-maintenance/query-paged-list , method = com.dt.platform.vehicle.controller.MaintenanceController.queryPagedList
[POST] /service-eam/eam-asset-item/delete-by-ids , method = com.dt.platform.eam.controller.AssetItemController.deleteByIds
[ALL] /business/system/code_example/code_example_form.html , method = org.github.foxnic.web.system.page.CodeExamplePageController.form
[ALL] /service-vehicle/vehicle-maintenance/export-excel , method = com.dt.platform.vehicle.controller.MaintenanceController.exportExcel
[ALL] /business/system/code_example/code_example_list.html , method = org.github.foxnic.web.system.page.CodeExamplePageController.list
[POST] /service-eam/eam-asset-item/query-paged-list , method = com.dt.platform.eam.controller.AssetItemController.queryPagedList
[ALL] /service-vehicle/vehicle-maintenance/export-excel-template , method = com.dt.platform.vehicle.controller.MaintenanceController.exportExcelTemplate
[ALL] /business/system/db_cache/db_cache_form.html , method = org.github.foxnic.web.system.page.DbCachePageController.form
[POST] /service-dataperm/dp-example-product/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.queryList
[ALL] /service-eam/eam-asset-item/export-excel , method = com.dt.platform.eam.controller.AssetItemController.exportExcel
[ALL] /service-vehicle/vehicle-maintenance/import-excel , method = com.dt.platform.vehicle.controller.MaintenanceController.importExcel
[POST] /service-eam/eam-asset/query-paged-list-by-selected , method = com.dt.platform.eam.controller.AssetController.queryPagedListBySelected
[ALL] /business/system/db_cache/db_cache_list.html , method = org.github.foxnic.web.system.page.DbCachePageController.list
[ALL] /service-eam/eam-asset-item/export-excel-template , method = com.dt.platform.eam.controller.AssetItemController.exportExcelTemplate
[ALL] /business/system/dict/dict_form.html , method = org.github.foxnic.web.system.page.DictPageController.form
[POST] /service-vehicle/vehicle-select-item/update , method = com.dt.platform.vehicle.controller.SelectItemController.update
[ALL] /service-eam/eam-asset/for-batch-approval , method = com.dt.platform.eam.controller.AssetController.forBatchApproval
[ALL] /service-eam/eam-asset-item/import-excel , method = com.dt.platform.eam.controller.AssetItemController.importExcel
[ALL] /business/system/dict/dict_list.html , method = org.github.foxnic.web.system.page.DictPageController.list
[POST] /service-dataperm/dp-example-product/delete , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.deleteById
[ALL] /service-eam/eam-asset/batch-confirm-operation , method = com.dt.platform.eam.controller.AssetController.batchConfirmOperation
[POST] /service-vehicle/vehicle-select-item/save , method = com.dt.platform.vehicle.controller.SelectItemController.save
[ALL] /business/system/user_tenant/user_tenant_form.html , method = org.github.foxnic.web.system.page.UserTenantPageController.form
[ALL] /service-eam/eam-asset/query-asset-status-list , method = com.dt.platform.eam.controller.AssetController.queryAssetStatusList
[POST] /service-eam/eam-asset-label-col/update , method = com.dt.platform.eam.controller.AssetLabelColController.update
[ALL] /business/system/user_tenant/user_tenant_list.html , method = org.github.foxnic.web.system.page.UserTenantPageController.list
[POST] /service-vehicle/vehicle-select-item/insert , method = com.dt.platform.vehicle.controller.SelectItemController.insert
[ALL] /service-eam/eam-asset/batch-revoke-operation , method = com.dt.platform.eam.controller.AssetController.batchRevokeOperation
[POST] /service-dataperm/dp-example-product/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.deleteByIds
[ALL] /business/system/licence/licence.html , method = org.github.foxnic.web.system.page.LicencePageController.licence
[POST] /service-vehicle/vehicle-select-item/get-by-id , method = com.dt.platform.vehicle.controller.SelectItemController.getById
[POST] /service-eam/eam-asset-label-col/save , method = com.dt.platform.eam.controller.AssetLabelColController.save
[ALL] /service-eam/eam-asset/asset-copy , method = com.dt.platform.eam.controller.AssetController.assetCopy
[POST] /service-eam/eam-asset/user-login-data , method = com.dt.platform.eam.controller.AssetController.userLoginData
[POST] /service-vehicle/vehicle-select-item/get-by-ids , method = com.dt.platform.vehicle.controller.SelectItemController.getByIds
[POST] /service-eam/eam-asset/query-employee-have-asset , method = com.dt.platform.eam.controller.AssetController.queryEmployeeHaveAsset
[GET] /v2/api-docs , method = springfox.documentation.swagger2.web.Swagger2ControllerWebMvc.getDocumentation
[POST] /service-eam/eam-asset-label-col/insert , method = com.dt.platform.eam.controller.AssetLabelColController.insert
[POST] /service-dataperm/dp-example-product/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.queryPagedList
[GET] /swagger-resources/configuration/security , method = springfox.documentation.swagger.web.ApiResourceController.securityConfiguration
[POST] /service-vehicle/vehicle-select-item/query-list , method = com.dt.platform.vehicle.controller.SelectItemController.queryList
[POST] /service-eam/eam-asset-label-col/get-by-id , method = com.dt.platform.eam.controller.AssetLabelColController.getById
[GET] /swagger-resources/configuration/ui , method = springfox.documentation.swagger.web.ApiResourceController.uiConfiguration
[POST] /service-eam/eam-asset-label-col/get-by-ids , method = com.dt.platform.eam.controller.AssetLabelColController.getByIds
[POST] /service-vehicle/vehicle-select-item/delete , method = com.dt.platform.vehicle.controller.SelectItemController.deleteById
[GET] /swagger-resources , method = springfox.documentation.swagger.web.ApiResourceController.swaggerResources
[POST] /service-vehicle/vehicle-select-item/delete-by-ids , method = com.dt.platform.vehicle.controller.SelectItemController.deleteByIds
[GET] /service-storage/sys-file/image , method = org.github.foxnic.web.storage.controller.FileController.image
[POST] /service-eam/eam-asset-label-col/query-list , method = com.dt.platform.eam.controller.AssetLabelColController.queryList
[POST] /service-dataperm/dp-example-order/update , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.update
[POST] /service-vehicle/vehicle-select-item/query-paged-list , method = com.dt.platform.vehicle.controller.SelectItemController.queryPagedList
[POST] /service-storage/sys-file/get-by-id , method = org.github.foxnic.web.storage.controller.FileController.getById
[POST] /service-eam/eam-asset-label-col/delete , method = com.dt.platform.eam.controller.AssetLabelColController.deleteById
[ALL] /service-vehicle/vehicle-select-item/export-excel , method = com.dt.platform.vehicle.controller.SelectItemController.exportExcel
[GET] /service-storage/sys-file/download , method = org.github.foxnic.web.storage.controller.FileController.download
[ALL] /service-vehicle/vehicle-select-item/export-excel-template , method = com.dt.platform.vehicle.controller.SelectItemController.exportExcelTemplate
[POST] /service-eam/eam-asset-label-col/delete-by-ids , method = com.dt.platform.eam.controller.AssetLabelColController.deleteByIds
[POST] /service-eam/eam-asset/query-paged-list-by-employee-select , method = com.dt.platform.eam.controller.AssetController.queryPagedListByEmploySelect
[POST] /service-storage/sys-file/upload , method = org.github.foxnic.web.storage.controller.FileController.upload
[ALL] /service-vehicle/vehicle-select-item/import-excel , method = com.dt.platform.vehicle.controller.SelectItemController.importExcel
[POST] /service-dataperm/dp-example-order/save , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.save
[ALL] /business/vehicle/a_select_item/a_select_item_form.html , method = com.dt.platform.vehicle.page.ASelectItemPageController.form
[POST] /service-eam/eam-asset-label-col/query-paged-list , method = com.dt.platform.eam.controller.AssetLabelColController.queryPagedList
[ALL] /service-eam/eam-asset-label-col/export-excel , method = com.dt.platform.eam.controller.AssetLabelColController.exportExcel
[ALL] /business/vehicle/a_select_item/a_select_item_list.html , method = com.dt.platform.vehicle.page.ASelectItemPageController.list
[ALL] /service-eam/eam-asset-label-col/export-excel-template , method = com.dt.platform.eam.controller.AssetLabelColController.exportExcelTemplate
[ALL] /business/vehicle/apply/apply_form.html , method = com.dt.platform.vehicle.page.ApplyPageController.form
[POST] /service-eam/eam-asset-stock-goods-adjust/update , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.update
[ALL] /service-eam/eam-asset-label-col/import-excel , method = com.dt.platform.eam.controller.AssetLabelColController.importExcel
[ALL] /business/vehicle/apply/apply_list.html , method = com.dt.platform.vehicle.page.ApplyPageController.list
[ALL] /business/vehicle/info/info_form.html , method = com.dt.platform.vehicle.page.InfoPageController.form
[POST] /service-dataperm/dp-example-order/insert , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.insert
[ALL] /business/vehicle/info/info_list.html , method = com.dt.platform.vehicle.page.InfoPageController.list
[ALL] /business/vehicle/info/select_info_list.html , method = com.dt.platform.vehicle.page.InfoPageController.selectInfoList
[ALL] /business/vehicle/info/selected_info_list.html , method = com.dt.platform.vehicle.page.InfoPageController.selectedInfoList
[POST] /service-eam/eam-asset-label/update , method = com.dt.platform.eam.controller.AssetLabelController.update
[POST] /service-eam/eam-asset-stock-goods-adjust/save , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.save
[POST] /service-eam/eam-asset/query-paged-list-by-employee-selected , method = com.dt.platform.eam.controller.AssetController.queryPagedListByEmploySelected
[ALL] /business/vehicle/m_select_item/m_select_item_form.html , method = com.dt.platform.vehicle.page.MSelectItemPageController.form
[POST] /service-dataperm/dp-example-order/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.getById
[ALL] /service-eam/eam-asset/query-asset-insert-approval-list , method = com.dt.platform.eam.controller.AssetController.queryAssetInsertApprovalList
[ALL] /business/vehicle/m_select_item/m_select_item_list.html , method = com.dt.platform.vehicle.page.MSelectItemPageController.list
[ALL] /service-eam/eam-asset/query-internal-control-label-data , method = com.dt.platform.eam.controller.AssetController.queryInternalControlLabelData
[ALL] /business/vehicle/maintenance/maintenance_form.html , method = com.dt.platform.vehicle.page.MaintenancePageController.form
[POST] /service-dataperm/dp-example-order/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.getByIds
[ALL] /business/vehicle/maintenance/maintenance_list.html , method = com.dt.platform.vehicle.page.MaintenancePageController.list
[POST] /service-eam/eam-asset-label/save , method = com.dt.platform.eam.controller.AssetLabelController.save
[POST] /service-eam/eam-asset-copy/update , method = com.dt.platform.eam.controller.AssetCopyController.update
[POST] /service-storage/sys-file/get-by-ids , method = org.github.foxnic.web.storage.controller.FileController.getByIds
[ALL] /business/vehicle/select_item/select_item_form.html , method = com.dt.platform.vehicle.page.SelectItemPageController.form
[ALL] /business/vehicle/select_item/select_item_list.html , method = com.dt.platform.vehicle.page.SelectItemPageController.list
[POST] /service-eam/eam-asset-copy/save , method = com.dt.platform.eam.controller.AssetCopyController.save
[POST] /service-storage/sys-file/query-list , method = org.github.foxnic.web.storage.controller.FileController.queryList
[POST] /service-eam/eam-asset-copy/insert , method = com.dt.platform.eam.controller.AssetCopyController.insert
[POST] /service-eam/eam-asset-depreciation-oper/execute , method = com.dt.platform.eam.controller.AssetDepreciationOperController.execute
[POST] /service-eam/eam-asset-label/insert , method = com.dt.platform.eam.controller.AssetLabelController.insert
[POST] /service-workorder/wo-network-strategy-apply/update , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.update
[POST] /service-storage/sys-file/delete , method = org.github.foxnic.web.storage.controller.FileController.deleteById
[POST] /service-eam/eam-asset-copy/get-by-id , method = com.dt.platform.eam.controller.AssetCopyController.getById
[POST] /service-storage/sys-file/batch-delete , method = org.github.foxnic.web.storage.controller.FileController.deleteByIds
[POST] /service-eam/eam-asset-copy/get-by-ids , method = com.dt.platform.eam.controller.AssetCopyController.getByIds
[POST] /service-eam/eam-asset-label/get-by-id , method = com.dt.platform.eam.controller.AssetLabelController.getById
[POST] /service-workorder/wo-network-strategy-apply/save , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.save
[POST] /service-storage/sys-file/data , method = org.github.foxnic.web.storage.controller.FileController.getFileData
[POST] /service-eam/eam-asset-copy/query-list , method = com.dt.platform.eam.controller.AssetCopyController.queryList
[POST] /service-eam/eam-asset-depreciation-oper/start , method = com.dt.platform.eam.controller.AssetDepreciationOperController.start
[POST] /service-eam/eam-asset-label/get-by-ids , method = com.dt.platform.eam.controller.AssetLabelController.getByIds
[POST] /service-eam/eam-asset-copy/delete , method = com.dt.platform.eam.controller.AssetCopyController.deleteById
[POST] /service-storage/sys-file/query-paged-list , method = org.github.foxnic.web.storage.controller.FileController.queryPagedList
[POST] /service-workorder/wo-network-strategy-apply/insert , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.insert
[POST] /service-eam/eam-purchase-apply/bpm-callback , method = com.dt.platform.eam.controller.PurchaseApplyController.onProcessCallback
[POST] /service-dataperm/dp-example-order/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.queryList
[POST] /service-eam/eam-asset-stock-goods-adjust/insert , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.insert
[POST] /service-eam/eam-asset-label/query-asset-label , method = com.dt.platform.eam.controller.AssetLabelController.queryAssetLabel
[POST] /service-dataperm/dp-example-order/delete , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.deleteById
[POST] /service-eam/eam-asset-label/save-asset-label , method = com.dt.platform.eam.controller.AssetLabelController.saveAssetLabel
[POST] /service-dataperm/dp-example-order/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.deleteByIds
[POST] /service-eam/eam-asset-label/save-asset-label-custom-tpl , method = com.dt.platform.eam.controller.AssetLabelController.saveAssetLabelCustomTpl
[POST] /service-workorder/wo-network-strategy-apply/get-by-id , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.getById
[POST] /service-workorder/wo-network-strategy-apply/get-by-ids , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.getByIds
[POST] /service-dataperm/dp-example-order/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.queryPagedList
[POST] /service-workorder/wo-network-strategy-apply/bpm-callback , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.onProcessCallback
[POST] /service-dataperm/dp-rule-condition/update , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.update
[POST] /service-eam/eam-asset-copy/delete-by-ids , method = com.dt.platform.eam.controller.AssetCopyController.deleteByIds
[POST] /service-eam/eam-asset-label/query-list , method = com.dt.platform.eam.controller.AssetLabelController.queryList
[ALL] /business/storage/file/file_form.html , method = org.github.foxnic.web.storage.page.FilePageController.form
[POST] /service-workorder/wo-network-strategy-apply/query-list , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.queryList
[ALL] /business/storage/file/file_list.html , method = org.github.foxnic.web.storage.page.FilePageController.list
[POST] /service-eam/eam-asset-label/delete , method = com.dt.platform.eam.controller.AssetLabelController.deleteById
[POST] /service-dataperm/dp-rule-condition/save , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.save
[POST] /service-workorder/wo-network-strategy-apply/delete , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.deleteById
[POST] /service-system/unit-test/sequence , method = org.github.foxnic.web.system.test.UnitTestController.sequence
[POST] /service-system/unit-test/cluster-1 , method = org.github.foxnic.web.system.test.UnitTestController.cluster1
[POST] /service-eam/eam-asset-label/delete-by-ids , method = com.dt.platform.eam.controller.AssetLabelController.deleteByIds
[POST] /service-eam/eam-asset-copy/query-paged-list , method = com.dt.platform.eam.controller.AssetCopyController.queryPagedList
[POST] /service-workorder/wo-network-strategy-apply/delete-by-ids , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.deleteByIds
[POST] /service-system/unit-test/lic , method = org.github.foxnic.web.system.test.UnitTestController.lic
[POST] /service-dataperm/dp-rule-condition/insert , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.insert
[POST] /service-system/unit-test/bean , method = org.github.foxnic.web.system.test.UnitTestController.beanTest
[POST] /service-dataperm/dp-rule-condition/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.getById
[POST] /service-system/unit-test/dict-1 , method = org.github.foxnic.web.system.test.UnitTestController.dict1
[POST] /service-system/unit-test/update-licence-local , method = org.github.foxnic.web.system.test.UnitTestController.updateLicenceLocal
[POST] /service-dataperm/dp-rule-condition/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.getByIds
[POST] /service-eam/eam-asset-copy-record/update , method = com.dt.platform.eam.controller.AssetCopyRecordController.update
[POST] /service-workorder/wo-network-strategy-apply/query-paged-list , method = com.dt.platform.workorder.controller.NetworkStrategyApplyController.queryPagedList
[POST] /service-system/unit-test/lic-sample , method = org.github.foxnic.web.system.test.UnitTestController.licSample
[POST] /service-dataperm/dp-rule-condition/query-context , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryFieldList
[POST] /service-eam/eam-asset-label/query-paged-list , method = com.dt.platform.eam.controller.AssetLabelController.queryPagedList
[ALL] /service-eam/eam-asset-label/export-excel , method = com.dt.platform.eam.controller.AssetLabelController.exportExcel
[POST] /service-dataperm/dp-rule-condition/test-spring-el , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.testSpringEL
[ALL] /service-eam/eam-asset-label/export-excel-template , method = com.dt.platform.eam.controller.AssetLabelController.exportExcelTemplate
[POST] /service-system/sys-db-cache/update , method = org.github.foxnic.web.system.controller.DbCacheController.update
[ALL] /service-eam/eam-asset-label/import-excel , method = com.dt.platform.eam.controller.AssetLabelController.importExcel
[POST] /service-workorder/wo-network-strategy-info/update , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.update
[POST] /service-eam/eam-asset-copy-record/save , method = com.dt.platform.eam.controller.AssetCopyRecordController.save
[POST] /service-dataperm/dp-rule-condition/query-nodes , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryNodes
[POST] /service-system/sys-db-cache/save , method = org.github.foxnic.web.system.controller.DbCacheController.save
[POST] /service-eam/eam-asset-label-layout/update , method = com.dt.platform.eam.controller.AssetLabelLayoutController.update
[POST] /service-dataperm/dp-rule-condition/query-list , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryList
[POST] /service-workorder/wo-network-strategy-info/save , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.save
[POST] /service-system/sys-db-cache/insert , method = org.github.foxnic.web.system.controller.DbCacheController.insert
[POST] /service-eam/eam-asset-copy-record/insert , method = com.dt.platform.eam.controller.AssetCopyRecordController.insert
[POST] /service-dataperm/dp-rule-condition/delete , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.deleteById
[POST] /service-eam/eam-asset-label-layout/save , method = com.dt.platform.eam.controller.AssetLabelLayoutController.save
[POST] /service-system/sys-db-cache/get-by-id , method = org.github.foxnic.web.system.controller.DbCacheController.getById
[POST] /service-dataperm/dp-rule-condition/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.deleteByIds
[POST] /service-workorder/wo-network-strategy-info/insert , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.insert
[POST] /service-eam/eam-asset-copy-record/get-by-id , method = com.dt.platform.eam.controller.AssetCopyRecordController.getById
[POST] /service-system/sys-db-cache/query-list , method = org.github.foxnic.web.system.controller.DbCacheController.queryList
[POST] /service-eam/eam-asset-label-layout/insert , method = com.dt.platform.eam.controller.AssetLabelLayoutController.insert
[POST] /service-dataperm/dp-rule-condition/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryPagedList
[POST] /service-system/sys-db-cache/delete , method = org.github.foxnic.web.system.controller.DbCacheController.deleteById
[POST] /service-eam/eam-asset-label-layout/get-by-id , method = com.dt.platform.eam.controller.AssetLabelLayoutController.getById
[POST] /service-system/sys-db-cache/delete-by-ids , method = org.github.foxnic.web.system.controller.DbCacheController.deleteByIds
[POST] /service-eam/eam-asset-label-layout/get-by-ids , method = com.dt.platform.eam.controller.AssetLabelLayoutController.getByIds
[ALL] /service-dataperm/dp-rule-condition/export-excel , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.exportExcel
[POST] /service-system/sys-db-cache/query-paged-list , method = org.github.foxnic.web.system.controller.DbCacheController.queryPagedList
[ALL] /service-dataperm/dp-rule-condition/export-excel-template , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.exportExcelTemplate
[POST] /service-eam/eam-asset-label-layout/query-list , method = com.dt.platform.eam.controller.AssetLabelLayoutController.queryList
[ALL] /service-dataperm/dp-rule-condition/import-excel , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.importExcel
[POST] /service-eam/eam-asset-label-layout/delete , method = com.dt.platform.eam.controller.AssetLabelLayoutController.deleteById
[POST] /service-system/sys-dict/update , method = org.github.foxnic.web.system.controller.DictController.update
[POST] /service-dataperm/dp-rule-range/update , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.update
[POST] /service-eam/eam-asset-label-layout/delete-by-ids , method = com.dt.platform.eam.controller.AssetLabelLayoutController.deleteByIds
[POST] /service-dataperm/dp-rule-range/save , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.save
[POST] /service-system/sys-dict/save , method = org.github.foxnic.web.system.controller.DictController.save
[POST] /service-eam/eam-asset-label-layout/query-paged-list , method = com.dt.platform.eam.controller.AssetLabelLayoutController.queryPagedList
[POST] /service-dataperm/dp-rule-range/insert , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.insert
[POST] /service-system/sys-dict/insert , method = org.github.foxnic.web.system.controller.DictController.insert
[POST] /service-dataperm/dp-rule-range/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.getById
[POST] /service-system/sys-dict/get-by-id , method = org.github.foxnic.web.system.controller.DictController.getById
[POST] /service-eam/eam-asset-label-paper/update , method = com.dt.platform.eam.controller.AssetLabelPaperController.update
[POST] /service-dataperm/dp-rule-range/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.getByIds
[POST] /service-system/sys-dict/get-by-ids , method = org.github.foxnic.web.system.controller.DictController.getByIds
[POST] /service-dataperm/dp-rule-range/query-list , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.queryList
[POST] /service-eam/eam-asset-label-paper/save , method = com.dt.platform.eam.controller.AssetLabelPaperController.save
[POST] /service-dataperm/dp-rule-range/delete , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.deleteById
[POST] /service-system/sys-dict/query-list , method = org.github.foxnic.web.system.controller.DictController.queryList
[POST] /service-dataperm/dp-rule-range/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.deleteByIds
[POST] /service-system/sys-dict/delete , method = org.github.foxnic.web.system.controller.DictController.deleteById
[POST] /service-eam/eam-asset-copy-record/get-by-ids , method = com.dt.platform.eam.controller.AssetCopyRecordController.getByIds
[POST] /service-eam/eam-asset-label-paper/insert , method = com.dt.platform.eam.controller.AssetLabelPaperController.insert
[POST] /service-workorder/wo-network-strategy-info/get-by-id , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.getById
[POST] /service-system/sys-dict/delete-by-ids , method = org.github.foxnic.web.system.controller.DictController.deleteByIds
[POST] /service-dataperm/dp-rule-range/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.queryPagedList
[POST] /service-eam/eam-asset-label-paper/get-by-id , method = com.dt.platform.eam.controller.AssetLabelPaperController.getById
[ALL] /business/dataperm/rule/rule_form.html , method = org.github.foxnic.web.dataperm.page.RulePageController.form
[POST] /service-workorder/wo-network-strategy-info/get-by-ids , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.getByIds
[ALL] /business/dataperm/rule/rule_list.html , method = org.github.foxnic.web.dataperm.page.RulePageController.list
[POST] /service-eam/eam-asset-label-paper/get-by-ids , method = com.dt.platform.eam.controller.AssetLabelPaperController.getByIds
[POST] /service-system/sys-dict/query-paged-list , method = org.github.foxnic.web.system.controller.DictController.queryPagedList
[ALL] /business/dataperm/example_catalog/example_catalog_form.html , method = org.github.foxnic.web.dataperm.page.ExampleCatalogPageController.form
[POST] /service-eam/eam-asset-copy-record/query-list , method = com.dt.platform.eam.controller.AssetCopyRecordController.queryList
[POST] /service-system/unit-test/join-menu-4-single-user , method = org.github.foxnic.web.system.test.JoinCacheTestController.joinMenu4SingleUser
[ALL] /business/dataperm/example_catalog/example_catalog_list.html , method = org.github.foxnic.web.dataperm.page.ExampleCatalogPageController.list
[POST] /service-workorder/wo-network-strategy-info/query-list , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.queryList
[ALL] /business/dataperm/example_order/example_order_form.html , method = org.github.foxnic.web.dataperm.page.ExampleOrderPageController.form
[POST] /service-eam/eam-asset-label-paper/query-list , method = com.dt.platform.eam.controller.AssetLabelPaperController.queryList
[ALL] /business/dataperm/example_order/example_order_list.html , method = org.github.foxnic.web.dataperm.page.ExampleOrderPageController.list
[POST] /service-workorder/wo-network-strategy-info/delete , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.deleteById
[POST] /service-eam/eam-asset-copy-record/delete , method = com.dt.platform.eam.controller.AssetCopyRecordController.deleteById
[ALL] /business/dataperm/rule_range/rule_range_form.html , method = org.github.foxnic.web.dataperm.page.RuleRangePageController.form
[POST] /service-workorder/wo-network-strategy-info/delete-by-ids , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.deleteByIds
[ALL] /business/dataperm/rule_range/rule_range_list.html , method = org.github.foxnic.web.dataperm.page.RuleRangePageController.list
[ALL] /business/dataperm/example_brand/example_brand_form.html , method = org.github.foxnic.web.dataperm.page.ExampleBrandPageController.form
[ALL] /business/dataperm/example_brand/example_brand_list.html , method = org.github.foxnic.web.dataperm.page.ExampleBrandPageController.list
[POST] /service-eam/eam-asset-copy-record/delete-by-ids , method = com.dt.platform.eam.controller.AssetCopyRecordController.deleteByIds
[ALL] /business/dataperm/rule_condition/rule_condition_form.html , method = org.github.foxnic.web.dataperm.page.RuleConditionPageController.form
[POST] /service-eam/eam-asset-depreciation-oper/save , method = com.dt.platform.eam.controller.AssetDepreciationOperController.save
[ALL] /business/dataperm/rule_condition/rule_condition_list.html , method = org.github.foxnic.web.dataperm.page.RuleConditionPageController.list
[POST] /service-workorder/wo-network-strategy-info/query-paged-list , method = com.dt.platform.workorder.controller.NetworkStrategyInfoController.queryPagedList
[ALL] /business/dataperm/rule_condition/context_dialog.html , method = org.github.foxnic.web.dataperm.page.RuleConditionPageController.contextDialog
[ALL] /business/dataperm/rule_condition/object_dialog.html , method = org.github.foxnic.web.dataperm.page.RuleConditionPageController.objectDialog
[POST] /service-eam/eam-asset-label-paper/delete , method = com.dt.platform.eam.controller.AssetLabelPaperController.deleteById
[ALL] /business/dataperm/example_product/example_product_form.html , method = org.github.foxnic.web.dataperm.page.ExampleProductPageController.form
[ALL] /business/dataperm/example_product/example_product_list.html , method = org.github.foxnic.web.dataperm.page.ExampleProductPageController.list
[POST] /service-eam/eam-asset-label-paper/delete-by-ids , method = com.dt.platform.eam.controller.AssetLabelPaperController.deleteByIds
[POST] /service-eam/eam-asset-depreciation-oper/insert , method = com.dt.platform.eam.controller.AssetDepreciationOperController.insert
[ALL] /business/dataperm/example_shop/example_shop_form.html , method = org.github.foxnic.web.dataperm.page.ExampleShopPageController.form
[ALL] /business/dataperm/example_shop/example_shop_list.html , method = org.github.foxnic.web.dataperm.page.ExampleShopPageController.list
[POST] /service-workorder/wo-server-apply/update , method = com.dt.platform.workorder.controller.ServerApplyController.update
[POST] /service-eam/eam-asset-depreciation-oper/get-by-id , method = com.dt.platform.eam.controller.AssetDepreciationOperController.getById
[POST] /service-eam/eam-asset-label-paper/query-paged-list , method = com.dt.platform.eam.controller.AssetLabelPaperController.queryPagedList
[POST] /service-eam/eam-asset-depreciation-oper/get-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationOperController.getByIds
[POST] /service-eam/eam-asset-depreciation-oper/syncData , method = com.dt.platform.eam.controller.AssetDepreciationOperController.syncData
[POST] /service-eam/eam-asset-depreciation-oper/rollback , method = com.dt.platform.eam.controller.AssetDepreciationOperController.rollback
[POST] /service-workorder/wo-server-apply/save , method = com.dt.platform.workorder.controller.ServerApplyController.save
[POST] /service-eam/eam-asset-depreciation-oper/asset-exclude , method = com.dt.platform.eam.controller.AssetDepreciationOperController.assetExclude
[POST] /service-job/sys-job-log/update , method = org.github.foxnic.web.job.controller.JobLogController.update
[POST] /service-eam/eam-asset-copy-record/query-paged-list , method = com.dt.platform.eam.controller.AssetCopyRecordController.queryPagedList
[POST] /service-eam/eam-asset-label-tpl/update , method = com.dt.platform.eam.controller.AssetLabelTplController.update
[POST] /service-workorder/wo-server-apply/insert , method = com.dt.platform.workorder.controller.ServerApplyController.insert
[POST] /service-workorder/wo-server-apply/get-by-id , method = com.dt.platform.workorder.controller.ServerApplyController.getById
[POST] /service-workorder/wo-server-apply/get-by-ids , method = com.dt.platform.workorder.controller.ServerApplyController.getByIds
[POST] /service-workorder/wo-server-apply/bpm-callback , method = com.dt.platform.workorder.controller.ServerApplyController.onProcessCallback
[POST] /service-eam/eam-asset-data-change/update , method = com.dt.platform.eam.controller.AssetDataChangeController.update
[POST] /service-ops/ops-host-os/save , method = com.dt.platform.ops.controller.HostOsController.save
[POST] /service-eam/eam-asset-label-tpl/save , method = com.dt.platform.eam.controller.AssetLabelTplController.save
[POST] /service-ops/ops-host-os/insert , method = com.dt.platform.ops.controller.HostOsController.insert
[POST] /service-ops/ops-host-os/get-by-id , method = com.dt.platform.ops.controller.HostOsController.getById
[POST] /service-workorder/wo-server-apply/query-list , method = com.dt.platform.workorder.controller.ServerApplyController.queryList
[POST] /service-eam/eam-asset-depreciation-oper/query-asset-paged-list , method = com.dt.platform.eam.controller.AssetDepreciationOperController.queryAssetPagedList
[POST] /service-eam/eam-asset-label-tpl/insert , method = com.dt.platform.eam.controller.AssetLabelTplController.insert
[POST] /service-workorder/wo-server-apply/delete , method = com.dt.platform.workorder.controller.ServerApplyController.deleteById
[POST] /service-ops/ops-host-os/get-by-ids , method = com.dt.platform.ops.controller.HostOsController.getByIds
[POST] /service-eam/eam-asset-label-tpl/get-by-id , method = com.dt.platform.eam.controller.AssetLabelTplController.getById
[POST] /service-workorder/wo-server-apply/delete-by-ids , method = com.dt.platform.workorder.controller.ServerApplyController.deleteByIds
[POST] /service-ops/ops-host-os/query-list , method = com.dt.platform.ops.controller.HostOsController.queryList
[POST] /service-eam/eam-asset-label-tpl/get-by-ids , method = com.dt.platform.eam.controller.AssetLabelTplController.getByIds
[POST] /service-eam/eam-asset-depreciation-oper/query-list , method = com.dt.platform.eam.controller.AssetDepreciationOperController.queryList
[POST] /service-ops/ops-host-os/delete , method = com.dt.platform.ops.controller.HostOsController.deleteById
[POST] /service-eam/eam-asset-depreciation-oper/delete , method = com.dt.platform.eam.controller.AssetDepreciationOperController.deleteById
[POST] /service-ops/ops-host-os/delete-by-ids , method = com.dt.platform.ops.controller.HostOsController.deleteByIds
[POST] /service-eam/eam-asset-depreciation-oper/delete-by-ids , method = com.dt.platform.eam.controller.AssetDepreciationOperController.deleteByIds
[POST] /service-eam/eam-asset-data-change/save , method = com.dt.platform.eam.controller.AssetDataChangeController.save
[POST] /service-workorder/wo-server-apply/query-paged-list , method = com.dt.platform.workorder.controller.ServerApplyController.queryPagedList
[POST] /service-ops/ops-host-os/query-paged-list , method = com.dt.platform.ops.controller.HostOsController.queryPagedList
[ALL] /service-ops/ops-host-os/export-excel , method = com.dt.platform.ops.controller.HostOsController.exportExcel
[ALL] /service-ops/ops-host-os/export-excel-template , method = com.dt.platform.ops.controller.HostOsController.exportExcelTemplate
[POST] /service-eam/eam-asset-label-tpl/query-list , method = com.dt.platform.eam.controller.AssetLabelTplController.queryList
[ALL] /service-ops/ops-host-os/import-excel , method = com.dt.platform.ops.controller.HostOsController.importExcel
[POST] /service-eam/eam-asset-depreciation-oper/query-paged-list , method = com.dt.platform.eam.controller.AssetDepreciationOperController.queryPagedList
[POST] /service-eam/eam-asset-label-tpl/delete , method = com.dt.platform.eam.controller.AssetLabelTplController.deleteById
[ALL] /service-eam/eam-asset-depreciation-oper/export-excel , method = com.dt.platform.eam.controller.AssetDepreciationOperController.exportExcel
[POST] /service-ops/ops-host-position/update , method = com.dt.platform.ops.controller.HostPositionController.update
[POST] /service-eam/eam-asset-label-tpl/delete-by-ids , method = com.dt.platform.eam.controller.AssetLabelTplController.deleteByIds
[POST] /service-workorder/wo-server-info/update , method = com.dt.platform.workorder.controller.ServerInfoController.update
[ALL] /service-eam/eam-asset-depreciation-oper/export-excel-template , method = com.dt.platform.eam.controller.AssetDepreciationOperController.exportExcelTemplate
[POST] /service-eam/eam-asset-data-change/insert , method = com.dt.platform.eam.controller.AssetDataChangeController.insert
[POST] /service-ops/ops-host-position/save , method = com.dt.platform.ops.controller.HostPositionController.save
[ALL] /service-eam/eam-asset-depreciation-oper/import-excel , method = com.dt.platform.eam.controller.AssetDepreciationOperController.importExcel
[ALL] /service-eam/eam-asset-depreciation-oper/asset-download-depreciation-report , method = com.dt.platform.eam.controller.AssetDepreciationOperController.assetDownloadDepreciationReport
[POST] /service-ops/ops-host-position/insert , method = com.dt.platform.ops.controller.HostPositionController.insert
[POST] /service-eam/eam-asset-data-change/get-by-id , method = com.dt.platform.eam.controller.AssetDataChangeController.getById
[POST] /service-ops/ops-host-position/get-by-id , method = com.dt.platform.ops.controller.HostPositionController.getById
[POST] /service-workorder/wo-server-info/save , method = com.dt.platform.workorder.controller.ServerInfoController.save
[POST] /service-eam/eam-asset-employee-apply/update , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.update
[POST] /service-eam/eam-asset-data-change/get-by-ids , method = com.dt.platform.eam.controller.AssetDataChangeController.getByIds
[POST] /service-ops/ops-host-position/get-by-ids , method = com.dt.platform.ops.controller.HostPositionController.getByIds
[POST] /service-eam/eam-asset-label-tpl/query-paged-list , method = com.dt.platform.eam.controller.AssetLabelTplController.queryPagedList
[ALL] /service-eam/eam-asset-label-tpl/export-excel , method = com.dt.platform.eam.controller.AssetLabelTplController.exportExcel
[ALL] /service-eam/eam-asset-data-change/approve , method = com.dt.platform.eam.controller.AssetDataChangeController.approve
[ALL] /service-eam/eam-asset-label-tpl/export-excel-template , method = com.dt.platform.eam.controller.AssetLabelTplController.exportExcelTemplate
[POST] /service-ops/ops-host-position/query-list , method = com.dt.platform.ops.controller.HostPositionController.queryList
[POST] /service-eam/eam-asset-employee-apply/save , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.save
[POST] /service-workorder/wo-server-info/insert , method = com.dt.platform.workorder.controller.ServerInfoController.insert
[ALL] /service-eam/eam-asset-label-tpl/import-excel , method = com.dt.platform.eam.controller.AssetLabelTplController.importExcel
[POST] /service-ops/ops-host-position/delete , method = com.dt.platform.ops.controller.HostPositionController.deleteById
[POST] /service-workorder/wo-server-info/get-by-id , method = com.dt.platform.workorder.controller.ServerInfoController.getById
[ALL] /service-eam/eam-asset-data-change/confirm-operation , method = com.dt.platform.eam.controller.AssetDataChangeController.confirmOperation
[POST] /service-ops/ops-host-position/delete-by-ids , method = com.dt.platform.ops.controller.HostPositionController.deleteByIds
[POST] /service-eam/eam-asset-label-tpl-item/update , method = com.dt.platform.eam.controller.AssetLabelTplItemController.update
[POST] /service-workorder/wo-server-info/get-by-ids , method = com.dt.platform.workorder.controller.ServerInfoController.getByIds
[POST] /service-eam/eam-asset-employee-apply/insert , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.insert
[POST] /service-ops/ops-host-position/query-paged-list , method = com.dt.platform.ops.controller.HostPositionController.queryPagedList
[POST] /service-eam/eam-asset-label-tpl-item/save , method = com.dt.platform.eam.controller.AssetLabelTplItemController.save
[POST] /service-eam/eam-asset-employee-apply/get-by-id , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.getById
[POST] /service-eam/eam-asset-employee-apply/get-by-ids , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.getByIds
[POST] /service-eam/eam-asset-employee-apply/bpm-callback , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.onProcessCallback
[POST] /service-eam/eam-asset-label-tpl-item/insert , method = com.dt.platform.eam.controller.AssetLabelTplItemController.insert
[POST] /service-workorder/wo-server-info/query-list , method = com.dt.platform.workorder.controller.ServerInfoController.queryList
[POST] /service-eam/eam-asset-label-tpl-item/get-by-id , method = com.dt.platform.eam.controller.AssetLabelTplItemController.getById
[POST] /service-workorder/wo-server-info/delete , method = com.dt.platform.workorder.controller.ServerInfoController.deleteById
[POST] /service-eam/eam-asset-employee-apply/query-list , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.queryList
[POST] /service-eam/eam-asset-label-tpl-item/get-by-ids , method = com.dt.platform.eam.controller.AssetLabelTplItemController.getByIds
[POST] /service-workorder/wo-server-info/delete-by-ids , method = com.dt.platform.workorder.controller.ServerInfoController.deleteByIds
[POST] /service-eam/eam-asset-employee-apply/delete , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.deleteById
[POST] /service-ops/ops-information-system/update , method = com.dt.platform.ops.controller.InformationSystemController.update
[POST] /service-eam/eam-asset-label-tpl-item/query-list , method = com.dt.platform.eam.controller.AssetLabelTplItemController.queryList
[POST] /service-eam/eam-asset-employee-apply/delete-by-ids , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.deleteByIds
[POST] /service-eam/eam-asset-label-tpl-item/delete , method = com.dt.platform.eam.controller.AssetLabelTplItemController.deleteById
[POST] /service-eam/eam-asset-label-tpl-item/delete-by-ids , method = com.dt.platform.eam.controller.AssetLabelTplItemController.deleteByIds
[POST] /service-eam/eam-asset-data-change/query-list , method = com.dt.platform.eam.controller.AssetDataChangeController.queryList
[POST] /service-workorder/wo-server-info/query-paged-list , method = com.dt.platform.workorder.controller.ServerInfoController.queryPagedList
[POST] /service-eam/eam-asset-employee-apply/query-paged-list , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.queryPagedList
[ALL] /service-eam/eam-asset-employee-apply/export-excel , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.exportExcel
[POST] /service-eam/eam-asset-label-tpl-item/query-paged-list , method = com.dt.platform.eam.controller.AssetLabelTplItemController.queryPagedList
[ALL] /service-eam/eam-asset-employee-apply/export-excel-template , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.exportExcelTemplate
[POST] /service-workorder/wo-server-os-type/update , method = com.dt.platform.workorder.controller.ServerOsTypeController.update
[ALL] /service-eam/eam-asset-label-tpl-item/export-excel , method = com.dt.platform.eam.controller.AssetLabelTplItemController.exportExcel
[POST] /service-eam/eam-asset-data-change/delete , method = com.dt.platform.eam.controller.AssetDataChangeController.deleteById
[ALL] /service-eam/eam-asset-employee-apply/import-excel , method = com.dt.platform.eam.controller.AssetEmployeeApplyController.importExcel
[POST] /service-ops/ops-information-system/save , method = com.dt.platform.ops.controller.InformationSystemController.save
[ALL] /service-eam/eam-asset-label-tpl-item/export-excel-template , method = com.dt.platform.eam.controller.AssetLabelTplItemController.exportExcelTemplate
[POST] /service-workorder/wo-server-os-type/save , method = com.dt.platform.workorder.controller.ServerOsTypeController.save
[ALL] /service-eam/eam-asset-label-tpl-item/import-excel , method = com.dt.platform.eam.controller.AssetLabelTplItemController.importExcel
[POST] /service-eam/eam-asset-data-change/delete-by-ids , method = com.dt.platform.eam.controller.AssetDataChangeController.deleteByIds
[POST] /service-workorder/wo-server-os-type/insert , method = com.dt.platform.workorder.controller.ServerOsTypeController.insert
[POST] /service-eam/eam-asset-employee-handover/update , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.update
[POST] /service-workorder/wo-server-os-type/get-by-id , method = com.dt.platform.workorder.controller.ServerOsTypeController.getById
[POST] /service-workorder/wo-server-os-type/get-by-ids , method = com.dt.platform.workorder.controller.ServerOsTypeController.getByIds
[POST] /service-eam/eam-asset-employee-handover/save , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.save
[POST] /service-ops/ops-information-system/insert , method = com.dt.platform.ops.controller.InformationSystemController.insert
[POST] /service-workorder/wo-server-os-type/query-list , method = com.dt.platform.workorder.controller.ServerOsTypeController.queryList
[POST] /service-eam/eam-asset-maintenance-record/update , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.update
[POST] /service-ops/ops-information-system/get-by-id , method = com.dt.platform.ops.controller.InformationSystemController.getById
[POST] /service-workorder/wo-server-os-type/delete , method = com.dt.platform.workorder.controller.ServerOsTypeController.deleteById
[POST] /service-ops/ops-information-system/get-by-ids , method = com.dt.platform.ops.controller.InformationSystemController.getByIds
[POST] /service-workorder/wo-server-os-type/delete-by-ids , method = com.dt.platform.workorder.controller.ServerOsTypeController.deleteByIds
[POST] /service-eam/eam-asset-employee-handover/insert , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.insert
[POST] /service-eam/eam-asset-employee-handover/get-by-id , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.getById
[POST] /service-workorder/wo-server-os-type/query-paged-list , method = com.dt.platform.workorder.controller.ServerOsTypeController.queryPagedList
[POST] /service-eam/eam-asset-employee-handover/get-by-ids , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.getByIds
[POST] /service-eam/eam-asset-employee-handover/bpm-callback , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.onProcessCallback
[POST] /service-eam/eam-asset-data-change/query-paged-list , method = com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList
[POST] /service-eam/eam-asset-maintenance-record/save , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.save
[ALL] /service-eam/eam-asset-data-change/export-excel , method = com.dt.platform.eam.controller.AssetDataChangeController.exportExcel
[POST] /service-eam/eam-asset-employee-handover/query-list , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.queryList
[POST] /service-ops/ops-information-system/query-list , method = com.dt.platform.ops.controller.InformationSystemController.queryList
[ALL] /business/ops/monitor_node_resource/monitor_node_host_tree.html , method = com.dt.platform.ops.page.MonitorNodeResourcePageController.nodeHostTree
[ALL] /service-eam/eam-asset-data-change/export-excel-template , method = com.dt.platform.eam.controller.AssetDataChangeController.exportExcelTemplate
[POST] /service-eam/eam-asset-employee-handover/delete , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.deleteById
[ALL] /business/ops/monitor_node_resource/monitor_node_collect_error.html , method = com.dt.platform.ops.page.MonitorNodeResourcePageController.nodeCollectDataErrorList
[POST] /service-ops/ops-information-system/delete , method = com.dt.platform.ops.controller.InformationSystemController.deleteById
[ALL] /service-eam/eam-asset-data-change/import-excel , method = com.dt.platform.eam.controller.AssetDataChangeController.importExcel
[ALL] /business/ops/monitor_node_resource/monitor_node_collect_data_graph.html , method = com.dt.platform.ops.page.MonitorNodeResourcePageController.nodeCollectDataGraph
[POST] /service-eam/eam-asset-employee-handover/delete-by-ids , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.deleteByIds
[POST] /service-ops/ops-information-system/delete-by-ids , method = com.dt.platform.ops.controller.InformationSystemController.deleteByIds
[ALL] /business/ops/monitor_node_resource/monitor_node_collect_data.html , method = com.dt.platform.ops.page.MonitorNodeResourcePageController.nodeCollectData
[POST] /service-eam/eam-asset-maintenance-record/insert , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.insert
[ALL] /business/ops/monitor_node_resource/monitor_node_host_list.html , method = com.dt.platform.ops.page.MonitorNodeResourcePageController.nodeHostList
[ALL] /service-eam/eam-asset-data-change/for-approval , method = com.dt.platform.eam.controller.AssetDataChangeController.forApproval
[POST] /service-eam/eam-asset-maintenance-record/get-by-id , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.getById
[ALL] /business/ops/monitor_node_subtype/monitor_node_subtype_form.html , method = com.dt.platform.ops.page.MonitorNodeSubtypePageController.form
[ALL] /business/ops/monitor_node_subtype/monitor_node_subtype_list.html , method = com.dt.platform.ops.page.MonitorNodeSubtypePageController.list
[POST] /service-eam/eam-asset-employee-handover/query-paged-list , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.queryPagedList
[POST] /service-eam/eam-asset-maintenance-record/get-by-ids , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.getByIds
[ALL] /service-eam/eam-asset-data-change/revoke-operation , method = com.dt.platform.eam.controller.AssetDataChangeController.revokeOperation
[ALL] /service-eam/eam-asset-employee-handover/export-excel , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.exportExcel
[ALL] /business/ops/monitor_node_tpl_item/monitor_node_tpl_item_form.html , method = com.dt.platform.ops.page.MonitorNodeTplItemPageController.form
[ALL] /service-eam/eam-asset-employee-handover/export-excel-template , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.exportExcelTemplate
[ALL] /business/ops/monitor_node_tpl_item/monitor_node_tpl_item_list.html , method = com.dt.platform.ops.page.MonitorNodeTplItemPageController.list
[ALL] /service-eam/eam-asset-employee-handover/import-excel , method = com.dt.platform.eam.controller.AssetEmployeeHandoverController.importExcel
[POST] /service-eam/eam-asset-data-change/query-data-change-dimension-by-change-type , method = com.dt.platform.eam.controller.AssetDataChangeController.queryDataChangeDimensionByChangeType
[ALL] /business/ops/monitor_node_type/monitor_node_type_form.html , method = com.dt.platform.ops.page.MonitorNodeTypePageController.form
[POST] /service-ops/ops-information-system/query-paged-list , method = com.dt.platform.ops.controller.InformationSystemController.queryPagedList
[ALL] /business/ops/monitor_node_type/monitor_node_type_list.html , method = com.dt.platform.ops.page.MonitorNodeTypePageController.list
[POST] /service-eam/eam-asset-data/print-pdf , method = com.dt.platform.eam.controller.AssetDataController.printPdf
[ALL] /business/ops/monitor_node_value_last/monitor_node_value_last_form.html , method = com.dt.platform.ops.page.MonitorNodeValueLastPageController.form
[POST] /service-eam/eam-asset-employee-loss/update , method = com.dt.platform.eam.controller.AssetEmployeeLossController.update
[ALL] /business/ops/monitor_node_value_last/monitor_node_value_last_list.html , method = com.dt.platform.ops.page.MonitorNodeValueLastPageController.list
[POST] /service-eam/eam-asset-data/query-pcm-id-by-code , method = com.dt.platform.eam.controller.AssetDataController.queryPcmIdByCode
[POST] /service-eam/eam-asset-maintenance-record/query-list , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.queryList
[ALL] /business/ops/monitor_node_value/monitor_node_value_form.html , method = com.dt.platform.ops.page.MonitorNodeValuePageController.form
[POST] /service-eam/eam-asset-data/import-asset , method = com.dt.platform.eam.controller.AssetDataController.importAsset
[ALL] /business/ops/monitor_node_value/monitor_node_value_list.html , method = com.dt.platform.ops.page.MonitorNodeValuePageController.list
[POST] /service-eam/eam-asset-employee-loss/save , method = com.dt.platform.eam.controller.AssetEmployeeLossController.save
[POST] /service-eam/eam-asset-maintenance-record/delete , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.deleteById
[ALL] /business/ops/monitor_object_grafana/monitor_object_grafana_form.html , method = com.dt.platform.ops.page.MonitorObjectGrafanaPageController.form
[POST] /service-eam/eam-asset-stock-goods-adjust/get-by-id , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.getById
[ALL] /business/ops/monitor_object_grafana/monitor_object_grafana_list.html , method = com.dt.platform.ops.page.MonitorObjectGrafanaPageController.list
[POST] /service-eam/eam-asset-maintenance-record/delete-by-ids , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.deleteByIds
[ALL] /business/ops/monitor_object_group/monitor_object_group_form.html , method = com.dt.platform.ops.page.MonitorObjectGroupPageController.form
[POST] /service-eam/eam-asset-stock-goods-adjust/get-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.getByIds
[POST] /service-eam/eam-asset-employee-loss/insert , method = com.dt.platform.eam.controller.AssetEmployeeLossController.insert
[ALL] /business/ops/monitor_object_group/monitor_object_group_list.html , method = com.dt.platform.ops.page.MonitorObjectGroupPageController.list
[ALL] /business/ops/monitor_object_model/monitor_object_model_form.html , method = com.dt.platform.ops.page.MonitorObjectModelPageController.form
[ALL] /service-eam/eam-asset-stock-goods-adjust/confirm-operation , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.confirmOperation
[POST] /service-eam/eam-asset-employee-loss/get-by-id , method = com.dt.platform.eam.controller.AssetEmployeeLossController.getById
[ALL] /business/ops/monitor_object_model/monitor_object_model_list.html , method = com.dt.platform.ops.page.MonitorObjectModelPageController.list
[POST] /service-system/unit-test/invalid-user-menu , method = org.github.foxnic.web.system.test.JoinCacheTestController.invalidUserMenu
[ALL] /business/ops/monitor_object/monitor_object_form.html , method = com.dt.platform.ops.page.MonitorObjectPageController.form
[POST] /service-eam/eam-asset-employee-loss/get-by-ids , method = com.dt.platform.eam.controller.AssetEmployeeLossController.getByIds
[ALL] /business/ops/monitor_object/monitor_object_list.html , method = com.dt.platform.ops.page.MonitorObjectPageController.list
[POST] /service-eam/eam-asset-employee-loss/bpm-callback , method = com.dt.platform.eam.controller.AssetEmployeeLossController.onProcessCallback
[ALL] /business/ops/monitor_object/object_analyze.html , method = com.dt.platform.ops.page.MonitorObjectPageController.objectAnalyze
[ALL] /business/ops/monitor_object_tpl/monitor_object_tpl_form.html , method = com.dt.platform.ops.page.MonitorObjectTplPageController.form
[POST] /service-eam/eam-asset-maintenance-record/query-paged-list , method = com.dt.platform.eam.controller.AssetMaintenanceRecordController.queryPagedList
[ALL] /business/ops/monitor_object_tpl/monitor_object_tpl_list.html , method = com.dt.platform.ops.page.MonitorObjectTplPageController.list
[POST] /service-system/sys-licence/get , method = org.github.foxnic.web.system.controller.LicenceController.get
[POST] /service-eam/eam-asset-stock-goods-adjust/query-list , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.queryList
[ALL] /business/ops/monitor_object_tree/monitor_object_tree_form.html , method = com.dt.platform.ops.page.MonitorObjectTreePageController.form
[POST] /service-eam/eam-asset-employee-loss/query-list , method = com.dt.platform.eam.controller.AssetEmployeeLossController.queryList
[ALL] /business/ops/monitor_object_tree/monitor_object_tree_list.html , method = com.dt.platform.ops.page.MonitorObjectTreePageController.list
[POST] /service-system/sys-licence/import , method = org.github.foxnic.web.system.controller.LicenceController.importLicence
[POST] /service-eam/eam-asset-stock-goods-adjust/delete , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.deleteById
[ALL] /business/ops/monitor_tpl_graph_item/monitor_tpl_graph_item_form.html , method = com.dt.platform.ops.page.MonitorTplGraphItemPageController.form
[POST] /service-eam/eam-asset-employee-loss/delete , method = com.dt.platform.eam.controller.AssetEmployeeLossController.deleteById
[ALL] /business/ops/monitor_tpl_graph_item/monitor_tpl_graph_item_list.html , method = com.dt.platform.ops.page.MonitorTplGraphItemPageController.list
[POST] /service-system/sys-licence/get-licence-items , method = org.github.foxnic.web.system.controller.LicenceController.getLicenceItems
[POST] /service-eam/eam-asset-stock-goods-adjust/delete-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.deleteByIds
[POST] /service-eam/eam-asset-employee-loss/delete-by-ids , method = com.dt.platform.eam.controller.AssetEmployeeLossController.deleteByIds
[ALL] /business/ops/monitor_tpl_graph/monitor_tpl_graph_form.html , method = com.dt.platform.ops.page.MonitorTplGraphPageController.form
[ALL] /business/ops/monitor_tpl_graph/monitor_tpl_graph_list.html , method = com.dt.platform.ops.page.MonitorTplGraphPageController.list
[ALL] /business/ops/monitor_tpl_indicator/monitor_tpl_indicator_form.html , method = com.dt.platform.ops.page.MonitorTplIndicatorPageController.form
[ALL] /business/ops/monitor_tpl_indicator/monitor_tpl_indicator_list.html , method = com.dt.platform.ops.page.MonitorTplIndicatorPageController.list
[ALL] /business/ops/monitor_tpl_indicator_type/monitor_tpl_indicator_type_form.html , method = com.dt.platform.ops.page.MonitorTplIndicatorTypePageController.form
[ALL] /business/ops/monitor_tpl_indicator_type/monitor_tpl_indicator_type_list.html , method = com.dt.platform.ops.page.MonitorTplIndicatorTypePageController.list
[POST] /service-eam/eam-asset-employee-loss/query-paged-list , method = com.dt.platform.eam.controller.AssetEmployeeLossController.queryPagedList
[ALL] /service-eam/eam-asset-employee-loss/export-excel , method = com.dt.platform.eam.controller.AssetEmployeeLossController.exportExcel
[ALL] /business/ops/monitor_tpl/monitor_tpl_form.html , method = com.dt.platform.ops.page.MonitorTplPageController.form
[ALL] /business/ops/monitor_tpl/monitor_tpl_list.html , method = com.dt.platform.ops.page.MonitorTplPageController.list
[ALL] /service-eam/eam-asset-employee-loss/export-excel-template , method = com.dt.platform.eam.controller.AssetEmployeeLossController.exportExcelTemplate
[POST] /service-eam/eam-asset-maintenance-record-u/update , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.update
[ALL] /service-eam/eam-asset-employee-loss/import-excel , method = com.dt.platform.eam.controller.AssetEmployeeLossController.importExcel
[ALL] /business/ops/monitor_tpl_type/monitor_tpl_type_form.html , method = com.dt.platform.ops.page.MonitorTplTypePageController.form
[POST] /service-system/sys-sequence/update , method = org.github.foxnic.web.system.controller.SequenceController.update
[ALL] /business/ops/monitor_tpl_type/monitor_tpl_type_list.html , method = com.dt.platform.ops.page.MonitorTplTypePageController.list
[ALL] /business/ops/monitor_voucher/monitor_voucher_form.html , method = com.dt.platform.ops.page.MonitorVoucherPageController.form
[ALL] /business/ops/monitor_voucher/monitor_voucher_list.html , method = com.dt.platform.ops.page.MonitorVoucherPageController.list
[POST] /service-eam/eam-asset-employee-repair/update , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.update
[ALL] /business/ops/monitor_warn/monitor_warn_form.html , method = com.dt.platform.ops.page.MonitorWarnPageController.form
[ALL] /business/ops/monitor_warn/monitor_warn_list.html , method = com.dt.platform.ops.page.MonitorWarnPageController.list
[ALL] /business/ops/person/person_form.html , method = com.dt.platform.ops.page.PersonPageController.form
[ALL] /business/ops/person/person_list.html , method = com.dt.platform.ops.page.PersonPageController.list
[ALL] /business/ops/personnel_division/personnel_division_form.html , method = com.dt.platform.ops.page.PersonnelDivisionPageController.form
[ALL] /business/ops/personnel_division/personnel_division_list.html , method = com.dt.platform.ops.page.PersonnelDivisionPageController.list
[POST] /service-eam/eam-asset-employee-repair/save , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.save
[ALL] /business/ops/personnel_division/personnel_division_public_list.html , method = com.dt.platform.ops.page.PersonnelDivisionPageController.publicList
[POST] /service-system/sys-sequence/save , method = org.github.foxnic.web.system.controller.SequenceController.save
[ALL] /business/ops/public_content/public_content_form.html , method = com.dt.platform.ops.page.PublicContentPageController.form
[ALL] /business/ops/public_content/public_content_list.html , method = com.dt.platform.ops.page.PublicContentPageController.list
[ALL] /business/ops/public_content/public_content_public_list.html , method = com.dt.platform.ops.page.PublicContentPageController.publicList
[ALL] /public.html , method = com.dt.platform.ops.page.RootSharePageController.list
[POST] /service-eam/eam-asset-employee-repair/insert , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.insert
[ALL] /business/ops/safety_baseline/safety_baseline_form.html , method = com.dt.platform.ops.page.SafetyBaselinePageController.form
[POST] /service-eam/eam-asset-maintenance-record-u/save , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.save
[POST] /service-eam/eam-asset-employee-repair/get-by-id , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.getById
[ALL] /business/ops/safety_baseline/safety_baseline_list.html , method = com.dt.platform.ops.page.SafetyBaselinePageController.list
[ALL] /business/ops/service_category/service_category_form.html , method = com.dt.platform.ops.page.ServiceCategoryPageController.form
[POST] /service-eam/eam-asset-employee-repair/get-by-ids , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.getByIds
[ALL] /business/ops/service_category/service_category_list.html , method = com.dt.platform.ops.page.ServiceCategoryPageController.list
[POST] /service-eam/eam-asset-employee-repair/bpm-callback , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.onProcessCallback
[ALL] /business/ops/service_group/service_group_form.html , method = com.dt.platform.ops.page.ServiceGroupPageController.form
[ALL] /business/ops/service_group/service_group_list.html , method = com.dt.platform.ops.page.ServiceGroupPageController.list
[ALL] /business/ops/service_info/service_info_form.html , method = com.dt.platform.ops.page.ServiceInfoPageController.form
[ALL] /business/ops/service_info/service_info_list.html , method = com.dt.platform.ops.page.ServiceInfoPageController.list
[POST] /service-eam/eam-purchase-apply/query-list , method = com.dt.platform.eam.controller.PurchaseApplyController.queryList
[ALL] /share/public.html , method = com.dt.platform.ops.page.SharePageController.list
[POST] /service-eam/eam-asset-employee-repair/query-list , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.queryList
[ALL] /business/ops/software_base_type/software_base_type_form.html , method = com.dt.platform.ops.page.SoftwareBaseTypePageController.form
[ALL] /service-ops/ops-information-system/export-excel , method = com.dt.platform.ops.controller.InformationSystemController.exportExcel
[ALL] /business/ops/software_base_type/software_base_type_list.html , method = com.dt.platform.ops.page.SoftwareBaseTypePageController.list
[POST] /service-eam/eam-asset-employee-repair/delete , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.deleteById
[POST] /service-eam/eam-asset-data/export-asset , method = com.dt.platform.eam.controller.AssetDataController.exportAsset
[ALL] /service-ops/ops-information-system/export-excel-template , method = com.dt.platform.ops.controller.InformationSystemController.exportExcelTemplate
[POST] /service-eam/eam-asset-data/export-asset-by-ids , method = com.dt.platform.eam.controller.AssetDataController.exportAssetByIds
[POST] /service-eam/eam-asset-employee-repair/delete-by-ids , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.deleteByIds
[ALL] /service-ops/ops-information-system/import-excel , method = com.dt.platform.ops.controller.InformationSystemController.importExcel
[ALL] /business/ops/software_base_version/software_base_version_form.html , method = com.dt.platform.ops.page.SoftwareBaseVersionPageController.form
[POST] /service-system/sys-sequence/insert , method = org.github.foxnic.web.system.controller.SequenceController.insert
[POST] /service-eam/eam-asset-maintenance-record-u/insert , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.insert
[ALL] /business/ops/software_base_version/software_base_version_list.html , method = com.dt.platform.ops.page.SoftwareBaseVersionPageController.list
[POST] /service-system/sys-sequence/get-by-id , method = org.github.foxnic.web.system.controller.SequenceController.getById
[ALL] /business/ops/software_base_version/software_base_version_public_list.html , method = com.dt.platform.ops.page.SoftwareBaseVersionPageController.publicList
[POST] /service-eam/eam-asset-maintenance-record-u/get-by-id , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.getById
[POST] /service-eam/eam-asset-employee-repair/query-paged-list , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.queryPagedList
[ALL] /business/ops/software_media/software_media_form.html , method = com.dt.platform.ops.page.SoftwareMediaPageController.form
[POST] /service-system/sys-sequence/get-by-ids , method = org.github.foxnic.web.system.controller.SequenceController.getByIds
[ALL] /service-eam/eam-asset-employee-repair/export-excel , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.exportExcel
[ALL] /business/ops/software_media/software_media_list.html , method = com.dt.platform.ops.page.SoftwareMediaPageController.list
[POST] /service-eam/eam-asset-maintenance-record-u/get-by-ids , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.getByIds
[ALL] /service-eam/eam-asset-employee-repair/export-excel-template , method = com.dt.platform.eam.controller.AssetEmployeeRepairController.exportExcelTemplate
[ALL] /business/ops/software_media/software_media_public_list.html , method = com.dt.platform.ops.page.SoftwareMediaPageController.publicList
[ALL] /business/ops/system_console_info/system_console_info_form.html , method = com.dt.platform.ops.page.SystemConsoleInfoPageController.form
[POST] /service-eam/eam-asset-stock-goods-adjust/query-paged-list , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.queryPagedList
[ALL] /business/ops/system_console_info/system_console_info_list.html , method = com.dt.platform.ops.page.SystemConsoleInfoPageController.list
[POST] /service-system/sys-sequence/query-list , method = org.github.foxnic.web.system.controller.SequenceController.queryList
[ALL] /business/ops/voucher_history/voucher_history_form.html , method = com.dt.platform.ops.page.VoucherHistoryPageController.form
[ALL] /service-eam/eam-asset-stock-goods-adjust/export-excel , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.exportExcel
[POST] /service-system/sys-sequence/delete , method = org.github.foxnic.web.system.controller.SequenceController.deleteById
[ALL] /business/ops/voucher_history/voucher_history_list.html , method = com.dt.platform.ops.page.VoucherHistoryPageController.list
[ALL] /service-eam/eam-asset-stock-goods-adjust/export-excel-template , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.exportExcelTemplate
[ALL] /business/ops/voucher_owner/voucher_owner_form.html , method = com.dt.platform.ops.page.VoucherOwnerPageController.form
[POST] /service-system/sys-sequence/delete-by-ids , method = org.github.foxnic.web.system.controller.SequenceController.deleteByIds
[ALL] /service-eam/eam-asset-stock-goods-adjust/import-excel , method = com.dt.platform.eam.controller.AssetStockGoodsAdjustController.importExcel
[ALL] /business/ops/voucher_owner/voucher_owner_list.html , method = com.dt.platform.ops.page.VoucherOwnerPageController.list
[POST] /service-eam/eam-asset-data/batch-import-asset-by-lucky-sheet , method = com.dt.platform.eam.controller.AssetDataController.batchImportAsset
[ALL] /business/ops/voucher/voucher_form.html , method = com.dt.platform.ops.page.VoucherPageController.form
[POST] /service-system/sys-sequence/query-paged-list , method = org.github.foxnic.web.system.controller.SequenceController.queryPagedList
[ALL] /business/ops/voucher/voucher_list.html , method = com.dt.platform.ops.page.VoucherPageController.list
[ALL] /business/ops/voucher_priv/voucher_priv_form.html , method = com.dt.platform.ops.page.VoucherPrivPageController.form
[ALL] /business/ops/voucher_priv/voucher_priv_list.html , method = com.dt.platform.ops.page.VoucherPrivPageController.list
[POST] /service-eam/eam-asset-maintenance-record-u/query-list , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.queryList
[POST] /service-ops/ops-ip-address-range/update , method = com.dt.platform.ops.controller.IpAddressRangeController.update
[POST] /service-system/sys-node/update , method = org.github.foxnic.web.system.controller.NodeController.update
[POST] /service-eam/eam-asset-stock-goods/update , method = com.dt.platform.eam.controller.AssetStockGoodsController.update
[POST] /service-eam/eam-asset-maintenance-record-u/delete , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.deleteById
[POST] /service-common/sys-auto-module-role/update , method = com.dt.platform.common.controller.AutoModuleRoleController.update
[POST] /service-eam/eam-asset-maintenance-record-u/delete-by-ids , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.deleteByIds
[POST] /service-datacenter/dc-rack/query-paged-list , method = com.dt.platform.datacenter.controller.RackController.queryPagedList
[ALL] /service-datacenter/dc-rack/export-excel , method = com.dt.platform.datacenter.controller.RackController.exportExcel
[POST] /service-common/sys-auto-module-role/save , method = com.dt.platform.common.controller.AutoModuleRoleController.save
[POST] /service-system/sys-node/save , method = org.github.foxnic.web.system.controller.NodeController.save
[ALL] /service-datacenter/dc-rack/export-excel-template , method = com.dt.platform.datacenter.controller.RackController.exportExcelTemplate
[ALL] /service-datacenter/dc-rack/import-excel , method = com.dt.platform.datacenter.controller.RackController.importExcel
[ALL] /service-datacenter/dc-rack/query-tree-list , method = com.dt.platform.datacenter.controller.RackController.queryTreeList
[POST] /service-common/sys-auto-module-role/insert , method = com.dt.platform.common.controller.AutoModuleRoleController.insert
[ALL] /business/datacenter/area/area_form.html , method = com.dt.platform.datacenter.page.AreaPageController.form
[POST] /service-eam/eam-asset-stock-goods/save , method = com.dt.platform.eam.controller.AssetStockGoodsController.save
[POST] /service-ops/ops-ip-address-range/save , method = com.dt.platform.ops.controller.IpAddressRangeController.save
[ALL] /business/datacenter/area/area_list.html , method = com.dt.platform.datacenter.page.AreaPageController.list
[POST] /service-common/sys-auto-module-role/get-by-id , method = com.dt.platform.common.controller.AutoModuleRoleController.getById
[POST] /service-system/sys-node/insert , method = org.github.foxnic.web.system.controller.NodeController.insert
[ALL] /business/datacenter/layer/layer_form.html , method = com.dt.platform.datacenter.page.LayerPageController.form
[POST] /service-common/sys-auto-module-role/get-by-ids , method = com.dt.platform.common.controller.AutoModuleRoleController.getByIds
[ALL] /business/datacenter/layer/layer_list.html , method = com.dt.platform.datacenter.page.LayerPageController.list
[POST] /service-system/sys-node/get-by-id , method = org.github.foxnic.web.system.controller.NodeController.getById
[ALL] /business/datacenter/rack/rack_form.html , method = com.dt.platform.datacenter.page.RackPageController.form
[ALL] /business/datacenter/rack/rack_list.html , method = com.dt.platform.datacenter.page.RackPageController.list
[POST] /service-system/sys-node/get-by-ids , method = org.github.foxnic.web.system.controller.NodeController.getByIds
[POST] /service-common/sys-auto-module-role/query-list , method = com.dt.platform.common.controller.AutoModuleRoleController.queryList
[ALL] /business/datacenter/rack/rack_area_list.html , method = com.dt.platform.datacenter.page.RackPageController.areaList
[ALL] /business/datacenter/rack/rack_dev_tree_list.html , method = com.dt.platform.datacenter.page.RackPageController.devTreeList
[POST] /service-common/sys-auto-module-role/delete , method = com.dt.platform.common.controller.AutoModuleRoleController.deleteById
[ALL] /business/datacenter/rack/rack_dev_show_list.html , method = com.dt.platform.datacenter.page.RackPageController.devShowList
[POST] /service-eam/eam-asset-stock-goods/insert , method = com.dt.platform.eam.controller.AssetStockGoodsController.insert
[POST] /service-common/sys-auto-module-role/delete-by-ids , method = com.dt.platform.common.controller.AutoModuleRoleController.deleteByIds
[POST] /service-ops/ops-ip-address-range/insert , method = com.dt.platform.ops.controller.IpAddressRangeController.insert
[POST] /service-eam/eam-asset-stock-goods/get-by-id , method = com.dt.platform.eam.controller.AssetStockGoodsController.getById
[POST] /service-eam/eam-asset-maintenance-record-u/query-paged-list , method = com.dt.platform.eam.controller.AssetMaintenanceRecordUController.queryPagedList
[POST] /service-system/sys-node/query-list , method = org.github.foxnic.web.system.controller.NodeController.queryList
[POST] /service-cms/cms-category/update , method = com.dt.platform.cms.controller.CategoryController.update
[POST] /service-common/sys-auto-module-role/query-paged-list , method = com.dt.platform.common.controller.AutoModuleRoleController.queryPagedList
[POST] /service-eam/eam-asset-stock-goods/get-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsController.getByIds
[POST] /service-system/sys-node/delete , method = org.github.foxnic.web.system.controller.NodeController.deleteById
[POST] /service-common/sys-auto-module-role/permission-downgrade , method = com.dt.platform.common.controller.AutoModuleRoleController.permissionDowngrade
[POST] /service-cms/cms-category/save , method = com.dt.platform.cms.controller.CategoryController.save
[POST] /service-ops/ops-ip-address-range/get-by-id , method = com.dt.platform.ops.controller.IpAddressRangeController.getById
[POST] /service-system/sys-node/delete-by-ids , method = org.github.foxnic.web.system.controller.NodeController.deleteByIds
[POST] /service-eam/eam-asset-maintenance-update/update , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.update
[POST] /service-common/sys-auto-module-role-item/update , method = com.dt.platform.common.controller.AutoModuleRoleItemController.update
[POST] /service-cms/cms-category/insert , method = com.dt.platform.cms.controller.CategoryController.insert
[POST] /service-cms/cms-category/get-by-id , method = com.dt.platform.cms.controller.CategoryController.getById
[POST] /service-ops/ops-ip-address-range/get-by-ids , method = com.dt.platform.ops.controller.IpAddressRangeController.getByIds
[POST] /service-common/sys-auto-module-role-item/save , method = com.dt.platform.common.controller.AutoModuleRoleItemController.save
[POST] /service-eam/eam-asset-stock-goods/query-list , method = com.dt.platform.eam.controller.AssetStockGoodsController.queryList
[POST] /service-eam/eam-asset-maintenance-update/save , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.save
[POST] /service-cms/cms-category/get-by-ids , method = com.dt.platform.cms.controller.CategoryController.getByIds
[POST] /service-common/sys-auto-module-role-item/insert , method = com.dt.platform.common.controller.AutoModuleRoleItemController.insert
[POST] /service-eam/eam-asset-stock-goods/delete , method = com.dt.platform.eam.controller.AssetStockGoodsController.deleteById
[POST] /service-cms/cms-category/query-list , method = com.dt.platform.cms.controller.CategoryController.queryList
[POST] /service-common/sys-auto-module-role-item/get-by-id , method = com.dt.platform.common.controller.AutoModuleRoleItemController.getById
[POST] /service-eam/eam-asset-maintenance-update/insert , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.insert
[POST] /service-cms/cms-category/delete , method = com.dt.platform.cms.controller.CategoryController.deleteById
[POST] /service-eam/eam-asset-data/query-asset-lucky-sheet , method = com.dt.platform.eam.controller.AssetDataController.queryAssetLuckySheet
[POST] /service-eam/eam-asset-maintenance-update/cancel , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.cancel
[POST] /service-common/sys-auto-module-role-item/get-by-ids , method = com.dt.platform.common.controller.AutoModuleRoleItemController.getByIds
[POST] /service-eam/eam-asset-maintenance-update/insert-asset , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.getById
[POST] /service-ops/ops-ip-address-range/query-list , method = com.dt.platform.ops.controller.IpAddressRangeController.queryList
[POST] /service-cms/cms-category/delete-by-ids , method = com.dt.platform.cms.controller.CategoryController.deleteByIds
[POST] /service-eam/eam-asset-data-permissions-catalog/update , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.update
[POST] /service-common/sys-auto-module-role-item/query-list , method = com.dt.platform.common.controller.AutoModuleRoleItemController.queryList
[POST] /service-eam/eam-asset-process-record/insert , method = com.dt.platform.eam.controller.AssetProcessRecordController.insert
[POST] /service-eam/eam-asset-maintenance-update/get-by-id , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.getById
[POST] /service-common/sys-auto-module-role-item/delete , method = com.dt.platform.common.controller.AutoModuleRoleItemController.deleteById
[POST] /service-eam/eam-asset-data-permissions-catalog/save , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.save
[POST] /service-cms/cms-category/query-paged-list , method = com.dt.platform.cms.controller.CategoryController.queryPagedList
[POST] /service-eam/eam-asset-process-record/get-by-id , method = com.dt.platform.eam.controller.AssetProcessRecordController.getById
[POST] /service-eam/eam-asset-maintenance-update/get-by-ids , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.getByIds
[POST] /service-common/sys-auto-module-role-item/delete-by-ids , method = com.dt.platform.common.controller.AutoModuleRoleItemController.deleteByIds
[ALL] /service-cms/cms-category/export-excel , method = com.dt.platform.cms.controller.CategoryController.exportExcel
[POST] /service-eam/eam-asset-data-permissions-catalog/insert , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.insert
[POST] /service-eam/eam-asset-maintenance-update/fill-data , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.fillData
[POST] /service-eam/eam-asset-process-record/get-by-ids , method = com.dt.platform.eam.controller.AssetProcessRecordController.getByIds
[ALL] /service-cms/cms-category/export-excel-template , method = com.dt.platform.cms.controller.CategoryController.exportExcelTemplate
[POST] /service-eam/eam-asset-data-permissions-catalog/get-by-id , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.getById
[POST] /service-common/sys-auto-module-role-item/query-paged-list , method = com.dt.platform.common.controller.AutoModuleRoleItemController.queryPagedList
[ALL] /service-cms/cms-category/import-excel , method = com.dt.platform.cms.controller.CategoryController.importExcel
[ALL] /business/cms/category/category_form.html , method = com.dt.platform.cms.page.CategoryPageController.form
[POST] /service-eam/eam-asset-data-permissions-catalog/get-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.getByIds
[ALL] /business/cms/category/category_list.html , method = com.dt.platform.cms.page.CategoryPageController.list
[POST] /service-common/sys-auto-role-grant-rcd/update , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.update
[POST] /service-eam/eam-asset-maintenance-update/query-list , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.queryList
[POST] /service-eam/eam-asset-process-record/query-list , method = com.dt.platform.eam.controller.AssetProcessRecordController.queryList
[POST] /service-eam/eam-asset-data-permissions-catalog/query-list , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.queryList
[POST] /service-eam/eam-asset-process-record/delete , method = com.dt.platform.eam.controller.AssetProcessRecordController.deleteById
[POST] /service-eam/eam-asset-maintenance-update/delete , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.deleteById
[POST] /service-common/sys-auto-role-grant-rcd/save , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.save
[POST] /service-eam/eam-asset-data-permissions-catalog/delete , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.deleteById
[POST] /service-eam/eam-asset-process-record/delete-by-ids , method = com.dt.platform.eam.controller.AssetProcessRecordController.deleteByIds
[POST] /service-eam/eam-asset-maintenance-update/delete-by-ids , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.deleteByIds
[POST] /service-ops/ops-auto-action/update , method = com.dt.platform.ops.controller.AutoActionController.update
[POST] /service-eam/eam-asset-data-permissions-catalog/delete-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.deleteByIds
[POST] /service-common/sys-auto-role-grant-rcd/insert , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.insert
[POST] /service-eam/eam-purchase-apply/delete , method = com.dt.platform.eam.controller.PurchaseApplyController.deleteById
[POST] /service-common/sys-auto-role-grant-rcd/get-by-id , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.getById
[POST] /service-eam/eam-asset-data-permissions-catalog/query-paged-list , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.queryPagedList
[POST] /service-eam/eam-asset-maintenance-update/query-paged-list , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.queryPagedList
[POST] /service-eam/eam-asset-process-record/query-paged-list , method = com.dt.platform.eam.controller.AssetProcessRecordController.queryPagedList
[ALL] /service-eam/eam-asset-data-permissions-catalog/export-excel , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.exportExcel
[POST] /service-common/sys-auto-role-grant-rcd/get-by-ids , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.getByIds
[POST] /service-eam/eam-asset-maintenance-update/action-update , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.actionUpdate
[ALL] /service-eam/eam-asset-process-record/export-excel , method = com.dt.platform.eam.controller.AssetProcessRecordController.exportExcel
[ALL] /service-eam/eam-asset-data-permissions-catalog/export-excel-template , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.exportExcelTemplate
[POST] /service-ops/ops-auto-action/save , method = com.dt.platform.ops.controller.AutoActionController.save
[POST] /service-eam/eam-asset-maintenance-update/batch-oper , method = com.dt.platform.eam.controller.AssetMaintenanceUpdateController.batchOper
[ALL] /service-eam/eam-asset-process-record/export-excel-template , method = com.dt.platform.eam.controller.AssetProcessRecordController.exportExcelTemplate
[ALL] /service-eam/eam-asset-data-permissions-catalog/import-excel , method = com.dt.platform.eam.controller.AssetDataPermissionsCatalogController.importExcel
[POST] /service-common/sys-auto-role-grant-rcd/query-list , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.queryList
[ALL] /service-eam/eam-asset-process-record/import-excel , method = com.dt.platform.eam.controller.AssetProcessRecordController.importExcel
[POST] /service-common/sys-auto-role-grant-rcd/delete , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.deleteById
[POST] /service-eam/eam-asset-process-record/update , method = com.dt.platform.eam.controller.AssetProcessRecordController.update
[POST] /service-common/sys-auto-role-grant-rcd/delete-by-ids , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.deleteByIds
[POST] /service-ops/ops-auto-action/insert , method = com.dt.platform.ops.controller.AutoActionController.insert
[POST] /service-eam/eam-asset-rack/update , method = com.dt.platform.eam.controller.AssetRackController.update
[POST] /service-ops/ops-auto-action/get-by-id , method = com.dt.platform.ops.controller.AutoActionController.getById
[POST] /service-common/sys-auto-role-grant-rcd/query-paged-list , method = com.dt.platform.common.controller.AutoRoleGrantRcdController.queryPagedList
[POST] /service-eam/eam-asset-process-record/save , method = com.dt.platform.eam.controller.AssetProcessRecordController.save
[POST] /service-eam/eam-asset-data-permissions/update , method = com.dt.platform.eam.controller.AssetDataPermissionsController.update
[POST] /service-ops/ops-auto-action/get-by-ids , method = com.dt.platform.ops.controller.AutoActionController.getByIds
[POST] /service-common/sys-auto-user-predefined/update , method = com.dt.platform.common.controller.AutoUserPredefinedController.update
[POST] /service-eam/eam-asset-rack/save , method = com.dt.platform.eam.controller.AssetRackController.save
[POST] /service-common/sys-auto-user-predefined/save , method = com.dt.platform.common.controller.AutoUserPredefinedController.save
[POST] /service-common/sys-auto-user-predefined/insert , method = com.dt.platform.common.controller.AutoUserPredefinedController.insert
[POST] /service-ops/ops-auto-action/query-list , method = com.dt.platform.ops.controller.AutoActionController.queryList
[POST] /service-common/sys-auto-user-predefined/get-by-id , method = com.dt.platform.common.controller.AutoUserPredefinedController.getById
[POST] /service-eam/eam-asset-rack/insert , method = com.dt.platform.eam.controller.AssetRackController.insert
[POST] /service-ops/ops-auto-action/delete , method = com.dt.platform.ops.controller.AutoActionController.deleteById
[POST] /service-common/sys-auto-user-predefined/get-by-ids , method = com.dt.platform.common.controller.AutoUserPredefinedController.getByIds
[POST] /service-eam/eam-asset-data-permissions/save , method = com.dt.platform.eam.controller.AssetDataPermissionsController.save
[POST] /service-eam/eam-asset-rack/get-by-id , method = com.dt.platform.eam.controller.AssetRackController.getById
[POST] /service-ops/ops-auto-action/delete-by-ids , method = com.dt.platform.ops.controller.AutoActionController.deleteByIds
[POST] /service-common/sys-auto-user-predefined/query-list , method = com.dt.platform.common.controller.AutoUserPredefinedController.queryList
[POST] /service-eam/eam-asset-rack/get-by-ids , method = com.dt.platform.eam.controller.AssetRackController.getByIds
[POST] /service-wms/wms-storehouse/delete , method = com.dt.platform.wms.controller.StorehouseController.deleteById
[POST] /service-common/sys-auto-user-predefined/delete , method = com.dt.platform.common.controller.AutoUserPredefinedController.deleteById
[POST] /service-wms/wms-storehouse/delete-by-ids , method = com.dt.platform.wms.controller.StorehouseController.deleteByIds
[POST] /service-common/sys-auto-user-predefined/delete-by-ids , method = com.dt.platform.common.controller.AutoUserPredefinedController.deleteByIds
[POST] /service-ops/ops-auto-action/query-paged-list , method = com.dt.platform.ops.controller.AutoActionController.queryPagedList
[POST] /service-common/sys-auto-user-predefined/query-paged-list , method = com.dt.platform.common.controller.AutoUserPredefinedController.queryPagedList
[POST] /service-eam/eam-asset-data-permissions/insert , method = com.dt.platform.eam.controller.AssetDataPermissionsController.insert
[POST] /service-eam/eam-asset-rack/query-list , method = com.dt.platform.eam.controller.AssetRackController.queryList
[POST] /service-wms/wms-storehouse/query-paged-list , method = com.dt.platform.wms.controller.StorehouseController.queryPagedList
[POST] /service-eam/eam-asset-data-permissions/get-by-id , method = com.dt.platform.eam.controller.AssetDataPermissionsController.getById
[POST] /service-ops/ops-auto-action-file/update , method = com.dt.platform.ops.controller.AutoActionFileController.update
[POST] /service-eam/eam-asset-rack/delete , method = com.dt.platform.eam.controller.AssetRackController.deleteById
[POST] /service-eam/eam-asset-data-permissions/get-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsController.getByIds
[POST] /service-common/sys-backup-db/update , method = com.dt.platform.common.controller.BackupDbController.update
[POST] /service-eam/eam-asset-rack/delete-by-ids , method = com.dt.platform.eam.controller.AssetRackController.deleteByIds
[POST] /service-ops/ops-auto-action-file/save , method = com.dt.platform.ops.controller.AutoActionFileController.save
[POST] /service-ops/ops-auto-action-file/insert , method = com.dt.platform.ops.controller.AutoActionFileController.insert
[POST] /service-common/sys-backup-db/save , method = com.dt.platform.common.controller.BackupDbController.save
[POST] /service-wms/wms-storelocation/update , method = com.dt.platform.wms.controller.StorelocationController.update
[POST] /service-eam/eam-asset-rack/query-paged-list , method = com.dt.platform.eam.controller.AssetRackController.queryPagedList
[POST] /service-ops/ops-auto-action-file/get-by-id , method = com.dt.platform.ops.controller.AutoActionFileController.getById
[POST] /service-eam/eam-asset-data-permissions/query-list , method = com.dt.platform.eam.controller.AssetDataPermissionsController.queryList
[POST] /service-ops/ops-auto-action-file/get-by-ids , method = com.dt.platform.ops.controller.AutoActionFileController.getByIds
[POST] /service-common/sys-backup-db/insert , method = com.dt.platform.common.controller.BackupDbController.insert
[POST] /service-eam/eam-asset-data-permissions/delete , method = com.dt.platform.eam.controller.AssetDataPermissionsController.deleteById
[POST] /service-common/sys-backup-db/down-file , method = com.dt.platform.common.controller.BackupDbController.downFile
[POST] /service-eam/eam-asset-data-permissions/delete-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsController.deleteByIds
[POST] /service-ops/ops-auto-action-file/query-list , method = com.dt.platform.ops.controller.AutoActionFileController.queryList
[POST] /service-common/sys-backup-db/get-by-id , method = com.dt.platform.common.controller.BackupDbController.getById
[POST] /service-ops/ops-auto-action-file/delete , method = com.dt.platform.ops.controller.AutoActionFileController.deleteById
[POST] /service-eam/eam-asset-rack-info/update , method = com.dt.platform.eam.controller.AssetRackInfoController.update
[POST] /service-common/sys-backup-db/get-by-ids , method = com.dt.platform.common.controller.BackupDbController.getByIds
[POST] /service-ops/ops-auto-action-file/delete-by-ids , method = com.dt.platform.ops.controller.AutoActionFileController.deleteByIds
[POST] /service-wms/wms-storelocation/save , method = com.dt.platform.wms.controller.StorelocationController.save
[POST] /service-ops/ops-auto-action-file/query-paged-list , method = com.dt.platform.ops.controller.AutoActionFileController.queryPagedList
[POST] /service-eam/eam-asset-data-permissions/query-paged-list , method = com.dt.platform.eam.controller.AssetDataPermissionsController.queryPagedList
[POST] /service-common/sys-backup-db/query-list , method = com.dt.platform.common.controller.BackupDbController.queryList
[POST] /service-eam/eam-asset-rack-info/save , method = com.dt.platform.eam.controller.AssetRackInfoController.save
[POST] /service-ops/ops-auto-action-s-file/update , method = com.dt.platform.ops.controller.AutoActionSFileController.update
[POST] /service-common/sys-backup-db/delete , method = com.dt.platform.common.controller.BackupDbController.deleteById
[POST] /service-eam/eam-asset-data-permissions-o-org/update , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.update
[POST] /service-common/sys-backup-db/delete-by-ids , method = com.dt.platform.common.controller.BackupDbController.deleteByIds
[POST] /service-ops/ops-auto-action-s-file/save , method = com.dt.platform.ops.controller.AutoActionSFileController.save
[POST] /service-eam/eam-asset-data-permissions-o-org/save , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.save
[POST] /service-wms/wms-storelocation/insert , method = com.dt.platform.wms.controller.StorelocationController.insert
[POST] /service-ops/ops-auto-action-s-file/insert , method = com.dt.platform.ops.controller.AutoActionSFileController.insert
[POST] /service-eam/eam-asset-data-permissions-o-org/insert , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.insert
[POST] /service-wms/wms-storelocation/get-by-id , method = com.dt.platform.wms.controller.StorelocationController.getById
[POST] /service-eam/eam-asset-rack-info/insert , method = com.dt.platform.eam.controller.AssetRackInfoController.insert
[POST] /service-common/sys-backup-db/query-paged-list , method = com.dt.platform.common.controller.BackupDbController.queryPagedList
[POST] /service-eam/eam-asset-data-permissions-o-org/get-by-id , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.getById
[POST] /service-ops/ops-auto-action-s-file/get-by-id , method = com.dt.platform.ops.controller.AutoActionSFileController.getById
[POST] /service-wms/wms-storelocation/get-by-ids , method = com.dt.platform.wms.controller.StorelocationController.getByIds
[POST] /service-common/sys-backup-db/execute-backup , method = com.dt.platform.common.controller.BackupDbController.executeBackup
[POST] /service-eam/eam-asset-rack-info/get-by-id , method = com.dt.platform.eam.controller.AssetRackInfoController.getById
[POST] /service-ops/ops-auto-action-s-file/get-by-ids , method = com.dt.platform.ops.controller.AutoActionSFileController.getByIds
[POST] /service-eam/eam-asset-data-permissions-o-org/get-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.getByIds
[POST] /service-eam/eam-asset-rack-info/get-by-ids , method = com.dt.platform.eam.controller.AssetRackInfoController.getByIds
[POST] /service-ops/ops-auto-action-s-file/query-list , method = com.dt.platform.ops.controller.AutoActionSFileController.queryList
[POST] /service-common/sys-backup-db-strategy/update , method = com.dt.platform.common.controller.BackupDbStrategyController.update
[POST] /service-eam/eam-asset-data-permissions-o-org/query-list , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.queryList
[POST] /service-ops/ops-auto-action-s-file/delete , method = com.dt.platform.ops.controller.AutoActionSFileController.deleteById
[POST] /service-eam/eam-asset-data-permissions-o-org/delete , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.deleteById
[POST] /service-ops/ops-auto-action-s-file/delete-by-ids , method = com.dt.platform.ops.controller.AutoActionSFileController.deleteByIds
[POST] /service-eam/eam-asset-data-permissions-o-org/delete-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.deleteByIds
[POST] /service-common/sys-backup-db-strategy/save , method = com.dt.platform.common.controller.BackupDbStrategyController.save
[POST] /service-wms/wms-storelocation/query-list , method = com.dt.platform.wms.controller.StorelocationController.queryList
[POST] /service-ops/ops-auto-action-s-file/query-paged-list , method = com.dt.platform.ops.controller.AutoActionSFileController.queryPagedList
[POST] /service-eam/eam-asset-data-permissions-o-org/query-paged-list , method = com.dt.platform.eam.controller.AssetDataPermissionsOOrgController.queryPagedList
[POST] /service-eam/eam-asset-rack-info/query-list , method = com.dt.platform.eam.controller.AssetRackInfoController.queryList
[POST] /service-common/sys-backup-db-strategy/insert , method = com.dt.platform.common.controller.BackupDbStrategyController.insert
[POST] /service-ops/ops-auto-action-s-script/update , method = com.dt.platform.ops.controller.AutoActionSScriptController.update
[POST] /service-eam/eam-asset-data-permissions-org/update , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.update
[POST] /service-common/sys-backup-db-strategy/get-by-id , method = com.dt.platform.common.controller.BackupDbStrategyController.getById
[POST] /service-eam/eam-asset-rack-info/delete , method = com.dt.platform.eam.controller.AssetRackInfoController.deleteById
[POST] /service-ops/ops-auto-action-s-script/save , method = com.dt.platform.ops.controller.AutoActionSScriptController.save
[POST] /service-common/sys-backup-db-strategy/get-by-ids , method = com.dt.platform.common.controller.BackupDbStrategyController.getByIds
[POST] /service-eam/eam-asset-data-permissions-org/save , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.save
[POST] /service-eam/eam-asset-rack-info/delete-by-ids , method = com.dt.platform.eam.controller.AssetRackInfoController.deleteByIds
[POST] /service-ops/ops-ip-address-range/delete , method = com.dt.platform.ops.controller.IpAddressRangeController.deleteById
[POST] /service-eam/eam-asset-data-permissions-org/insert , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.insert
[POST] /service-ops/ops-auto-action-s-script/insert , method = com.dt.platform.ops.controller.AutoActionSScriptController.insert
[POST] /service-common/sys-backup-db-strategy/query-list , method = com.dt.platform.common.controller.BackupDbStrategyController.queryList
[POST] /service-ops/ops-ip-address-range/delete-by-ids , method = com.dt.platform.ops.controller.IpAddressRangeController.deleteByIds
[POST] /service-common/sys-backup-db-strategy/delete , method = com.dt.platform.common.controller.BackupDbStrategyController.deleteById
[POST] /service-ops/ops-auto-action-s-script/get-by-id , method = com.dt.platform.ops.controller.AutoActionSScriptController.getById
[POST] /service-eam/eam-asset-data-permissions-org/get-by-id , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.getById
[POST] /service-common/sys-backup-db-strategy/delete-by-ids , method = com.dt.platform.common.controller.BackupDbStrategyController.deleteByIds
[POST] /service-ops/ops-auto-action-s-script/get-by-ids , method = com.dt.platform.ops.controller.AutoActionSScriptController.getByIds
[POST] /service-eam/eam-asset-rack-info/query-paged-list , method = com.dt.platform.eam.controller.AssetRackInfoController.queryPagedList
[POST] /service-eam/eam-asset-data-permissions-org/get-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.getByIds
[POST] /service-ops/ops-auto-action-s-script/query-list , method = com.dt.platform.ops.controller.AutoActionSScriptController.queryList
[POST] /service-common/sys-backup-db-strategy/query-paged-list , method = com.dt.platform.common.controller.BackupDbStrategyController.queryPagedList
[POST] /service-eam/eam-asset-region/update , method = com.dt.platform.eam.controller.AssetRegionController.update
[POST] /service-ops/ops-ip-address-range/query-paged-list , method = com.dt.platform.ops.controller.IpAddressRangeController.queryPagedList
[POST] /service-eam/eam-asset-data-permissions-org/query-list , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.queryList
[POST] /service-ops/ops-auto-action-s-script/delete , method = com.dt.platform.ops.controller.AutoActionSScriptController.deleteById
[POST] /service-ops/monitor-data-process-base/query-node-zabbix-agent-data , method = com.dt.platform.ops.controller.MonitorDataProcessBaseController.queryNodeZabbixAgentData
[POST] /service-common/sys-code-allocation/update , method = com.dt.platform.common.controller.CodeAllocationController.update
[POST] /service-ops/ops-auto-action-s-script/delete-by-ids , method = com.dt.platform.ops.controller.AutoActionSScriptController.deleteByIds
[POST] /service-eam/eam-asset-data-permissions-org/delete , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.deleteById
[POST] /service-system/sys-node/query-paged-list , method = org.github.foxnic.web.system.controller.NodeController.queryPagedList
[POST] /service-ops/monitor-data-process-base/query-tpl-list-by-node-id , method = com.dt.platform.ops.controller.MonitorDataProcessBaseController.queryTplListByNodeId
[POST] /service-eam/eam-asset-region/save , method = com.dt.platform.eam.controller.AssetRegionController.save
[POST] /service-eam/eam-asset-data-permissions-org/delete-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.deleteByIds
[POST] /service-ops/ops-auto-action-s-script/query-paged-list , method = com.dt.platform.ops.controller.AutoActionSScriptController.queryPagedList
[POST] /service-ops/monitor-process-script/collect-data , method = com.dt.platform.ops.controller.MonitorDataProcessScriptController.collectData
[POST] /service-system/unit-test/dao/setter-3 , method = org.github.foxnic.web.system.test.DAOTestController.setter3
[POST] /service-ops/monitor-process-script/clear-node-value-last-history-data , method = com.dt.platform.ops.controller.MonitorDataProcessScriptController.clearNodeValueLastHistoryData
[POST] /service-eam/eam-asset-data-permissions-org/query-paged-list , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.queryPagedList
[POST] /service-eam/eam-asset-region/insert , method = com.dt.platform.eam.controller.AssetRegionController.insert
[POST] /service-ops/monitor-process-zabbix-agent/collect-data , method = com.dt.platform.ops.controller.MonitorDataProcessZabbixAgentController.collectData
[ALL] /service-eam/eam-asset-data-permissions-org/export-excel , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.exportExcel
[POST] /service-ops/monitor-process-zabbix-agent/clear-node-value-last-history-data , method = com.dt.platform.ops.controller.MonitorDataProcessZabbixAgentController.clearNodeValueLastHistoryData
[POST] /service-eam/eam-asset-region/get-by-id , method = com.dt.platform.eam.controller.AssetRegionController.getById
[ALL] /service-eam/eam-asset-data-permissions-org/export-excel-template , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.exportExcelTemplate
[POST] /service-ops/ops-auto-action-script/update , method = com.dt.platform.ops.controller.AutoActionScriptController.update
[POST] /service-ops/monitor-process-zabbix-server/collect-data , method = com.dt.platform.ops.controller.MonitorDataProcessZabbixServerController.collectData
[ALL] /service-eam/eam-asset-data-permissions-org/import-excel , method = com.dt.platform.eam.controller.AssetDataPermissionsOrgController.importExcel
[POST] /service-eam/eam-asset-region/get-by-ids , method = com.dt.platform.eam.controller.AssetRegionController.getByIds
[POST] /service-ops/monitor-process-zabbix-server/clear-node-value-last-history-data , method = com.dt.platform.ops.controller.MonitorDataProcessZabbixServerController.clearNodeValueLastHistoryData
[POST] /service-ops/ops-auto-action-script/save , method = com.dt.platform.ops.controller.AutoActionScriptController.save
[POST] /service-eam/eam-asset-data-permissions-position/update , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.update
[POST] /service-eam/eam-asset-region/query-list , method = com.dt.platform.eam.controller.AssetRegionController.queryList
[POST] /service-ops/ops-auto-action-script/insert , method = com.dt.platform.ops.controller.AutoActionScriptController.insert
[POST] /service-system/unit-test/dao/query-1 , method = org.github.foxnic.web.system.test.DAOTestController.query1
[POST] /service-eam/eam-asset-data-permissions-position/save , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.save
[POST] /service-system/unit-test/dao/long-sql-2 , method = org.github.foxnic.web.system.test.DAOTestController.longSQL2
[POST] /service-ops/ops-auto-action-script/get-by-id , method = com.dt.platform.ops.controller.AutoActionScriptController.getById
[POST] /service-eam/eam-asset-region/delete , method = com.dt.platform.eam.controller.AssetRegionController.deleteById
[POST] /service-eam/eam-asset-data-permissions-position/insert , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.insert
[POST] /service-system/unit-test/dao/long-sql-3 , method = org.github.foxnic.web.system.test.DAOTestController.longSQL3
[POST] /service-ops/ops-auto-action-script/get-by-ids , method = com.dt.platform.ops.controller.AutoActionScriptController.getByIds
[POST] /service-ops/ops-monitor-node/update , method = com.dt.platform.ops.controller.MonitorNodeController.update
[POST] /service-eam/eam-asset-region/delete-by-ids , method = com.dt.platform.eam.controller.AssetRegionController.deleteByIds
[POST] /service-eam/eam-asset-data-permissions-position/get-by-id , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.getById
[POST] /service-system/unit-test/dao/long-sql-1 , method = org.github.foxnic.web.system.test.DAOTestController.longSQL1
[POST] /service-system/unit-test/dao/setter-1 , method = org.github.foxnic.web.system.test.DAOTestController.setter1
[POST] /service-ops/ops-auto-action-script/query-list , method = com.dt.platform.ops.controller.AutoActionScriptController.queryList
[POST] /service-eam/eam-asset-data-permissions-position/get-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.getByIds
[POST] /service-system/unit-test/dao/setter-2 , method = org.github.foxnic.web.system.test.DAOTestController.setter2
[POST] /service-ops/ops-auto-action-script/delete , method = com.dt.platform.ops.controller.AutoActionScriptController.deleteById
[POST] /service-eam/eam-asset-data-permissions-position/query-list , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.queryList
[POST] /service-common/sys-code-allocation/save , method = com.dt.platform.common.controller.CodeAllocationController.save
[POST] /service-ops/ops-auto-action-script/delete-by-ids , method = com.dt.platform.ops.controller.AutoActionScriptController.deleteByIds
[POST] /service-system/sys-code-example-student/update , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.update
[POST] /service-eam/eam-asset-data-permissions-position/delete , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.deleteById
[POST] /service-eam/eam-asset-region/query-paged-list , method = com.dt.platform.eam.controller.AssetRegionController.queryPagedList
[POST] /service-ops/ops-monitor-node/save , method = com.dt.platform.ops.controller.MonitorNodeController.save
[POST] /service-system/sys-code-example-student/save , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.save
[POST] /service-ops/ops-auto-action-script/query-paged-list , method = com.dt.platform.ops.controller.AutoActionScriptController.queryPagedList
[POST] /service-eam/eam-asset-data-permissions-position/delete-by-ids , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.deleteByIds
[POST] /service-system/sys-code-example-student/insert , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.insert
[POST] /service-ops/ops-auto-batch/update , method = com.dt.platform.ops.controller.AutoBatchController.update
[POST] /service-system/sys-code-example-student/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.getById
[POST] /service-eam/eam-purchase-apply/delete-by-ids , method = com.dt.platform.eam.controller.PurchaseApplyController.deleteByIds
[POST] /service-eam/eam-asset-data-permissions-position/query-paged-list , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.queryPagedList
[POST] /service-system/sys-code-example-student/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.getByIds
[POST] /service-ops/ops-auto-batch/save , method = com.dt.platform.ops.controller.AutoBatchController.save
[ALL] /service-eam/eam-asset-data-permissions-position/export-excel , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.exportExcel
[POST] /service-ops/ops-monitor-node/insert , method = com.dt.platform.ops.controller.MonitorNodeController.insert
[ALL] /service-eam/eam-asset-data-permissions-position/export-excel-template , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.exportExcelTemplate
[POST] /service-system/sys-code-example-student/query-list , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.queryList
[ALL] /service-eam/eam-asset-data-permissions-position/import-excel , method = com.dt.platform.eam.controller.AssetDataPermissionsPositionController.importExcel
[POST] /service-ops/ops-monitor-node/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeController.getById
[POST] /service-system/sys-code-example-student/delete , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.deleteById
[POST] /service-ops/ops-monitor-node/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeController.getByIds
[POST] /service-system/sys-code-example-student/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.deleteByIds
[POST] /service-ops/ops-auto-batch/insert , method = com.dt.platform.ops.controller.AutoBatchController.insert
[POST] /service-common/sys-code-allocation/insert , method = com.dt.platform.common.controller.CodeAllocationController.insert
[POST] /service-eam/eam-asset-depreciation-cal-rule/update , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.update
[POST] /service-ops/ops-auto-batch/get-by-id , method = com.dt.platform.ops.controller.AutoBatchController.getById
[POST] /service-system/sys-code-example-student/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.queryPagedList
[POST] /service-common/sys-code-allocation/get-by-id , method = com.dt.platform.common.controller.CodeAllocationController.getById
[ALL] /service-system/sys-code-example-student/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.exportExcel
[POST] /service-ops/ops-auto-batch/get-by-ids , method = com.dt.platform.ops.controller.AutoBatchController.getByIds
[ALL] /service-system/sys-code-example-student/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.exportExcelTemplate
[POST] /service-common/sys-code-allocation/get-by-ids , method = com.dt.platform.common.controller.CodeAllocationController.getByIds
[ALL] /service-system/sys-code-example-student/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.importExcel
[POST] /service-eam/eam-asset-depreciation-cal-rule/save , method = com.dt.platform.eam.controller.AssetDepreciationCalRuleController.save
[POST] /service-ops/ops-auto-batch/query-list , method = com.dt.platform.ops.controller.AutoBatchController.queryList
[POST] /service-ops/ops-monitor-node/query-list , method = com.dt.platform.ops.controller.MonitorNodeController.queryList
[POST] /service-common/sys-code-allocation/query-list , method = com.dt.platform.common.controller.CodeAllocationController.queryList
[POST] /service-ops/ops-auto-batch/delete , method = com.dt.platform.ops.controller.AutoBatchController.deleteById
[POST] /service-ops/ops-monitor-node/delete , method = com.dt.platform.ops.controller.MonitorNodeController.deleteById
[POST] /service-common/sys-code-allocation/delete , method = com.dt.platform.common.controller.CodeAllocationController.deleteById
[POST] /service-ops/ops-auto-batch/delete-by-ids , method = com.dt.platform.ops.controller.AutoBatchController.deleteByIds
[POST] /service-common/sys-code-allocation/delete-by-ids , method = com.dt.platform.common.controller.CodeAllocationController.deleteByIds
[POST] /service-system/sys-invoke-log/update , method = org.github.foxnic.web.system.controller.InvokeLogController.update
[POST] /service-eam/eam-asset-alarm/query-collection-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryCollectionExpirationData
[POST] /service-ops/ops-monitor-node/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeController.deleteByIds
[POST] /service-ops/ops-auto-batch/query-paged-list , method = com.dt.platform.ops.controller.AutoBatchController.queryPagedList
[POST] /service-eam/eam-asset-alarm/query-maintenance-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryMaintenanceExpirationData
[POST] /service-eam/eam-purchase-apply/query-paged-list , method = com.dt.platform.eam.controller.PurchaseApplyController.queryPagedList
[POST] /service-common/sys-code-allocation/query-paged-list , method = com.dt.platform.common.controller.CodeAllocationController.queryPagedList
[POST] /service-eam/eam-asset-alarm/query-asset-serial-number-unique , method = com.dt.platform.eam.controller.AssetAlarmController.queryAssetSerialNumberUnique
[ALL] /service-common/sys-code-allocation/export-excel , method = com.dt.platform.common.controller.CodeAllocationController.exportExcel
[ALL] /service-eam/eam-purchase-apply/export-excel , method = com.dt.platform.eam.controller.PurchaseApplyController.exportExcel
[POST] /service-ops/ops-auto-batch-node/update , method = com.dt.platform.ops.controller.AutoBatchNodeController.update
[ALL] /service-common/sys-code-allocation/export-excel-template , method = com.dt.platform.common.controller.CodeAllocationController.exportExcelTemplate
[ALL] /service-common/sys-code-allocation/import-excel , method = com.dt.platform.common.controller.CodeAllocationController.importExcel
[POST] /service-system/sys-invoke-log/save , method = org.github.foxnic.web.system.controller.InvokeLogController.save
[ALL] /service-eam/eam-purchase-apply/export-excel-template , method = com.dt.platform.eam.controller.PurchaseApplyController.exportExcelTemplate
[POST] /service-ops/ops-auto-batch-node/save , method = com.dt.platform.ops.controller.AutoBatchNodeController.save
[POST] /service-eam/eam-asset-allocation/update , method = com.dt.platform.eam.controller.AssetAllocationController.update
[POST] /service-ops/ops-monitor-node/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeController.queryPagedList
[ALL] /service-eam/eam-purchase-apply/import-excel , method = com.dt.platform.eam.controller.PurchaseApplyController.importExcel
[POST] /service-ops/ops-auto-batch-node/insert , method = com.dt.platform.ops.controller.AutoBatchNodeController.insert
[POST] /service-ops/ops-voucher-history/delete-by-ids , method = com.dt.platform.ops.controller.VoucherHistoryController.deleteByIds
[POST] /service-system/sys-invoke-log/insert , method = org.github.foxnic.web.system.controller.InvokeLogController.insert
[POST] /service-ops/ops-auto-batch-node/get-by-id , method = com.dt.platform.ops.controller.AutoBatchNodeController.getById
[POST] /service-ops/ops-monitor-node-db/update , method = com.dt.platform.ops.controller.MonitorNodeDbController.update
[POST] /service-ops/ops-voucher-history/query-paged-list , method = com.dt.platform.ops.controller.VoucherHistoryController.queryPagedList
[POST] /service-system/sys-invoke-log/get-by-id , method = org.github.foxnic.web.system.controller.InvokeLogController.getById
[POST] /service-eam/eam-asset-allocation/save , method = com.dt.platform.eam.controller.AssetAllocationController.save
[POST] /service-ops/ops-auto-batch-node/get-by-ids , method = com.dt.platform.ops.controller.AutoBatchNodeController.getByIds
[ALL] /service-ops/ops-voucher-history/export-excel , method = com.dt.platform.ops.controller.VoucherHistoryController.exportExcel
[POST] /service-system/sys-invoke-log/get-by-ids , method = org.github.foxnic.web.system.controller.InvokeLogController.getByIds
[ALL] /service-ops/ops-voucher-history/export-excel-template , method = com.dt.platform.ops.controller.VoucherHistoryController.exportExcelTemplate
[POST] /service-ops/ops-monitor-node-db/save , method = com.dt.platform.ops.controller.MonitorNodeDbController.save
[ALL] /service-ops/ops-voucher-history/import-excel , method = com.dt.platform.ops.controller.VoucherHistoryController.importExcel
[POST] /service-ops/ops-auto-batch-node/query-list , method = com.dt.platform.ops.controller.AutoBatchNodeController.queryList
[POST] /service-eam/eam-asset-allocation/insert , method = com.dt.platform.eam.controller.AssetAllocationController.insert
[POST] /service-ops/ops-auto-batch-node/delete , method = com.dt.platform.ops.controller.AutoBatchNodeController.deleteById
[POST] /service-eam/eam-asset-allocation/get-by-id , method = com.dt.platform.eam.controller.AssetAllocationController.getById
[POST] /service-ops/ops-auto-batch-node/delete-by-ids , method = com.dt.platform.ops.controller.AutoBatchNodeController.deleteByIds
[POST] /service-ops/ops-voucher-owner/update , method = com.dt.platform.ops.controller.VoucherOwnerController.update
[POST] /service-system/sys-invoke-log/query-list , method = org.github.foxnic.web.system.controller.InvokeLogController.queryList
[POST] /service-eam/eam-asset-allocation/get-by-ids , method = com.dt.platform.eam.controller.AssetAllocationController.getByIds
[POST] /service-ops/ops-auto-batch-node/query-paged-list , method = com.dt.platform.ops.controller.AutoBatchNodeController.queryPagedList
[POST] /service-system/sys-invoke-log/delete , method = org.github.foxnic.web.system.controller.InvokeLogController.deleteById
[ALL] /service-eam/eam-asset-allocation/confirm-operation , method = com.dt.platform.eam.controller.AssetAllocationController.confirmOperation
[POST] /service-eam/eam-purchase-check/update , method = com.dt.platform.eam.controller.PurchaseCheckController.update
[POST] /service-wms/wms-storelocation/delete , method = com.dt.platform.wms.controller.StorelocationController.deleteById
[POST] /service-ops/ops-voucher-owner/save , method = com.dt.platform.ops.controller.VoucherOwnerController.save
[POST] /service-system/sys-invoke-log/delete-by-ids , method = org.github.foxnic.web.system.controller.InvokeLogController.deleteByIds
[POST] /service-wms/wms-storelocation/delete-by-ids , method = com.dt.platform.wms.controller.StorelocationController.deleteByIds
[POST] /service-ops/ops-voucher-owner/insert , method = com.dt.platform.ops.controller.VoucherOwnerController.insert
[POST] /service-ops/ops-voucher-owner/get-by-id , method = com.dt.platform.ops.controller.VoucherOwnerController.getById
[POST] /service-eam/eam-asset-allocation/bpm-callback , method = com.dt.platform.eam.controller.AssetAllocationController.onProcessCallback
[POST] /service-ops/ops-voucher-owner/get-by-ids , method = com.dt.platform.ops.controller.VoucherOwnerController.getByIds
[POST] /service-wms/wms-storelocation/query-paged-list , method = com.dt.platform.wms.controller.StorelocationController.queryPagedList
[POST] /service-system/sys-invoke-log/query-paged-list , method = org.github.foxnic.web.system.controller.InvokeLogController.queryPagedList
[POST] /service-system/unit-test/pcm/get-data , method = org.github.foxnic.web.system.test.PCMTestController.getData
[POST] /service-ops/ops-voucher-owner/query-list , method = com.dt.platform.ops.controller.VoucherOwnerController.queryList
[POST] /service-system/unit-test/pcm/catalog-nodes , method = org.github.foxnic.web.system.test.PCMTestController.catalogNodesTree
[POST] /service-ops/ops-voucher-owner/delete , method = com.dt.platform.ops.controller.VoucherOwnerController.deleteById
[POST] /service-system/unit-test/pcm/catalog-nodes-flatten , method = org.github.foxnic.web.system.test.PCMTestController.catalogNodesFlatten
[POST] /service-system/unit-test/pcm/catalog-fields , method = org.github.foxnic.web.system.test.PCMTestController.catalogFields
[POST] /service-ops/ops-voucher-owner/delete-by-ids , method = com.dt.platform.ops.controller.VoucherOwnerController.deleteByIds
[POST] /service-wms/wms-supplier/update , method = com.dt.platform.wms.controller.SupplierController.update
[POST] /service-system/unit-test/pcm/single-save , method = org.github.foxnic.web.system.test.PCMTestController.singleSave
[POST] /service-eam/eam-purchase-check/save , method = com.dt.platform.eam.controller.PurchaseCheckController.save
[POST] /service-system/unit-test/pcm/batch-save , method = org.github.foxnic.web.system.test.PCMTestController.batchSave
[POST] /service-ops/ops-auto-group/update , method = com.dt.platform.ops.controller.AutoGroupController.update
[POST] /service-system/unit-test/pcm/delete-data , method = org.github.foxnic.web.system.test.PCMTestController.deleteData
[POST] /service-ops/ops-voucher-owner/query-paged-list , method = com.dt.platform.ops.controller.VoucherOwnerController.queryPagedList
[ALL] /service-ops/ops-voucher-owner/export-excel , method = com.dt.platform.ops.controller.VoucherOwnerController.exportExcel
[POST] /service-wms/wms-supplier/save , method = com.dt.platform.wms.controller.SupplierController.save
[ALL] /service-ops/ops-voucher-owner/export-excel-template , method = com.dt.platform.ops.controller.VoucherOwnerController.exportExcelTemplate
[ALL] /service-ops/ops-voucher-owner/import-excel , method = com.dt.platform.ops.controller.VoucherOwnerController.importExcel
[POST] /service-ops/ops-auto-group/save , method = com.dt.platform.ops.controller.AutoGroupController.save
[POST] /service-system/sys-config/update , method = org.github.foxnic.web.system.controller.ConfigController.update
[POST] /service-eam/eam-purchase-check/insert , method = com.dt.platform.eam.controller.PurchaseCheckController.insert
[POST] /service-ops/ops-voucher-priv/update , method = com.dt.platform.ops.controller.VoucherPrivController.update
[POST] /service-eam/eam-purchase-check/get-by-id , method = com.dt.platform.eam.controller.PurchaseCheckController.getById
[POST] /service-wms/wms-supplier/insert , method = com.dt.platform.wms.controller.SupplierController.insert
[POST] /service-ops/ops-auto-group/insert , method = com.dt.platform.ops.controller.AutoGroupController.insert
[POST] /service-ops/ops-monitor-node-db/insert , method = com.dt.platform.ops.controller.MonitorNodeDbController.insert
[POST] /service-ops/ops-voucher-priv/save , method = com.dt.platform.ops.controller.VoucherPrivController.save
[POST] /service-wms/wms-supplier/get-by-id , method = com.dt.platform.wms.controller.SupplierController.getById
[POST] /service-ops/ops-auto-group/get-by-id , method = com.dt.platform.ops.controller.AutoGroupController.getById
[POST] /service-ops/ops-voucher-priv/insert , method = com.dt.platform.ops.controller.VoucherPrivController.insert
[POST] /service-ops/ops-auto-group/get-by-ids , method = com.dt.platform.ops.controller.AutoGroupController.getByIds
[POST] /service-ops/ops-voucher-priv/get-by-id , method = com.dt.platform.ops.controller.VoucherPrivController.getById
[POST] /service-wms/wms-supplier/get-by-ids , method = com.dt.platform.wms.controller.SupplierController.getByIds
[POST] /service-ops/ops-auto-group/query-list , method = com.dt.platform.ops.controller.AutoGroupController.queryList
[POST] /service-eam/eam-asset-repair/update , method = com.dt.platform.eam.controller.AssetRepairController.update
[POST] /service-ops/ops-voucher-priv/get-by-ids , method = com.dt.platform.ops.controller.VoucherPrivController.getByIds
[POST] /service-ops/ops-auto-group/delete , method = com.dt.platform.ops.controller.AutoGroupController.deleteById
[POST] /service-ops/ops-auto-group/delete-by-ids , method = com.dt.platform.ops.controller.AutoGroupController.deleteByIds
[POST] /service-wms/wms-supplier/query-list , method = com.dt.platform.wms.controller.SupplierController.queryList
[POST] /service-ops/ops-monitor-node-db/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeDbController.getById
[POST] /service-ops/ops-auto-group/query-paged-list , method = com.dt.platform.ops.controller.AutoGroupController.queryPagedList
[POST] /service-ops/ops-voucher-priv/query-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryList
[POST] /service-eam/eam-asset-repair/save , method = com.dt.platform.eam.controller.AssetRepairController.save
[POST] /service-ops/ops-monitor-node-db/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeDbController.getByIds
[POST] /service-ops/ops-voucher-priv/delete , method = com.dt.platform.ops.controller.VoucherPrivController.deleteById
[POST] /service-ops/ops-voucher-priv/delete-by-ids , method = com.dt.platform.ops.controller.VoucherPrivController.deleteByIds
[POST] /service-ops/ops-auto-node/update , method = com.dt.platform.ops.controller.AutoNodeController.update
[POST] /service-ops/ops-monitor-node-db/query-list , method = com.dt.platform.ops.controller.MonitorNodeDbController.queryList
[POST] /service-ops/ops-voucher-priv/query-paged-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryPagedList
[POST] /service-ops/ops-monitor-node-db/delete , method = com.dt.platform.ops.controller.MonitorNodeDbController.deleteById
[POST] /service-eam/eam-asset-repair/insert , method = com.dt.platform.eam.controller.AssetRepairController.insert
[ALL] /service-ops/ops-voucher-priv/export-excel , method = com.dt.platform.ops.controller.VoucherPrivController.exportExcel
[ALL] /service-ops/ops-voucher-priv/export-excel-template , method = com.dt.platform.ops.controller.VoucherPrivController.exportExcelTemplate
[POST] /service-ops/ops-auto-node/save , method = com.dt.platform.ops.controller.AutoNodeController.save
[POST] /service-ops/ops-monitor-node-db/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeDbController.deleteByIds
[POST] /service-eam/eam-asset-repair/get-by-id , method = com.dt.platform.eam.controller.AssetRepairController.getById
[ALL] /service-ops/ops-voucher-priv/import-excel , method = com.dt.platform.ops.controller.VoucherPrivController.importExcel
[POST] /service-system/sys-config/save , method = org.github.foxnic.web.system.controller.ConfigController.save
[POST] /service-eam/eam-asset-repair/get-by-ids , method = com.dt.platform.eam.controller.AssetRepairController.getByIds
[POST] /service-ops/ops-voucher-priv/query-type-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryVoucherTypeList
[POST] /service-ops/ops-auto-node/insert , method = com.dt.platform.ops.controller.AutoNodeController.insert
[ALL] /business/ops/auto_action_file/auto_action_file_form.html , method = com.dt.platform.ops.page.AutoActionFilePageController.form
[ALL] /service-eam/eam-asset-repair/confirm-operation , method = com.dt.platform.eam.controller.AssetRepairController.confirmOperation
[ALL] /business/ops/auto_action_file/auto_action_file_list.html , method = com.dt.platform.ops.page.AutoActionFilePageController.list
[POST] /service-ops/ops-auto-node/get-by-id , method = com.dt.platform.ops.controller.AutoNodeController.getById
[POST] /service-eam/eam-asset-repair/bpm-callback , method = com.dt.platform.eam.controller.AssetRepairController.onProcessCallback
[ALL] /business/ops/auto_action/auto_action_form.html , method = com.dt.platform.ops.page.AutoActionPageController.form
[ALL] /business/ops/auto_action/auto_action_list.html , method = com.dt.platform.ops.page.AutoActionPageController.list
[POST] /service-ops/ops-auto-node/get-by-ids , method = com.dt.platform.ops.controller.AutoNodeController.getByIds
[ALL] /business/ops/auto_action_s_file/auto_action_s_file_form.html , method = com.dt.platform.ops.page.AutoActionSFilePageController.form
[POST] /service-system/sys-config/insert , method = org.github.foxnic.web.system.controller.ConfigController.insert
[ALL] /business/ops/auto_action_s_file/auto_action_s_file_list.html , method = com.dt.platform.ops.page.AutoActionSFilePageController.list
[ALL] /business/ops/auto_action_s_script/auto_action_s_script_form.html , method = com.dt.platform.ops.page.AutoActionSScriptPageController.form
[POST] /service-system/sys-config/search , method = org.github.foxnic.web.system.controller.ConfigController.search
[ALL] /business/ops/auto_action_s_script/auto_action_s_script_list.html , method = com.dt.platform.ops.page.AutoActionSScriptPageController.list
[POST] /service-eam/eam-asset-repair/query-list , method = com.dt.platform.eam.controller.AssetRepairController.queryList
[POST] /service-ops/ops-auto-node/query-list , method = com.dt.platform.ops.controller.AutoNodeController.queryList
[ALL] /business/ops/auto_action_script/auto_action_script_form.html , method = com.dt.platform.ops.page.AutoActionScriptPageController.form
[POST] /service-system/sys-config/get-by-id , method = org.github.foxnic.web.system.controller.ConfigController.getById
[ALL] /business/ops/auto_action_script/auto_action_script_list.html , method = com.dt.platform.ops.page.AutoActionScriptPageController.list
[POST] /service-eam/eam-asset-repair/delete , method = com.dt.platform.eam.controller.AssetRepairController.deleteById
[POST] /service-ops/ops-auto-node/delete , method = com.dt.platform.ops.controller.AutoNodeController.deleteById
[ALL] /business/ops/auto_batch_node/auto_batch_node_form.html , method = com.dt.platform.ops.page.AutoBatchNodePageController.form
[POST] /service-system/sys-config/get-by-ids , method = org.github.foxnic.web.system.controller.ConfigController.getByIds
[ALL] /business/ops/auto_batch_node/auto_batch_node_list.html , method = com.dt.platform.ops.page.AutoBatchNodePageController.list
[POST] /service-ops/ops-auto-node/delete-by-ids , method = com.dt.platform.ops.controller.AutoNodeController.deleteByIds
[POST] /service-eam/eam-asset-repair/delete-by-ids , method = com.dt.platform.eam.controller.AssetRepairController.deleteByIds
[POST] /service-eam/eam-purchase-check/get-by-ids , method = com.dt.platform.eam.controller.PurchaseCheckController.getByIds
[ALL] /business/ops/auto_batch/auto_batch_form.html , method = com.dt.platform.ops.page.AutoBatchPageController.form
[POST] /service-system/sys-config/get-by-code , method = org.github.foxnic.web.system.controller.ConfigController.getByCode
[ALL] /business/ops/auto_batch/auto_batch_list.html , method = com.dt.platform.ops.page.AutoBatchPageController.list
[ALL] /business/ops/auto_group/auto_group_form.html , method = com.dt.platform.ops.page.AutoGroupPageController.form
[ALL] /business/ops/auto_group/auto_group_list.html , method = com.dt.platform.ops.page.AutoGroupPageController.list
[POST] /service-ops/ops-auto-node/query-paged-list , method = com.dt.platform.ops.controller.AutoNodeController.queryPagedList
[ALL] /business/ops/auto_node/auto_node_form.html , method = com.dt.platform.ops.page.AutoNodePageController.form
[POST] /service-system/sys-config/get-by-codes , method = org.github.foxnic.web.system.controller.ConfigController.getByCodes
[POST] /service-eam/eam-asset-repair/query-paged-list , method = com.dt.platform.eam.controller.AssetRepairController.queryPagedList
[ALL] /business/ops/auto_node/auto_node_list.html , method = com.dt.platform.ops.page.AutoNodePageController.list
[POST] /service-ops/ops-auto-node/save-selected-node , method = com.dt.platform.ops.controller.AutoNodeController.saveSelectedNode
[ALL] /service-eam/eam-asset-repair/export-excel , method = com.dt.platform.eam.controller.AssetRepairController.exportExcel
[POST] /service-eam/eam-purchase-check/query-list , method = com.dt.platform.eam.controller.PurchaseCheckController.queryList
[POST] /service-system/sys-config/query-nodes , method = org.github.foxnic.web.system.controller.ConfigController.queryNodes
[ALL] /business/ops/auto_node/auto_node_selected_list.html , method = com.dt.platform.ops.page.AutoNodePageController.selectedList
[POST] /service-ops/ops-auto-node/remove-selected-node , method = com.dt.platform.ops.controller.AutoNodeController.saveSelectedNode
[POST] /service-eam/eam-purchase-check/delete , method = com.dt.platform.eam.controller.PurchaseCheckController.deleteById
[ALL] /business/ops/auto_node/auto_node_select_list.html , method = com.dt.platform.ops.page.AutoNodePageController.selectList
[POST] /service-eam/eam-asset-allocation/query-list , method = com.dt.platform.eam.controller.AssetAllocationController.queryList
[ALL] /business/ops/auto_node_select/auto_node_select_form.html , method = com.dt.platform.ops.page.AutoNodeSelectPageController.form
[POST] /service-system/sys-config/query-list , method = org.github.foxnic.web.system.controller.ConfigController.queryList
[ALL] /business/ops/auto_node_select/auto_node_select_list.html , method = com.dt.platform.ops.page.AutoNodeSelectPageController.list
[POST] /service-eam/eam-asset-allocation/delete , method = com.dt.platform.eam.controller.AssetAllocationController.deleteById
[ALL] /business/ops/auto_task_log/auto_task_log_form.html , method = com.dt.platform.ops.page.AutoTaskLogPageController.form
[ALL] /business/ops/auto_task_log/auto_task_log_list.html , method = com.dt.platform.ops.page.AutoTaskLogPageController.list
[POST] /service-eam/eam-asset-allocation/delete-by-ids , method = com.dt.platform.eam.controller.AssetAllocationController.deleteByIds
[ALL] /business/ops/auto_task_m_log/auto_task_m_log_form.html , method = com.dt.platform.ops.page.AutoTaskMLogPageController.form
[ALL] /business/ops/auto_task_m_log/auto_task_m_log_list.html , method = com.dt.platform.ops.page.AutoTaskMLogPageController.list
[POST] /service-system/sys-config/delete , method = org.github.foxnic.web.system.controller.ConfigController.deleteById
[ALL] /service-eam/eam-asset-repair/export-excel-template , method = com.dt.platform.eam.controller.AssetRepairController.exportExcelTemplate
[ALL] /business/ops/auto_task_node/auto_task_node_form.html , method = com.dt.platform.ops.page.AutoTaskNodePageController.form
[POST] /service-system/sys-config/delete-by-ids , method = org.github.foxnic.web.system.controller.ConfigController.deleteByIds
[ALL] /business/ops/auto_task_node/auto_task_node_list.html , method = com.dt.platform.ops.page.AutoTaskNodePageController.list
[ALL] /service-eam/eam-asset-repair/import-excel , method = com.dt.platform.eam.controller.AssetRepairController.importExcel
[POST] /service-ops/ops-monitor-node-db/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeDbController.queryPagedList
[ALL] /business/ops/auto_task/auto_task_form.html , method = com.dt.platform.ops.page.AutoTaskPageController.form
[POST] /service-eam/eam-asset-allocation/query-paged-list , method = com.dt.platform.eam.controller.AssetAllocationController.queryPagedList
[ALL] /service-ops/ops-monitor-node-db/export-excel , method = com.dt.platform.ops.controller.MonitorNodeDbController.exportExcel
[ALL] /service-eam/eam-asset-repair/finish-repair , method = com.dt.platform.eam.controller.AssetRepairController.finishRepair
[ALL] /service-eam/eam-asset-allocation/export-excel , method = com.dt.platform.eam.controller.AssetAllocationController.exportExcel
[ALL] /service-ops/ops-monitor-node-db/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeDbController.exportExcelTemplate
[ALL] /service-eam/eam-asset-allocation/export-excel-template , method = com.dt.platform.eam.controller.AssetAllocationController.exportExcelTemplate
[POST] /service-system/sys-config/query-paged-list , method = org.github.foxnic.web.system.controller.ConfigController.queryPagedList
[ALL] /business/ops/auto_task/auto_task_list.html , method = com.dt.platform.ops.page.AutoTaskPageController.list
[ALL] /service-eam/eam-asset-allocation/import-excel , method = com.dt.platform.eam.controller.AssetAllocationController.importExcel
[ALL] /service-ops/ops-monitor-node-db/import-excel , method = com.dt.platform.ops.controller.MonitorNodeDbController.importExcel
[ALL] /business/ops/auto_voucher/auto_voucher_form.html , method = com.dt.platform.ops.page.AutoVoucherPageController.form
[ALL] /business/ops/auto_voucher/auto_voucher_list.html , method = com.dt.platform.ops.page.AutoVoucherPageController.list
[POST] /service-system/sys-profile/update , method = org.github.foxnic.web.system.controller.ProfileController.update
[ALL] /business/ops/certificate_item/certificate_item_form.html , method = com.dt.platform.ops.page.CertificateItemPageController.form
[POST] /service-ops/ops-monitor-node-group/update , method = com.dt.platform.ops.controller.MonitorNodeGroupController.update
[ALL] /business/ops/certificate_item/certificate_item_list.html , method = com.dt.platform.ops.page.CertificateItemPageController.list
[POST] /service-system/sys-profile/save , method = org.github.foxnic.web.system.controller.ProfileController.save
[ALL] /business/ops/certificate/certificate_form.html , method = com.dt.platform.ops.page.CertificatePageController.form
[POST] /service-ops/ops-monitor-node-group/save , method = com.dt.platform.ops.controller.MonitorNodeGroupController.save
[ALL] /business/ops/certificate/certificate_list.html , method = com.dt.platform.ops.page.CertificatePageController.list
[POST] /service-eam/eam-asset-attribute/update , method = com.dt.platform.eam.controller.AssetAttributeController.update
[POST] /service-system/sys-profile/insert , method = org.github.foxnic.web.system.controller.ProfileController.insert
[ALL] /business/ops/certificate_position/certificate_position_form.html , method = com.dt.platform.ops.page.CertificatePositionPageController.form
[ALL] /business/ops/certificate_position/certificate_position_list.html , method = com.dt.platform.ops.page.CertificatePositionPageController.list
[POST] /service-ops/ops-monitor-node-group/insert , method = com.dt.platform.ops.controller.MonitorNodeGroupController.insert
[POST] /service-system/sys-profile/get-by-id , method = org.github.foxnic.web.system.controller.ProfileController.getById
[ALL] /business/ops/certificate_type/certificate_type_form.html , method = com.dt.platform.ops.page.CertificateTypePageController.form
[ALL] /business/ops/certificate_type/certificate_type_list.html , method = com.dt.platform.ops.page.CertificateTypePageController.list
[POST] /service-ops/ops-monitor-node-group/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeGroupController.getById
[POST] /service-wms/wms-supplier/delete , method = com.dt.platform.wms.controller.SupplierController.deleteById
[POST] /service-eam/eam-asset-attribute/save , method = com.dt.platform.eam.controller.AssetAttributeController.save
[ALL] /business/ops/ciphertext_box_data/ciphertext_box_data_form.html , method = com.dt.platform.ops.page.CiphertextBoxDataPageController.form
[POST] /service-system/sys-profile/get-by-ids , method = org.github.foxnic.web.system.controller.ProfileController.getByIds
[ALL] /business/ops/ciphertext_box_data/ciphertext_box_data_list.html , method = com.dt.platform.ops.page.CiphertextBoxDataPageController.list
[POST] /service-ops/ops-monitor-node-group/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeGroupController.getByIds
[POST] /service-wms/wms-supplier/delete-by-ids , method = com.dt.platform.wms.controller.SupplierController.deleteByIds
[ALL] /business/ops/ciphertext_box/ciphertext_box_form.html , method = com.dt.platform.ops.page.CiphertextBoxPageController.form
[ALL] /business/ops/ciphertext_box/ciphertext_box_list.html , method = com.dt.platform.ops.page.CiphertextBoxPageController.list
[POST] /service-ops/ops-monitor-node-group/query-list , method = com.dt.platform.ops.controller.MonitorNodeGroupController.queryList
[ALL] /business/ops/ciphertext_conf/ciphertext_conf_form.html , method = com.dt.platform.ops.page.CiphertextConfPageController.form
[POST] /service-system/sys-profile/query-list , method = org.github.foxnic.web.system.controller.ProfileController.queryList
[POST] /service-eam/eam-asset-attribute/insert , method = com.dt.platform.eam.controller.AssetAttributeController.insert
[ALL] /business/ops/ciphertext_conf/ciphertext_conf_list.html , method = com.dt.platform.ops.page.CiphertextConfPageController.list
[POST] /service-ops/ops-monitor-node-group/delete , method = com.dt.platform.ops.controller.MonitorNodeGroupController.deleteById
[POST] /service-system/sys-profile/delete , method = org.github.foxnic.web.system.controller.ProfileController.deleteById
[ALL] /business/ops/ciphertext_history/ciphertext_history_form.html , method = com.dt.platform.ops.page.CiphertextHistoryPageController.form
[POST] /service-wms/wms-supplier/query-paged-list , method = com.dt.platform.wms.controller.SupplierController.queryPagedList
[POST] /service-eam/eam-asset-attribute/get-by-id , method = com.dt.platform.eam.controller.AssetAttributeController.getById
[POST] /service-ops/ops-monitor-node-group/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeGroupController.deleteByIds
[ALL] /business/ops/ciphertext_history/ciphertext_history_list.html , method = com.dt.platform.ops.page.CiphertextHistoryPageController.list
[POST] /service-system/sys-profile/delete-by-ids , method = org.github.foxnic.web.system.controller.ProfileController.deleteByIds
[POST] /service-eam/eam-asset-report/query-organization-data , method = com.dt.platform.eam.controller.AssetReportController.queryOrganizationData
[POST] /service-wms/wms-temperature-attribute/update , method = com.dt.platform.wms.controller.TemperatureAttributeController.update
[POST] /service-eam/eam-asset-attribute/get-by-ids , method = com.dt.platform.eam.controller.AssetAttributeController.getByIds
[ALL] /business/ops/cmdb_attribute_c/cmdb_attribute_c_form.html , method = com.dt.platform.ops.page.CmdbAttributeCPageController.form
[POST] /service-system/sys-profile/query-paged-list , method = org.github.foxnic.web.system.controller.ProfileController.queryPagedList
[ALL] /business/ops/cmdb_attribute_c/cmdb_attribute_c_list.html , method = com.dt.platform.ops.page.CmdbAttributeCPageController.list
[POST] /service-eam/eam-asset-attribute/query-attribute-owner-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryAttributeOwnerList
[POST] /service-system/unit-test/discrete-test-1 , method = org.github.foxnic.web.system.test.DiscreteTestController.test1
[ALL] /business/ops/cmdb_log/cmdb_log_form.html , method = com.dt.platform.ops.page.CmdbLogPageController.form
[POST] /service-wms/wms-temperature-attribute/save , method = com.dt.platform.wms.controller.TemperatureAttributeController.save
[ALL] /business/ops/cmdb_log/cmdb_log_list.html , method = com.dt.platform.ops.page.CmdbLogPageController.list
[ALL] /business/ops/cmdb_model/cmdb_model_form.html , method = com.dt.platform.ops.page.CmdbModelPageController.form
[POST] /service-eam/eam-asset-attribute/query-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryList
[POST] /service-wms/wms-temperature-attribute/insert , method = com.dt.platform.wms.controller.TemperatureAttributeController.insert
[ALL] /business/ops/cmdb_model/cmdb_model_list.html , method = com.dt.platform.ops.page.CmdbModelPageController.list
[POST] /service-system/sys-lang/update , method = org.github.foxnic.web.system.controller.LangController.update
[POST] /service-eam/eam-asset-report/query-own-company-data , method = com.dt.platform.eam.controller.AssetReportController.queryOwnCompanyData
[POST] /service-eam/eam-asset-attribute/delete , method = com.dt.platform.eam.controller.AssetAttributeController.deleteById
[POST] /service-wms/wms-temperature-attribute/get-by-id , method = com.dt.platform.wms.controller.TemperatureAttributeController.getById
[ALL] /business/ops/cmdb_model/cmdb_model_tree_list.html , method = com.dt.platform.ops.page.CmdbModelPageController.treeList
[POST] /service-eam/eam-asset-report/query-category-status-data , method = com.dt.platform.eam.controller.AssetReportController.queryCategoryStatusData
[POST] /service-eam/eam-asset-attribute/delete-by-ids , method = com.dt.platform.eam.controller.AssetAttributeController.deleteByIds
[ALL] /business/ops/cmdb_model_vh/cmdb_model_vh_form.html , method = com.dt.platform.ops.page.CmdbModelVHPageController.form
[POST] /service-wms/wms-temperature-attribute/get-by-ids , method = com.dt.platform.wms.controller.TemperatureAttributeController.getByIds
[POST] /service-eam/eam-asset-report/query-aux-category-data , method = com.dt.platform.eam.controller.AssetReportController.queryCategoryData
[ALL] /business/ops/cmdb_model_vh/cmdb_model_vh_list.html , method = com.dt.platform.ops.page.CmdbModelVHPageController.list
[POST] /service-eam/eam-asset-report/query-category-data , method = com.dt.platform.eam.controller.AssetReportController.queryCategoryData
[ALL] /business/ops/cmdb_model_v/cmdb_model_v_form.html , method = com.dt.platform.ops.page.CmdbModelVPageController.form
[POST] /service-system/sys-lang/save , method = org.github.foxnic.web.system.controller.LangController.save
[POST] /service-eam/eam-asset-report/dashboard , method = com.dt.platform.eam.controller.AssetReportController.dashBoard
[POST] /service-wms/wms-temperature-attribute/query-list , method = com.dt.platform.wms.controller.TemperatureAttributeController.queryList
[ALL] /business/ops/cmdb_model_v/cmdb_model_v_list.html , method = com.dt.platform.ops.page.CmdbModelVPageController.list
[POST] /service-eam/eam-asset-report/query-asset-data-by-label , method = com.dt.platform.eam.controller.AssetReportController.dashBoardMro
[ALL] /business/ops/cmdb_model_v/cmdb_model_value_list.html , method = com.dt.platform.ops.page.CmdbModelVPageController.valueList
[POST] /service-eam/eam-asset-attribute/query-paged-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryPagedList
[POST] /service-wms/wms-temperature-attribute/delete , method = com.dt.platform.wms.controller.TemperatureAttributeController.deleteById
[POST] /service-eam/eam-asset-report/dashboard-mro , method = com.dt.platform.eam.controller.AssetReportController.dashBoardMro
[ALL] /business/ops/cmdb_obj_attribute/cmdb_obj_attribute_form.html , method = com.dt.platform.ops.page.CmdbObjAttributePageController.form
[POST] /service-eam/eam-asset-report/asset-oper-data-report , method = com.dt.platform.eam.controller.AssetReportController.assetOperDataReport
[ALL] /service-eam/eam-asset-attribute/export-excel , method = com.dt.platform.eam.controller.AssetAttributeController.exportExcel
[POST] /service-wms/wms-temperature-attribute/delete-by-ids , method = com.dt.platform.wms.controller.TemperatureAttributeController.deleteByIds
[POST] /service-eam/eam-asset-report/query-inspect-data , method = com.dt.platform.eam.controller.AssetReportController.query_inspect_data
[ALL] /service-eam/eam-asset-attribute/export-excel-template , method = com.dt.platform.eam.controller.AssetAttributeController.exportExcelTemplate
[POST] /service-system/sys-lang/insert , method = org.github.foxnic.web.system.controller.LangController.insert
[POST] /service-eam/eam-asset-report/asset-for-leave-employee-report , method = com.dt.platform.eam.controller.AssetReportController.assetForLeaveEmployeeReport
[ALL] /service-eam/eam-asset-attribute/import-excel , method = com.dt.platform.eam.controller.AssetAttributeController.importExcel
[POST] /service-wms/wms-temperature-attribute/query-paged-list , method = com.dt.platform.wms.controller.TemperatureAttributeController.queryPagedList
[POST] /service-system/sys-lang/get-by-id , method = org.github.foxnic.web.system.controller.LangController.getById
[POST] /service-system/sys-lang/switch-language , method = org.github.foxnic.web.system.controller.LangController.switchLanguage
[POST] /service-ops/ops-auto-node/query-paged-list-by-select , method = com.dt.platform.ops.controller.AutoNodeController.queryPagedListBySelect
[POST] /service-system/sys-lang/query-list , method = org.github.foxnic.web.system.controller.LangController.queryList
[POST] /service-wms/wms-transport-addr/update , method = com.dt.platform.wms.controller.TransportAddrController.update
[POST] /service-eam/eam-asset-attribute-item/update , method = com.dt.platform.eam.controller.AssetAttributeItemController.update
[POST] /service-system/sys-lang/delete , method = org.github.foxnic.web.system.controller.LangController.deleteById
[POST] /service-eam/eam-asset-scrap/update , method = com.dt.platform.eam.controller.AssetScrapController.update
[POST] /service-wms/wms-transport-addr/save , method = com.dt.platform.wms.controller.TransportAddrController.save
[POST] /service-ops/ops-auto-node/query-paged-list-by-selected , method = com.dt.platform.ops.controller.AutoNodeController.queryPagedListBySelected
[POST] /service-wms/wms-transport-addr/insert , method = com.dt.platform.wms.controller.TransportAddrController.insert
[POST] /service-eam/eam-asset-attribute-item/save , method = com.dt.platform.eam.controller.AssetAttributeItemController.save
[POST] /service-ops/ops-auto-node-select/update , method = com.dt.platform.ops.controller.AutoNodeSelectController.update
[POST] /service-wms/wms-transport-addr/get-by-id , method = com.dt.platform.wms.controller.TransportAddrController.getById
[POST] /service-hr/hr-person-cert/query-list , method = com.dt.platform.hr.controller.PersonCertController.queryList
[POST] /service-eam/eam-purchase-check/delete-by-ids , method = com.dt.platform.eam.controller.PurchaseCheckController.deleteByIds
[POST] /service-hr/hr-person-cert/delete , method = com.dt.platform.hr.controller.PersonCertController.deleteById
[POST] /service-ops/ops-auto-node-select/save , method = com.dt.platform.ops.controller.AutoNodeSelectController.save
[POST] /service-eam/eam-asset-attribute-item/insert , method = com.dt.platform.eam.controller.AssetAttributeItemController.insert
[POST] /service-eam/eam-asset-attribute-item/get-by-id , method = com.dt.platform.eam.controller.AssetAttributeItemController.getById
[POST] /service-ops/ops-auto-node-select/insert , method = com.dt.platform.ops.controller.AutoNodeSelectController.insert
[POST] /service-hr/hr-person-cert/delete-by-ids , method = com.dt.platform.hr.controller.PersonCertController.deleteByIds
[ALL] /business/ops/cmdb_obj_attribute/cmdb_obj_attribute_list.html , method = com.dt.platform.ops.page.CmdbObjAttributePageController.list
[POST] /service-eam/eam-asset-attribute-item/get-by-ids , method = com.dt.platform.eam.controller.AssetAttributeItemController.getByIds
[POST] /service-ops/ops-auto-node-select/get-by-id , method = com.dt.platform.ops.controller.AutoNodeSelectController.getById
[POST] /service-hr/hr-person-cert/query-paged-list , method = com.dt.platform.hr.controller.PersonCertController.queryPagedList
[ALL] /business/ops/db_backup_info/db_backup_info_form.html , method = com.dt.platform.ops.page.DbBackupInfoPageController.form
[ALL] /business/ops/db_backup_info/db_backup_info_list.html , method = com.dt.platform.ops.page.DbBackupInfoPageController.list
[POST] /service-ops/ops-auto-node-select/get-by-ids , method = com.dt.platform.ops.controller.AutoNodeSelectController.getByIds
[ALL] /business/ops/db_backup_log/db_backup_log_form.html , method = com.dt.platform.ops.page.DbBackupLogPageController.form
[POST] /service-eam/eam-asset-attribute-item/query-form-column-by-module , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryFormColumnByModule
[POST] /service-ops/ops-monitor-node-group/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeGroupController.queryPagedList
[ALL] /business/ops/db_backup_log/db_backup_log_list.html , method = com.dt.platform.ops.page.DbBackupLogPageController.list
[POST] /service-ops/ops-auto-node-select/query-list , method = com.dt.platform.ops.controller.AutoNodeSelectController.queryList
[ALL] /business/ops/db_backup_record/db_backup_record_form.html , method = com.dt.platform.ops.page.DbBackupRecordPageController.form
[POST] /service-eam/eam-asset-attribute-item/query-list-column-by-module , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule
[ALL] /business/ops/db_backup_record/db_backup_record_list.html , method = com.dt.platform.ops.page.DbBackupRecordPageController.list
[POST] /service-ops/ops-auto-node-select/delete , method = com.dt.platform.ops.controller.AutoNodeSelectController.deleteById
[POST] /service-hr/hr-person-contract/update , method = com.dt.platform.hr.controller.PersonContractController.update
[ALL] /business/ops/db_data_loc/db_data_loc_form.html , method = com.dt.platform.ops.page.DbDataLocPageController.form
[ALL] /business/ops/db_data_loc/db_data_loc_list.html , method = com.dt.platform.ops.page.DbDataLocPageController.list
[POST] /service-ops/ops-auto-node-select/delete-by-ids , method = com.dt.platform.ops.controller.AutoNodeSelectController.deleteByIds
[POST] /service-eam/eam-asset-scrap/save , method = com.dt.platform.eam.controller.AssetScrapController.save
[POST] /service-eam/eam-asset-attribute-item/query-list , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryList
[ALL] /business/ops/db_env_info/db_env_info_form.html , method = com.dt.platform.ops.page.DbEnvInfoPageController.form
[ALL] /business/ops/db_env_info/db_env_info_list.html , method = com.dt.platform.ops.page.DbEnvInfoPageController.list
[POST] /service-ops/ops-auto-node-select/query-paged-list , method = com.dt.platform.ops.controller.AutoNodeSelectController.queryPagedList
[ALL] /business/ops/db_info/db_info_form.html , method = com.dt.platform.ops.page.DbInfoPageController.form
[ALL] /business/ops/db_info/db_info_list.html , method = com.dt.platform.ops.page.DbInfoPageController.list
[POST] /service-eam/eam-asset-attribute-item/delete , method = com.dt.platform.eam.controller.AssetAttributeItemController.deleteById
[POST] /service-hr/hr-person-contract/save , method = com.dt.platform.hr.controller.PersonContractController.save
[ALL] /business/ops/db_info/db_backup_detail_list.html , method = com.dt.platform.ops.page.DbInfoPageController.detailList
[POST] /service-ops/ops-monitor-node-host/update , method = com.dt.platform.ops.controller.MonitorNodeHostController.update
[POST] /service-eam/eam-asset-attribute-item/delete-by-ids , method = com.dt.platform.eam.controller.AssetAttributeItemController.deleteByIds
[ALL] /business/ops/db_info/db_info_report_list.html , method = com.dt.platform.ops.page.DbInfoPageController.reportList
[POST] /service-ops/ops-auto-task/update , method = com.dt.platform.ops.controller.AutoTaskController.update
[ALL] /business/ops/db_info/db_backup_report_list.html , method = com.dt.platform.ops.page.DbInfoPageController.backupList
[ALL] /business/ops/db_info/db_software_list.html , method = com.dt.platform.ops.page.DbInfoPageController.softwareList
[POST] /service-ops/ops-auto-task/execute , method = com.dt.platform.ops.controller.AutoTaskController.execute
[ALL] /business/ops/db_info/db_info_public_list.html , method = com.dt.platform.ops.page.DbInfoPageController.publicList
[ALL] /business/ops/db_instance/db_instance_form.html , method = com.dt.platform.ops.page.DbInstancePageController.form
[ALL] /business/ops/db_instance/db_instance_list.html , method = com.dt.platform.ops.page.DbInstancePageController.list
[POST] /service-eam/eam-asset-attribute-item/query-paged-list , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryPagedList
[POST] /service-hr/hr-person-contract/insert , method = com.dt.platform.hr.controller.PersonContractController.insert
[POST] /service-ops/ops-auto-task/save , method = com.dt.platform.ops.controller.AutoTaskController.save
[ALL] /business/ops/deploy_standard/deploy_standard_form.html , method = com.dt.platform.ops.page.DeployStandardPageController.form
[ALL] /service-eam/eam-asset-attribute-item/export-excel , method = com.dt.platform.eam.controller.AssetAttributeItemController.exportExcel
[ALL] /business/ops/deploy_standard/deploy_standard_list.html , method = com.dt.platform.ops.page.DeployStandardPageController.list
[ALL] /service-eam/eam-asset-attribute-item/export-excel-template , method = com.dt.platform.eam.controller.AssetAttributeItemController.exportExcelTemplate
[POST] /service-hr/hr-person-contract/get-by-id , method = com.dt.platform.hr.controller.PersonContractController.getById
[POST] /service-ops/ops-monitor-node-host/save , method = com.dt.platform.ops.controller.MonitorNodeHostController.save
[ALL] /business/ops/host_db/host_db_form.html , method = com.dt.platform.ops.page.HostDbPageController.form
[ALL] /service-eam/eam-asset-attribute-item/import-excel , method = com.dt.platform.eam.controller.AssetAttributeItemController.importExcel
[POST] /service-ops/ops-auto-task/insert , method = com.dt.platform.ops.controller.AutoTaskController.insert
[POST] /service-hr/hr-person-contract/get-by-ids , method = com.dt.platform.hr.controller.PersonContractController.getByIds
[ALL] /business/ops/host_db/host_db_list.html , method = com.dt.platform.ops.page.HostDbPageController.list
[ALL] /service-eam/eam-asset-bill/query-asset-register-bills , method = com.dt.platform.eam.controller.AssetBillController.queryAssetRegisterBills
[POST] /service-ops/ops-auto-task/get-by-id , method = com.dt.platform.ops.controller.AutoTaskController.getById
[ALL] /business/ops/host_ex_by_db/host_ex_by_db_form.html , method = com.dt.platform.ops.page.HostExByDbPageController.form
[ALL] /service-eam/eam-asset-bill/query-asset-transfer-bill , method = com.dt.platform.eam.controller.AssetBillController.queryTransferBill
[ALL] /business/ops/host_ex_by_db/host_ex_by_db_list.html , method = com.dt.platform.ops.page.HostExByDbPageController.list
[POST] /service-eam/eam-asset-scrap/insert , method = com.dt.platform.eam.controller.AssetScrapController.insert
[ALL] /service-eam/eam-asset-bill/query-asset-transfer-bills , method = com.dt.platform.eam.controller.AssetBillController.queryTransferBills
[ALL] /business/ops/host_ex_by_host/host_ex_by_host_form.html , method = com.dt.platform.ops.page.HostExByHostPageController.form
[POST] /service-ops/ops-auto-task/get-by-ids , method = com.dt.platform.ops.controller.AutoTaskController.getByIds
[ALL] /service-eam/eam-asset-bill/query-borrow-bills , method = com.dt.platform.eam.controller.AssetBillController.queryBorrowBills
[ALL] /business/ops/host_ex_by_host/host_ex_by_host_list.html , method = com.dt.platform.ops.page.HostExByHostPageController.list
[ALL] /service-eam/eam-asset-bill/query-borrow-bill , method = com.dt.platform.eam.controller.AssetBillController.queryBorrowBill
[POST] /service-hr/hr-person-contract/query-list , method = com.dt.platform.hr.controller.PersonContractController.queryList
[ALL] /business/ops/host_mid/host_mid_form.html , method = com.dt.platform.ops.page.HostMidPageController.form
[ALL] /service-eam/eam-asset-bill/query-asset-storage-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetStorageBill
[POST] /service-ops/ops-monitor-node-host/insert , method = com.dt.platform.ops.controller.MonitorNodeHostController.insert
[ALL] /business/ops/host_mid/host_mid_list.html , method = com.dt.platform.ops.page.HostMidPageController.list
[ALL] /service-eam/eam-asset-bill/query-allocation-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAllocationBill
[ALL] /business/ops/host_os/host_os_form.html , method = com.dt.platform.ops.page.HostOsPageController.form
[POST] /service-ops/ops-monitor-node-host/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeHostController.getById
[ALL] /service-eam/eam-asset-bill/query-allocation-bills , method = com.dt.platform.eam.controller.AssetBillController.queryAllocationBills
[POST] /service-hr/hr-person-contract/delete , method = com.dt.platform.hr.controller.PersonContractController.deleteById
[ALL] /business/ops/host_os/host_os_list.html , method = com.dt.platform.ops.page.HostOsPageController.list
[ALL] /service-eam/eam-asset-bill/query-collection-bill , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionBill
[POST] /service-ops/ops-monitor-node-host/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeHostController.getByIds
[ALL] /business/ops/host/host_form.html , method = com.dt.platform.ops.page.HostPageController.form
[ALL] /service-eam/eam-asset-bill/query-collection-bills , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionBills
[ALL] /business/ops/host/host_list.html , method = com.dt.platform.ops.page.HostPageController.list
[POST] /service-hr/hr-person-contract/delete-by-ids , method = com.dt.platform.hr.controller.PersonContractController.deleteByIds
[ALL] /service-eam/eam-asset-bill/query-purchase-apply-bill , method = com.dt.platform.eam.controller.AssetBillController.queryPurchaseApplyBill
[ALL] /business/ops/host/host_report_list.html , method = com.dt.platform.ops.page.HostPageController.reportList
[ALL] /service-eam/eam-asset-bill/query-repair-bill , method = com.dt.platform.eam.controller.AssetBillController.queryRepairBill
[ALL] /business/ops/host/host_public_list.html , method = com.dt.platform.ops.page.HostPageController.publicList
[ALL] /service-eam/eam-asset-bill/query-repair-order-bill , method = com.dt.platform.eam.controller.AssetBillController.queryRepairOrderBill
[ALL] /business/ops/host_position/host_position_form.html , method = com.dt.platform.ops.page.HostPositionPageController.form
[ALL] /service-eam/eam-asset-bill/query-repair-bills , method = com.dt.platform.eam.controller.AssetBillController.queryRepairBills
[ALL] /business/ops/host_position/host_position_list.html , method = com.dt.platform.ops.page.HostPositionPageController.list
[ALL] /service-eam/eam-asset-bill/query-scrap-bill , method = com.dt.platform.eam.controller.AssetBillController.queryScrapBill
[ALL] /business/ops/information_system/information_system_form.html , method = com.dt.platform.ops.page.InformationSystemPageController.form
[ALL] /service-eam/eam-asset-bill/query-scrap-bills , method = com.dt.platform.eam.controller.AssetBillController.queryScrapBills
[ALL] /business/ops/information_system/information_system_list.html , method = com.dt.platform.ops.page.InformationSystemPageController.list
[ALL] /service-eam/eam-asset-bill/query-asset-card , method = com.dt.platform.eam.controller.AssetBillController.queryAssetCard
[ALL] /business/ops/information_system/information_system_public_list.html , method = com.dt.platform.ops.page.InformationSystemPageController.publicList
[ALL] /service-eam/eam-asset-bill/query-asset-cards , method = com.dt.platform.eam.controller.AssetBillController.queryAssetCards
[POST] /service-eam/eam-purchase-check/query-paged-list , method = com.dt.platform.eam.controller.PurchaseCheckController.queryPagedList
[ALL] /business/ops/ip_address_range/ip_address_range_form.html , method = com.dt.platform.ops.page.IpAddressRangePageController.form
[ALL] /service-eam/eam-asset-bill/query-asset-label , method = com.dt.platform.eam.controller.AssetBillController.queryAssetLabel
[POST] /service-ops/ops-monitor-node-host/query-list , method = com.dt.platform.ops.controller.MonitorNodeHostController.queryList
[ALL] /service-eam/eam-asset-bill/query-asset-labels , method = com.dt.platform.eam.controller.AssetBillController.queryAssetLabels
[POST] /service-hr/hr-person-contract/query-paged-list , method = com.dt.platform.hr.controller.PersonContractController.queryPagedList
[ALL] /service-eam/eam-purchase-check/export-excel , method = com.dt.platform.eam.controller.PurchaseCheckController.exportExcel
[POST] /service-ops/ops-monitor-node-host/delete , method = com.dt.platform.ops.controller.MonitorNodeHostController.deleteById
[ALL] /service-eam/eam-asset-bill/query-asset-inventory-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetInventoryBill
[ALL] /service-eam/eam-purchase-check/export-excel-template , method = com.dt.platform.eam.controller.PurchaseCheckController.exportExcelTemplate
[ALL] /service-eam/eam-asset-bill/query-borrow-return-bill , method = com.dt.platform.eam.controller.AssetBillController.queryBorrowReturnBill
[POST] /service-ops/ops-monitor-node-host/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeHostController.deleteByIds
[ALL] /service-eam/eam-purchase-check/import-excel , method = com.dt.platform.eam.controller.PurchaseCheckController.importExcel
[ALL] /service-eam/eam-asset-bill/query-asset-software-insert-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetSoftwareInsertBill
[ALL] /service-eam/eam-asset-bill/query-asset-software-distribute-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetSoftwareDistributeBill
[POST] /service-wms/wms-transport-addr/get-by-ids , method = com.dt.platform.wms.controller.TransportAddrController.getByIds
[ALL] /service-eam/eam-asset-bill/query-asset-software-change-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetSoftwareChangeBill
[ALL] /service-eam/eam-asset-bill/query-asset-software-maintenance-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetSoftwareMaintenanceBill
[ALL] /service-eam/eam-asset-bill/query-collection-return-bill , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionReturnBill
[POST] /service-eam/eam-purchase-order/update , method = com.dt.platform.eam.controller.PurchaseOrderController.update
[ALL] /service-eam/eam-asset-bill/query-collection-return-bills , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionReturnBills
[ALL] /service-eam/eam-asset-bill/query-asset-stock-goods-in-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetStockGoodsInBill
[POST] /service-wms/wms-transport-addr/query-list , method = com.dt.platform.wms.controller.TransportAddrController.queryList
[ALL] /service-eam/eam-asset-bill/query-asset-stock-goods-out-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetStockGoodsOutBill
[ALL] /business/ops/ip_address_range/ip_address_range_list.html , method = com.dt.platform.ops.page.IpAddressRangePageController.list
[POST] /service-wms/wms-transport-addr/delete , method = com.dt.platform.wms.controller.TransportAddrController.deleteById
[POST] /service-ops/ops-monitor-node-host/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeHostController.queryPagedList
[POST] /service-eam/eam-purchase-order/save , method = com.dt.platform.eam.controller.PurchaseOrderController.save
[ALL] /service-ops/ops-monitor-node-host/export-excel , method = com.dt.platform.ops.controller.MonitorNodeHostController.exportExcel
[ALL] /service-ops/ops-monitor-node-host/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeHostController.exportExcelTemplate
[POST] /service-eam/eam-asset-scrap/get-by-id , method = com.dt.platform.eam.controller.AssetScrapController.getById
[POST] /service-wms/wms-transport-addr/delete-by-ids , method = com.dt.platform.wms.controller.TransportAddrController.deleteByIds
[ALL] /service-ops/ops-monitor-node-host/import-excel , method = com.dt.platform.ops.controller.MonitorNodeHostController.importExcel
[POST] /service-hr/hr-person/update , method = com.dt.platform.hr.controller.PersonController.update
[POST] /service-eam/eam-purchase-order/insert , method = com.dt.platform.eam.controller.PurchaseOrderController.insert
[POST] /service-eam/eam-purchase-order/get-by-id , method = com.dt.platform.eam.controller.PurchaseOrderController.getById
[POST] /service-eam/eam-purchase-order/get-by-ids , method = com.dt.platform.eam.controller.PurchaseOrderController.getByIds
[ALL] /business/ops/monitor_dashboard/monitor_dashboard_list.html , method = com.dt.platform.ops.page.MonitorDashBoardPageController.monitorDashboardList
[POST] /service-wms/wms-transport-addr/query-paged-list , method = com.dt.platform.wms.controller.TransportAddrController.queryPagedList
[POST] /service-ops/ops-monitor-node-list-value/update , method = com.dt.platform.ops.controller.MonitorNodeListValueController.update
[ALL] /business/ops/monitor_node_db/monitor_node_db_form.html , method = com.dt.platform.ops.page.MonitorNodeDbPageController.form
[POST] /service-eam/eam-asset-scrap/get-by-ids , method = com.dt.platform.eam.controller.AssetScrapController.getByIds
[POST] /service-eam/eam-purchase-order/query-list , method = com.dt.platform.eam.controller.PurchaseOrderController.queryList
[POST] /service-wms/wms-unit/update , method = com.dt.platform.wms.controller.UnitController.update
[ALL] /service-eam/eam-asset-scrap/clean-out , method = com.dt.platform.eam.controller.AssetScrapController.cleanOut
[ALL] /business/ops/monitor_node_db/monitor_node_db_list.html , method = com.dt.platform.ops.page.MonitorNodeDbPageController.list
[ALL] /service-eam/eam-asset-scrap/confirm-operation , method = com.dt.platform.eam.controller.AssetScrapController.confirmOperation
[POST] /service-wms/wms-unit/save , method = com.dt.platform.wms.controller.UnitController.save
[POST] /service-eam/eam-asset-scrap/bpm-callback , method = com.dt.platform.eam.controller.AssetScrapController.onProcessCallback
[ALL] /business/ops/monitor_node_group/monitor_node_group_form.html , method = com.dt.platform.ops.page.MonitorNodeGroupPageController.form
[POST] /service-ops/ops-monitor-node-list-value/save , method = com.dt.platform.ops.controller.MonitorNodeListValueController.save
[POST] /service-wms/wms-unit/insert , method = com.dt.platform.wms.controller.UnitController.insert
[ALL] /business/ops/monitor_node_group/monitor_node_group_list.html , method = com.dt.platform.ops.page.MonitorNodeGroupPageController.list
[POST] /service-wms/wms-unit/get-by-id , method = com.dt.platform.wms.controller.UnitController.getById
[POST] /service-hr/hr-person/save , method = com.dt.platform.hr.controller.PersonController.save
[ALL] /business/ops/monitor_node_host/monitor_node_host_form.html , method = com.dt.platform.ops.page.MonitorNodeHostPageController.form
[POST] /service-eam/eam-asset-scrap/query-list , method = com.dt.platform.eam.controller.AssetScrapController.queryList
[POST] /service-wms/wms-unit/get-by-ids , method = com.dt.platform.wms.controller.UnitController.getByIds
[ALL] /service-eam/eam-inspection-plan-point/export-excel-template , method = com.dt.platform.eam.controller.InspectionPlanPointController.exportExcelTemplate
[ALL] /business/ops/monitor_node_host/monitor_node_host_list.html , method = com.dt.platform.ops.page.MonitorNodeHostPageController.list
[ALL] /service-eam/eam-inspection-plan-point/import-excel , method = com.dt.platform.eam.controller.InspectionPlanPointController.importExcel
[POST] /service-eam/eam-asset-scrap/delete , method = com.dt.platform.eam.controller.AssetScrapController.deleteById
[POST] /service-wms/wms-unit/query-list , method = com.dt.platform.wms.controller.UnitController.queryList
[POST] /service-ops/ops-monitor-node-list-value/insert , method = com.dt.platform.ops.controller.MonitorNodeListValueController.insert
[ALL] /business/ops/monitor_node_list_value/monitor_node_list_value_form.html , method = com.dt.platform.ops.page.MonitorNodeListValuePageController.form
[POST] /service-wms/wms-unit/delete , method = com.dt.platform.wms.controller.UnitController.deleteById
[POST] /service-eam/eam-asset-scrap/delete-by-ids , method = com.dt.platform.eam.controller.AssetScrapController.deleteByIds
[POST] /service-ops/ops-monitor-node-list-value/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeListValueController.getById
[ALL] /business/ops/monitor_node_list_value/monitor_node_list_value_list.html , method = com.dt.platform.ops.page.MonitorNodeListValuePageController.list
[POST] /service-wms/wms-unit/delete-by-ids , method = com.dt.platform.wms.controller.UnitController.deleteByIds
[POST] /service-ops/ops-monitor-node-list-value/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeListValueController.getByIds
[ALL] /business/ops/monitor_node_map/monitor_node_map_form.html , method = com.dt.platform.ops.page.MonitorNodeMapPageController.form
[POST] /service-eam/eam-inspection-point/update , method = com.dt.platform.eam.controller.InspectionPointController.update
[POST] /service-wms/wms-unit/query-paged-list , method = com.dt.platform.wms.controller.UnitController.queryPagedList
[ALL] /business/ops/monitor_node_map/monitor_node_map_list.html , method = com.dt.platform.ops.page.MonitorNodeMapPageController.list
[POST] /service-wms/wms-work-type/update , method = com.dt.platform.wms.controller.WorkTypeController.update
[POST] /service-eam/eam-asset-scrap/query-paged-list , method = com.dt.platform.eam.controller.AssetScrapController.queryPagedList
[ALL] /business/ops/monitor_node/monitor_node_form.html , method = com.dt.platform.ops.page.MonitorNodePageController.form
[ALL] /service-eam/eam-asset-scrap/export-excel , method = com.dt.platform.eam.controller.AssetScrapController.exportExcel
[POST] /service-ops/ops-monitor-node-list-value/query-list , method = com.dt.platform.ops.controller.MonitorNodeListValueController.queryList
[POST] /service-wms/wms-work-type/save , method = com.dt.platform.wms.controller.WorkTypeController.save
[ALL] /service-eam/eam-asset-scrap/export-excel-template , method = com.dt.platform.eam.controller.AssetScrapController.exportExcelTemplate
[POST] /service-eam/eam-inspection-point/save , method = com.dt.platform.eam.controller.InspectionPointController.save
[POST] /service-hr/hr-person/insert , method = com.dt.platform.hr.controller.PersonController.insert
[POST] /service-ops/ops-monitor-node-list-value/delete , method = com.dt.platform.ops.controller.MonitorNodeListValueController.deleteById
[ALL] /service-eam/eam-asset-scrap/import-excel , method = com.dt.platform.eam.controller.AssetScrapController.importExcel
[POST] /service-wms/wms-work-type/insert , method = com.dt.platform.wms.controller.WorkTypeController.insert
[ALL] /business/ops/monitor_node/monitor_node_list.html , method = com.dt.platform.ops.page.MonitorNodePageController.list
[POST] /service-ops/ops-monitor-node-list-value/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeListValueController.deleteByIds
[POST] /service-wms/wms-work-type/get-by-id , method = com.dt.platform.wms.controller.WorkTypeController.getById
[POST] /service-hr/hr-person/get-by-id , method = com.dt.platform.hr.controller.PersonController.getById
[POST] /service-eam/eam-asset-selected-data/update , method = com.dt.platform.eam.controller.AssetSelectedDataController.update
[ALL] /business/ops/monitor_node_resource/monitor_node_value_form.html , method = com.dt.platform.ops.page.MonitorNodeResourcePageController.form
[POST] /service-wms/wms-work-type/get-by-ids , method = com.dt.platform.wms.controller.WorkTypeController.getByIds
[POST] /service-hr/hr-person/get-by-ids , method = com.dt.platform.hr.controller.PersonController.getByIds
[POST] /service-eam/eam-inspection-point/insert , method = com.dt.platform.eam.controller.InspectionPointController.insert
[POST] /service-eam/eam-asset-selected-data/save , method = com.dt.platform.eam.controller.AssetSelectedDataController.save
[ALL] /business/ops/monitor_node_resource/monitor_zabbix_agent_list.html , method = com.dt.platform.ops.page.MonitorNodeResourcePageController.zabbixAgentList
[POST] /service-eam/eam-inspection-point/selected , method = com.dt.platform.eam.controller.InspectionPointController.selected
[POST] /service-wms/wms-work-type/query-list , method = com.dt.platform.wms.controller.WorkTypeController.queryList
[POST] /service-eam/eam-asset-selected-data/insert , method = com.dt.platform.eam.controller.AssetSelectedDataController.insert
[POST] /service-ops/ops-monitor-node-list-value/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeListValueController.queryPagedList
[POST] /service-eam/eam-inspection-point/get-by-id , method = com.dt.platform.eam.controller.InspectionPointController.getById
[POST] /service-wms/wms-work-type/delete , method = com.dt.platform.wms.controller.WorkTypeController.deleteById
[POST] /service-eam/eam-asset-selected-data/get-by-id , method = com.dt.platform.eam.controller.AssetSelectedDataController.getById
[ALL] /service-ops/ops-monitor-node-list-value/export-excel , method = com.dt.platform.ops.controller.MonitorNodeListValueController.exportExcel
[POST] /service-eam/eam-inspection-point/get-by-ids , method = com.dt.platform.eam.controller.InspectionPointController.getByIds
[ALL] /service-ops/ops-monitor-node-list-value/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeListValueController.exportExcelTemplate
[POST] /service-wms/wms-work-type/delete-by-ids , method = com.dt.platform.wms.controller.WorkTypeController.deleteByIds
[POST] /service-eam/eam-asset-selected-data/save-by-ids , method = com.dt.platform.eam.controller.AssetSelectedDataController.saveByIds
[ALL] /service-ops/ops-monitor-node-list-value/import-excel , method = com.dt.platform.ops.controller.MonitorNodeListValueController.importExcel
[POST] /service-eam/eam-asset-selected-data/query-list , method = com.dt.platform.eam.controller.AssetSelectedDataController.queryList
[POST] /service-wms/wms-work-type/query-paged-list , method = com.dt.platform.wms.controller.WorkTypeController.queryPagedList
[ALL] /business/wms/area_info/area_info_form.html , method = com.dt.platform.wms.page.AreaInfoPageController.form
[POST] /service-eam/eam-asset-selected-data/delete , method = com.dt.platform.eam.controller.AssetSelectedDataController.deleteById
[POST] /service-ops/ops-monitor-node-map/update , method = com.dt.platform.ops.controller.MonitorNodeMapController.update
[ALL] /business/wms/area_info/area_info_list.html , method = com.dt.platform.wms.page.AreaInfoPageController.list
[ALL] /business/wms/area/area_form.html , method = com.dt.platform.wms.page.AreaPageController.form
[POST] /service-eam/eam-asset-selected-data/delete-by-ids , method = com.dt.platform.eam.controller.AssetSelectedDataController.deleteByIds
[POST] /service-eam/eam-inspection-point/query-list , method = com.dt.platform.eam.controller.InspectionPointController.queryList
[ALL] /business/wms/area/area_list.html , method = com.dt.platform.wms.page.AreaPageController.list
[POST] /service-ops/ops-monitor-node-map/save , method = com.dt.platform.ops.controller.MonitorNodeMapController.save
[ALL] /business/wms/business_type/business_type_form.html , method = com.dt.platform.wms.page.BusinessTypePageController.form
[POST] /service-eam/eam-asset-selected-data/query-paged-list , method = com.dt.platform.eam.controller.AssetSelectedDataController.queryPagedList
[POST] /service-eam/eam-inspection-point/delete , method = com.dt.platform.eam.controller.InspectionPointController.deleteById
[ALL] /business/wms/business_type/business_type_list.html , method = com.dt.platform.wms.page.BusinessTypePageController.list
[ALL] /service-eam/eam-asset-selected-data/export-excel , method = com.dt.platform.eam.controller.AssetSelectedDataController.exportExcel
[POST] /service-hr/hr-person/query-list , method = com.dt.platform.hr.controller.PersonController.queryList
[ALL] /service-eam/eam-asset-selected-data/export-excel-template , method = com.dt.platform.eam.controller.AssetSelectedDataController.exportExcelTemplate
[POST] /service-ops/ops-monitor-node-map/insert , method = com.dt.platform.ops.controller.MonitorNodeMapController.insert
[ALL] /business/wms/car/car_form.html , method = com.dt.platform.wms.page.CarPageController.form
[ALL] /service-eam/eam-asset-selected-data/import-excel , method = com.dt.platform.eam.controller.AssetSelectedDataController.importExcel
[POST] /service-eam/eam-inspection-point/delete-by-ids , method = com.dt.platform.eam.controller.InspectionPointController.deleteByIds
[POST] /service-hr/hr-person/delete , method = com.dt.platform.hr.controller.PersonController.deleteById
[ALL] /business/wms/car/car_list.html , method = com.dt.platform.wms.page.CarPageController.list
[POST] /service-ops/ops-monitor-node-map/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeMapController.getById
[ALL] /business/wms/city_type/city_type_form.html , method = com.dt.platform.wms.page.CityTypePageController.form
[POST] /service-hr/hr-person/delete-by-ids , method = com.dt.platform.hr.controller.PersonController.deleteByIds
[POST] /service-ops/ops-monitor-node-map/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeMapController.getByIds
[ALL] /business/wms/city_type/city_type_list.html , method = com.dt.platform.wms.page.CityTypePageController.list
[POST] /service-eam/eam-asset-software-change/update , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.update
[ALL] /business/wms/company_attr/company_attr_form.html , method = com.dt.platform.wms.page.CompanyAttrPageController.form
[ALL] /business/wms/company_attr/company_attr_list.html , method = com.dt.platform.wms.page.CompanyAttrPageController.list
[POST] /service-eam/eam-inspection-point/query-paged-list , method = com.dt.platform.eam.controller.InspectionPointController.queryPagedList
[ALL] /business/wms/company_level/company_level_form.html , method = com.dt.platform.wms.page.CompanyLevelPageController.form
[POST] /service-ops/ops-monitor-node-map/query-list , method = com.dt.platform.ops.controller.MonitorNodeMapController.queryList
[ALL] /service-eam/eam-inspection-point/export-excel , method = com.dt.platform.eam.controller.InspectionPointController.exportExcel
[ALL] /business/wms/company_level/company_level_list.html , method = com.dt.platform.wms.page.CompanyLevelPageController.list
[POST] /service-eam/eam-asset-software-change/save , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.save
[POST] /service-ops/ops-monitor-node-map/delete , method = com.dt.platform.ops.controller.MonitorNodeMapController.deleteById
[ALL] /service-eam/eam-inspection-point/export-excel-template , method = com.dt.platform.eam.controller.InspectionPointController.exportExcelTemplate
[ALL] /business/wms/company_status/company_status_form.html , method = com.dt.platform.wms.page.CompanyStatusPageController.form
[POST] /service-ops/ops-monitor-node-map/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeMapController.deleteByIds
[ALL] /business/wms/company_status/company_status_list.html , method = com.dt.platform.wms.page.CompanyStatusPageController.list
[ALL] /service-eam/eam-inspection-point/import-excel , method = com.dt.platform.eam.controller.InspectionPointController.importExcel
[ALL] /business/wms/company_trade/company_trade_form.html , method = com.dt.platform.wms.page.CompanyTradePageController.form
[ALL] /business/wms/company_trade/company_trade_list.html , method = com.dt.platform.wms.page.CompanyTradePageController.list
[POST] /service-eam/eam-asset-software-change/insert , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.insert
[POST] /service-eam/eam-inspection-point/query-paged-list-by-select , method = com.dt.platform.eam.controller.InspectionPointController.queryPagedList2
[POST] /service-ops/ops-monitor-node-map/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeMapController.queryPagedList
[ALL] /business/wms/customer/customer_form.html , method = com.dt.platform.wms.page.CustomerPageController.form
[POST] /service-eam/eam-asset-software-change/get-by-id , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.getById
[ALL] /business/wms/customer/customer_list.html , method = com.dt.platform.wms.page.CustomerPageController.list
[ALL] /service-ops/ops-monitor-node-map/export-excel , method = com.dt.platform.ops.controller.MonitorNodeMapController.exportExcel
[POST] /service-eam/eam-inspection-point/query-paged-list-by-selected , method = com.dt.platform.eam.controller.InspectionPointController.queryPagedListBySelected
[ALL] /business/wms/delivery_method/delivery_method_form.html , method = com.dt.platform.wms.page.DeliveryMethodPageController.form
[POST] /service-eam/eam-asset-software-change/get-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.getByIds
[ALL] /service-ops/ops-monitor-node-map/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeMapController.exportExcelTemplate
[ALL] /business/wms/delivery_method/delivery_method_list.html , method = com.dt.platform.wms.page.DeliveryMethodPageController.list
[ALL] /service-ops/ops-monitor-node-map/import-excel , method = com.dt.platform.ops.controller.MonitorNodeMapController.importExcel
[ALL] /business/wms/loc_type/loc_type_form.html , method = com.dt.platform.wms.page.LocTypePageController.form
[ALL] /service-eam/eam-asset-software-change/confirm-operation , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.confirmOperation
[POST] /service-hr/hr-person/query-paged-list , method = com.dt.platform.hr.controller.PersonController.queryPagedList
[POST] /service-eam/eam-inspection-point-owner/update , method = com.dt.platform.eam.controller.InspectionPointOwnerController.update
[ALL] /business/wms/loc_type/loc_type_list.html , method = com.dt.platform.wms.page.LocTypePageController.list
[ALL] /business/wms/oper_type/oper_type_form.html , method = com.dt.platform.wms.page.OperTypePageController.form
[POST] /service-ops/ops-monitor-node-subtype/update , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.update
[ALL] /business/wms/oper_type/oper_type_list.html , method = com.dt.platform.wms.page.OperTypePageController.list
[ALL] /business/wms/product_attr/product_attr_form.html , method = com.dt.platform.wms.page.ProductAttrPageController.form
[POST] /service-eam/eam-asset-software-change/query-list , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.queryList
[POST] /service-eam/eam-inspection-point-owner/save , method = com.dt.platform.eam.controller.InspectionPointOwnerController.save
[ALL] /business/wms/product_attr/product_attr_list.html , method = com.dt.platform.wms.page.ProductAttrPageController.list
[POST] /service-ops/ops-monitor-node-subtype/save , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.save
[POST] /service-eam/eam-asset-software-change/delete , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.deleteById
[ALL] /business/wms/product_category/product_category_form.html , method = com.dt.platform.wms.page.ProductCategoryPageController.form
[POST] /service-wms/wms-car/save , method = com.dt.platform.wms.controller.CarController.save
[ALL] /business/wms/product_category/product_category_list.html , method = com.dt.platform.wms.page.ProductCategoryPageController.list
[POST] /service-eam/eam-asset-software-change/delete-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.deleteByIds
[POST] /service-eam/eam-inspection-point-owner/insert , method = com.dt.platform.eam.controller.InspectionPointOwnerController.insert
[POST] /service-ops/ops-monitor-node-subtype/insert , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.insert
[ALL] /business/wms/product/product_form.html , method = com.dt.platform.wms.page.ProductPageController.form
[ALL] /business/wms/product/product_list.html , method = com.dt.platform.wms.page.ProductPageController.list
[POST] /service-eam/eam-inspection-point-owner/get-by-id , method = com.dt.platform.eam.controller.InspectionPointOwnerController.getById
[POST] /service-ops/ops-monitor-node-subtype/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.getById
[ALL] /business/wms/receive_method/receive_method_form.html , method = com.dt.platform.wms.page.ReceiveMethodPageController.form
[POST] /service-eam/eam-asset-software-change/query-paged-list , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.queryPagedList
[POST] /service-eam/eam-inspection-point-owner/get-by-ids , method = com.dt.platform.eam.controller.InspectionPointOwnerController.getByIds
[POST] /service-ops/ops-monitor-node-subtype/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.getByIds
[ALL] /service-eam/eam-asset-software-change/export-excel , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.exportExcel
[ALL] /business/wms/receive_method/receive_method_list.html , method = com.dt.platform.wms.page.ReceiveMethodPageController.list
[ALL] /service-eam/eam-asset-software-change/export-excel-template , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.exportExcelTemplate
[ALL] /business/wms/region/region_form.html , method = com.dt.platform.wms.page.RegionPageController.form
[ALL] /service-eam/eam-asset-software-change/import-excel , method = com.dt.platform.eam.controller.AssetSoftwareChangeController.importExcel
[ALL] /business/wms/region/region_list.html , method = com.dt.platform.wms.page.RegionPageController.list
[POST] /service-ops/ops-monitor-node-subtype/query-list , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.queryList
[POST] /service-eam/eam-inspection-point-owner/query-list , method = com.dt.platform.eam.controller.InspectionPointOwnerController.queryList
[POST] /service-ops/ops-auto-task/query-list , method = com.dt.platform.ops.controller.AutoTaskController.queryList
[ALL] /business/wms/storehouse_attr_v/storehouse_attr_v_form.html , method = com.dt.platform.wms.page.StorehouseAttrVPageController.form
[POST] /service-ops/ops-monitor-node-subtype/delete , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.deleteById
[POST] /service-eam/eam-inspection-point-owner/delete , method = com.dt.platform.eam.controller.InspectionPointOwnerController.deleteById
[ALL] /business/wms/storehouse_attr_v/storehouse_attr_v_list.html , method = com.dt.platform.wms.page.StorehouseAttrVPageController.list
[POST] /service-eam/eam-asset-software-change-detail/update , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.update
[POST] /service-ops/ops-monitor-node-subtype/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.deleteByIds
[ALL] /business/wms/storehouse/storehouse_form.html , method = com.dt.platform.wms.page.StorehousePageController.form
[POST] /service-eam/eam-inspection-point-owner/delete-by-ids , method = com.dt.platform.eam.controller.InspectionPointOwnerController.deleteByIds
[ALL] /business/wms/storehouse/storehouse_list.html , method = com.dt.platform.wms.page.StorehousePageController.list
[POST] /service-ops/ops-auto-task/delete , method = com.dt.platform.ops.controller.AutoTaskController.deleteById
[POST] /service-eam/eam-asset-software-change-detail/save , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.save
[ALL] /business/wms/storelocation/storelocation_form.html , method = com.dt.platform.wms.page.StorelocationPageController.form
[POST] /service-ops/ops-monitor-node-subtype/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.queryPagedList
[POST] /service-ops/ops-auto-task/delete-by-ids , method = com.dt.platform.ops.controller.AutoTaskController.deleteByIds
[ALL] /service-ops/ops-monitor-node-subtype/export-excel , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.exportExcel
[ALL] /business/wms/storelocation/storelocation_list.html , method = com.dt.platform.wms.page.StorelocationPageController.list
[POST] /service-eam/eam-inspection-point-owner/query-paged-list , method = com.dt.platform.eam.controller.InspectionPointOwnerController.queryPagedList
[POST] /service-eam/eam-asset-software-change-detail/insert , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.insert
[ALL] /business/wms/supplier/supplier_form.html , method = com.dt.platform.wms.page.SupplierPageController.form
[POST] /service-wms/wms-car/insert , method = com.dt.platform.wms.controller.CarController.insert
[ALL] /service-eam/eam-inspection-point-owner/export-excel , method = com.dt.platform.eam.controller.InspectionPointOwnerController.exportExcel
[POST] /service-ops/ops-auto-task/query-paged-list , method = com.dt.platform.ops.controller.AutoTaskController.queryPagedList
[POST] /service-eam/eam-asset-software-change-detail/get-by-id , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.getById
[ALL] /service-eam/eam-inspection-point-owner/export-excel-template , method = com.dt.platform.eam.controller.InspectionPointOwnerController.exportExcelTemplate
[ALL] /service-eam/eam-inspection-point-owner/import-excel , method = com.dt.platform.eam.controller.InspectionPointOwnerController.importExcel
[POST] /service-hr/hr-person-file/update , method = com.dt.platform.hr.controller.PersonFileController.update
[POST] /service-eam/eam-asset-software-change-detail/get-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.getByIds
[POST] /service-ops/ops-auto-task-log/update , method = com.dt.platform.ops.controller.AutoTaskLogController.update
[POST] /service-eam/eam-inspection-point-pos/update , method = com.dt.platform.eam.controller.InspectionPointPosController.update
[ALL] /service-eam/eam-asset-bill/query-asset-stock-goods-tranfer-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetStockGoodsTranferBill
[POST] /service-hr/hr-person-file/save , method = com.dt.platform.hr.controller.PersonFileController.save
[POST] /service-wms/wms-car/get-by-id , method = com.dt.platform.wms.controller.CarController.getById
[POST] /service-eam/eam-asset-software-change-detail/query-list , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.queryList
[ALL] /service-eam/eam-asset-bill/query-asset-stock-goods-adjust-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAssetStockGoodsAdjustBill
[POST] /service-eam/eam-inspection-point-pos/save , method = com.dt.platform.eam.controller.InspectionPointPosController.save
[POST] /service-ops/ops-auto-task-log/save , method = com.dt.platform.ops.controller.AutoTaskLogController.save
[POST] /service-eam/eam-asset-software-change-detail/delete , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.deleteById
[POST] /service-hr/hr-person-file/insert , method = com.dt.platform.hr.controller.PersonFileController.insert
[POST] /service-wms/wms-car/get-by-ids , method = com.dt.platform.wms.controller.CarController.getByIds
[POST] /service-eam/eam-asset-software-change-detail/delete-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.deleteByIds
[POST] /service-hr/hr-person-file/get-by-id , method = com.dt.platform.hr.controller.PersonFileController.getById
[POST] /service-eam/eam-inspection-point-pos/insert , method = com.dt.platform.eam.controller.InspectionPointPosController.insert
[POST] /service-hr/hr-person-file/get-by-ids , method = com.dt.platform.hr.controller.PersonFileController.getByIds
[POST] /service-eam/eam-asset-borrow/update , method = com.dt.platform.eam.controller.AssetBorrowController.update
[POST] /service-eam/eam-inspection-point-pos/get-by-id , method = com.dt.platform.eam.controller.InspectionPointPosController.getById
[POST] /service-ops/ops-auto-task-log/insert , method = com.dt.platform.ops.controller.AutoTaskLogController.insert
[POST] /service-eam/eam-asset-software-change-detail/query-paged-list , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.queryPagedList
[ALL] /service-eam/eam-asset-software-change-detail/export-excel , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.exportExcel
[POST] /service-ops/ops-auto-task-log/get-by-id , method = com.dt.platform.ops.controller.AutoTaskLogController.getById
[POST] /service-eam/eam-inspection-point-pos/get-by-ids , method = com.dt.platform.eam.controller.InspectionPointPosController.getByIds
[ALL] /service-eam/eam-asset-software-change-detail/export-excel-template , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.exportExcelTemplate
[POST] /service-hr/hr-person-file/query-list , method = com.dt.platform.hr.controller.PersonFileController.queryList
[ALL] /service-eam/eam-asset-software-change-detail/import-excel , method = com.dt.platform.eam.controller.AssetSoftwareChangeDetailController.importExcel
[POST] /service-ops/ops-auto-task-log/get-by-ids , method = com.dt.platform.ops.controller.AutoTaskLogController.getByIds
[POST] /service-eam/eam-asset-borrow/save , method = com.dt.platform.eam.controller.AssetBorrowController.save
[POST] /service-hr/hr-person-file/delete , method = com.dt.platform.hr.controller.PersonFileController.deleteById
[POST] /service-wms/wms-car/query-list , method = com.dt.platform.wms.controller.CarController.queryList
[POST] /service-eam/eam-inspection-point-pos/query-list , method = com.dt.platform.eam.controller.InspectionPointPosController.queryList
[POST] /service-hr/hr-person-file/delete-by-ids , method = com.dt.platform.hr.controller.PersonFileController.deleteByIds
[POST] /service-eam/eam-inspection-point-pos/delete , method = com.dt.platform.eam.controller.InspectionPointPosController.deleteById
[POST] /service-wms/wms-car/delete , method = com.dt.platform.wms.controller.CarController.deleteById
[POST] /service-ops/ops-auto-task-log/query-list , method = com.dt.platform.ops.controller.AutoTaskLogController.queryList
[POST] /service-eam/eam-inspection-point-pos/delete-by-ids , method = com.dt.platform.eam.controller.InspectionPointPosController.deleteByIds
[POST] /service-eam/eam-asset-borrow/insert , method = com.dt.platform.eam.controller.AssetBorrowController.insert
[POST] /service-hr/hr-person-file/query-paged-list , method = com.dt.platform.hr.controller.PersonFileController.queryPagedList
[POST] /service-ops/ops-auto-task-log/delete , method = com.dt.platform.ops.controller.AutoTaskLogController.deleteById
[POST] /service-wms/wms-car/delete-by-ids , method = com.dt.platform.wms.controller.CarController.deleteByIds
[POST] /service-ops/ops-auto-task-log/delete-by-ids , method = com.dt.platform.ops.controller.AutoTaskLogController.deleteByIds
[ALL] /business/wms/supplier/supplier_list.html , method = com.dt.platform.wms.page.SupplierPageController.list
[POST] /service-ops/ops-auto-task-log/query-paged-list , method = com.dt.platform.ops.controller.AutoTaskLogController.queryPagedList
[ALL] /business/wms/temperature_attribute/temperature_attribute_form.html , method = com.dt.platform.wms.page.TemperatureAttributePageController.form
[ALL] /business/wms/temperature_attribute/temperature_attribute_list.html , method = com.dt.platform.wms.page.TemperatureAttributePageController.list
[ALL] /business/wms/transport_addr/transport_addr_form.html , method = com.dt.platform.wms.page.TransportAddrPageController.form
[POST] /service-ops/ops-auto-task-m-log/update , method = com.dt.platform.ops.controller.AutoTaskMLogController.update
[ALL] /business/wms/transport_addr/transport_addr_list.html , method = com.dt.platform.wms.page.TransportAddrPageController.list
[ALL] /service-ops/ops-monitor-node-subtype/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.exportExcelTemplate
[ALL] /business/wms/unit/unit_form.html , method = com.dt.platform.wms.page.UnitPageController.form
[POST] /service-ops/ops-auto-task-m-log/save , method = com.dt.platform.ops.controller.AutoTaskMLogController.save
[ALL] /business/wms/unit/unit_list.html , method = com.dt.platform.wms.page.UnitPageController.list
[POST] /service-wms/wms-car/query-paged-list , method = com.dt.platform.wms.controller.CarController.queryPagedList
[ALL] /service-ops/ops-monitor-node-subtype/import-excel , method = com.dt.platform.ops.controller.MonitorNodeSubtypeController.importExcel
[ALL] /business/wms/work_type/work_type_form.html , method = com.dt.platform.wms.page.WorkTypePageController.form
[ALL] /business/wms/work_type/work_type_list.html , method = com.dt.platform.wms.page.WorkTypePageController.list
[POST] /service-ops/ops-auto-task-m-log/insert , method = com.dt.platform.ops.controller.AutoTaskMLogController.insert
[POST] /service-ops/ops-monitor-node-tpl-item/update , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.update
[POST] /service-wms/wms-city-type/update , method = com.dt.platform.wms.controller.CityTypeController.update
[POST] /service-ops/ops-auto-task-m-log/get-by-id , method = com.dt.platform.ops.controller.AutoTaskMLogController.getById
[POST] /service-ops/ops-monitor-node-tpl-item/save , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.save
[POST] /service-eam/eam-asset-software/update , method = com.dt.platform.eam.controller.AssetSoftwareController.update
[POST] /service-wms/wms-city-type/save , method = com.dt.platform.wms.controller.CityTypeController.save
[POST] /service-ops/ops-monitor-node-tpl-item/insert , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.insert
[POST] /service-wms/wms-city-type/insert , method = com.dt.platform.wms.controller.CityTypeController.insert
[POST] /service-wms/wms-city-type/get-by-id , method = com.dt.platform.wms.controller.CityTypeController.getById
[POST] /service-ops/ops-monitor-node-tpl-item/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.getById
[POST] /service-wms/wms-city-type/get-by-ids , method = com.dt.platform.wms.controller.CityTypeController.getByIds
[POST] /service-ops/ops-monitor-node-tpl-item/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.getByIds
[POST] /service-wms/wms-city-type/query-list , method = com.dt.platform.wms.controller.CityTypeController.queryList
[POST] /service-hr/hr-position/update , method = com.dt.platform.hr.controller.PositionController.update
[POST] /service-ops/ops-monitor-node-tpl-item/query-list , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.queryList
[POST] /service-wms/wms-city-type/delete , method = com.dt.platform.wms.controller.CityTypeController.deleteById
[POST] /service-oa/oa-vehicle-info/update , method = com.dt.platform.oa.controller.VehicleInfoController.update
[POST] /service-wms/wms-city-type/delete-by-ids , method = com.dt.platform.wms.controller.CityTypeController.deleteByIds
[POST] /service-ops/ops-monitor-node-tpl-item/delete , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.deleteById
[POST] /service-wms/wms-city-type/query-paged-list , method = com.dt.platform.wms.controller.CityTypeController.queryPagedList
[POST] /service-hr/hr-position/save , method = com.dt.platform.hr.controller.PositionController.save
[POST] /service-ops/ops-monitor-node-tpl-item/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.deleteByIds
[POST] /service-wms/wms-company-attr/update , method = com.dt.platform.wms.controller.CompanyAttrController.update
[POST] /service-ops/ops-monitor-node-tpl-item/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.queryPagedList
[ALL] /service-ops/ops-monitor-node-tpl-item/export-excel , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.exportExcel
[ALL] /service-ops/ops-monitor-node-tpl-item/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.exportExcelTemplate
[POST] /service-hr/hr-position/insert , method = com.dt.platform.hr.controller.PositionController.insert
[POST] /service-wms/wms-company-attr/save , method = com.dt.platform.wms.controller.CompanyAttrController.save
[ALL] /service-ops/ops-monitor-node-tpl-item/import-excel , method = com.dt.platform.ops.controller.MonitorNodeTplItemController.importExcel
[POST] /service-oa/oa-vehicle-info/save , method = com.dt.platform.oa.controller.VehicleInfoController.save
[POST] /service-wms/wms-company-attr/insert , method = com.dt.platform.wms.controller.CompanyAttrController.insert
[POST] /service-ops/ops-monitor-node-type/update , method = com.dt.platform.ops.controller.MonitorNodeTypeController.update
[POST] /service-hr/hr-position/get-by-id , method = com.dt.platform.hr.controller.PositionController.getById
[POST] /service-wms/wms-company-attr/get-by-id , method = com.dt.platform.wms.controller.CompanyAttrController.getById
[POST] /service-ops/ops-monitor-node-type/save , method = com.dt.platform.ops.controller.MonitorNodeTypeController.save
[POST] /service-wms/wms-company-attr/get-by-ids , method = com.dt.platform.wms.controller.CompanyAttrController.getByIds
[POST] /service-hr/hr-position/get-by-ids , method = com.dt.platform.hr.controller.PositionController.getByIds
[POST] /service-ops/ops-monitor-node-type/insert , method = com.dt.platform.ops.controller.MonitorNodeTypeController.insert
[POST] /service-wms/wms-company-attr/query-list , method = com.dt.platform.wms.controller.CompanyAttrController.queryList
[POST] /service-oa/oa-vehicle-info/insert , method = com.dt.platform.oa.controller.VehicleInfoController.insert
[POST] /service-ops/ops-monitor-node-type/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeTypeController.getById
[POST] /service-wms/wms-company-attr/delete , method = com.dt.platform.wms.controller.CompanyAttrController.deleteById
[POST] /service-oa/oa-vehicle-info/get-by-id , method = com.dt.platform.oa.controller.VehicleInfoController.getById
[POST] /service-ops/ops-monitor-node-type/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeTypeController.getByIds
[POST] /service-hr/hr-position/query-list , method = com.dt.platform.hr.controller.PositionController.queryList
[POST] /service-wms/wms-company-attr/delete-by-ids , method = com.dt.platform.wms.controller.CompanyAttrController.deleteByIds
[POST] /service-oa/oa-vehicle-info/get-by-ids , method = com.dt.platform.oa.controller.VehicleInfoController.getByIds
[POST] /service-ops/ops-monitor-node-type/query-list , method = com.dt.platform.ops.controller.MonitorNodeTypeController.queryList
[POST] /service-hr/hr-position/delete , method = com.dt.platform.hr.controller.PositionController.deleteById
[POST] /service-ops/ops-monitor-node-type/delete , method = com.dt.platform.ops.controller.MonitorNodeTypeController.deleteById
[POST] /service-wms/wms-company-attr/query-paged-list , method = com.dt.platform.wms.controller.CompanyAttrController.queryPagedList
[POST] /service-ops/ops-monitor-node-type/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeTypeController.deleteByIds
[POST] /service-hr/hr-position/delete-by-ids , method = com.dt.platform.hr.controller.PositionController.deleteByIds
[POST] /service-wms/wms-company-level/update , method = com.dt.platform.wms.controller.CompanyLevelController.update
[POST] /service-ops/ops-monitor-node-type/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeTypeController.queryPagedList
[ALL] /service-ops/ops-monitor-node-type/export-excel , method = com.dt.platform.ops.controller.MonitorNodeTypeController.exportExcel
[POST] /service-oa/oa-vehicle-info/query-list , method = com.dt.platform.oa.controller.VehicleInfoController.queryList
[POST] /service-wms/wms-company-level/save , method = com.dt.platform.wms.controller.CompanyLevelController.save
[POST] /service-hr/hr-position/query-paged-list , method = com.dt.platform.hr.controller.PositionController.queryPagedList
[POST] /service-oa/oa-vehicle-info/delete , method = com.dt.platform.oa.controller.VehicleInfoController.deleteById
[POST] /service-ops/ops-cmdb-model-v/delete-by-ids , method = com.dt.platform.ops.controller.CmdbModelVController.deleteByIds
[POST] /service-wms/wms-company-level/insert , method = com.dt.platform.wms.controller.CompanyLevelController.insert
[POST] /service-oa/oa-vehicle-info/delete-by-ids , method = com.dt.platform.oa.controller.VehicleInfoController.deleteByIds
[POST] /service-wms/wms-company-level/get-by-id , method = com.dt.platform.wms.controller.CompanyLevelController.getById
[POST] /service-hr/hr-position-type/update , method = com.dt.platform.hr.controller.PositionTypeController.update
[POST] /service-wms/wms-company-level/get-by-ids , method = com.dt.platform.wms.controller.CompanyLevelController.getByIds
[POST] /service-wms/wms-company-level/query-list , method = com.dt.platform.wms.controller.CompanyLevelController.queryList
[POST] /service-wms/wms-company-level/delete , method = com.dt.platform.wms.controller.CompanyLevelController.deleteById
[POST] /service-eam/eam-asset-software/save , method = com.dt.platform.eam.controller.AssetSoftwareController.save
[POST] /service-wms/wms-company-level/delete-by-ids , method = com.dt.platform.wms.controller.CompanyLevelController.deleteByIds
[POST] /service-oa/oa-vehicle-info/query-paged-list , method = com.dt.platform.oa.controller.VehicleInfoController.queryPagedList
[ALL] /business/oa/vehicle_info/vehicle_info_form.html , method = com.dt.platform.oa.page.VehicleInfoPageController.form
[ALL] /business/oa/vehicle_info/vehicle_info_list.html , method = com.dt.platform.oa.page.VehicleInfoPageController.list
[POST] /service-wms/wms-company-level/query-paged-list , method = com.dt.platform.wms.controller.CompanyLevelController.queryPagedList
[POST] /service-contract/cont-contract-label-s/update , method = com.foxnicweb.web.contract.controller.ContractLabelSController.update
[POST] /service-wms/wms-company-status/update , method = com.dt.platform.wms.controller.CompanyStatusController.update
[POST] /service-ops/ops-cmdb-model-v/query-paged-list , method = com.dt.platform.ops.controller.CmdbModelVController.queryPagedList
[POST] /service-contract/cont-contract-label-s/save , method = com.foxnicweb.web.contract.controller.ContractLabelSController.save
[POST] /service-contract/cont-contract-label-s/insert , method = com.foxnicweb.web.contract.controller.ContractLabelSController.insert
[POST] /service-hr/hr-position-type/save , method = com.dt.platform.hr.controller.PositionTypeController.save
[POST] /service-wms/wms-company-status/save , method = com.dt.platform.wms.controller.CompanyStatusController.save
[POST] /service-contract/cont-contract-label-s/get-by-id , method = com.foxnicweb.web.contract.controller.ContractLabelSController.getById
[POST] /service-contract/cont-contract-label-s/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractLabelSController.getByIds
[POST] /service-wms/wms-company-status/insert , method = com.dt.platform.wms.controller.CompanyStatusController.insert
[POST] /service-eam/eam-asset-software/insert , method = com.dt.platform.eam.controller.AssetSoftwareController.insert
[POST] /service-hr/hr-position-type/insert , method = com.dt.platform.hr.controller.PositionTypeController.insert
[POST] /service-contract/cont-contract-label-s/query-list , method = com.foxnicweb.web.contract.controller.ContractLabelSController.queryList
[POST] /service-eam/eam-asset-software/get-by-id , method = com.dt.platform.eam.controller.AssetSoftwareController.getById
[POST] /service-wms/wms-company-status/get-by-id , method = com.dt.platform.wms.controller.CompanyStatusController.getById
[POST] /service-contract/cont-contract-label-s/delete , method = com.foxnicweb.web.contract.controller.ContractLabelSController.deleteById
[POST] /service-eam/eam-asset-software/get-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareController.getByIds
[POST] /service-wms/wms-company-status/get-by-ids , method = com.dt.platform.wms.controller.CompanyStatusController.getByIds
[POST] /service-hr/hr-position-type/get-by-id , method = com.dt.platform.hr.controller.PositionTypeController.getById
[POST] /service-contract/cont-contract-label-s/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractLabelSController.deleteByIds
[ALL] /service-eam/eam-asset-software/confirm-operation , method = com.dt.platform.eam.controller.AssetSoftwareController.confirmOperation
[POST] /service-wms/wms-company-status/query-list , method = com.dt.platform.wms.controller.CompanyStatusController.queryList
[POST] /service-eam/eam-asset-software/asset-selected , method = com.dt.platform.eam.controller.AssetSoftwareController.assetSelected
[POST] /service-hr/hr-position-type/get-by-ids , method = com.dt.platform.hr.controller.PositionTypeController.getByIds
[POST] /service-contract/cont-contract-label-s/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractLabelSController.queryPagedList
[POST] /service-ops/ops-cmdb-model-v-h/update , method = com.dt.platform.ops.controller.CmdbModelVHController.update
[POST] /service-wms/wms-company-status/delete , method = com.dt.platform.wms.controller.CompanyStatusController.deleteById
[POST] /service-wms/wms-company-status/delete-by-ids , method = com.dt.platform.wms.controller.CompanyStatusController.deleteByIds
[POST] /service-hr/hr-position-type/query-list , method = com.dt.platform.hr.controller.PositionTypeController.queryList
[POST] /service-wms/wms-company-status/query-paged-list , method = com.dt.platform.wms.controller.CompanyStatusController.queryPagedList
[POST] /service-hr/hr-position-type/delete , method = com.dt.platform.hr.controller.PositionTypeController.deleteById
[POST] /service-wms/wms-company-trade/update , method = com.dt.platform.wms.controller.CompanyTradeController.update
[POST] /service-contract/cont-contract/update , method = com.foxnicweb.web.contract.controller.ContractController.update
[POST] /service-hr/hr-position-type/delete-by-ids , method = com.dt.platform.hr.controller.PositionTypeController.deleteByIds
[POST] /service-wms/wms-company-trade/save , method = com.dt.platform.wms.controller.CompanyTradeController.save
[POST] /service-eam/eam-asset-software/query-list , method = com.dt.platform.eam.controller.AssetSoftwareController.queryList
[POST] /service-wms/wms-company-trade/insert , method = com.dt.platform.wms.controller.CompanyTradeController.insert
[POST] /service-hr/hr-position-type/query-paged-list , method = com.dt.platform.hr.controller.PositionTypeController.queryPagedList
[POST] /service-eam/eam-asset-software/delete , method = com.dt.platform.eam.controller.AssetSoftwareController.deleteById
[POST] /service-wms/wms-company-trade/get-by-id , method = com.dt.platform.wms.controller.CompanyTradeController.getById
[POST] /service-eam/eam-asset-software/delete-by-ids , method = com.dt.platform.eam.controller.AssetSoftwareController.deleteByIds
[POST] /service-ops/ops-cmdb-model-v-h/save , method = com.dt.platform.ops.controller.CmdbModelVHController.save
[POST] /service-contract/cont-contract/save , method = com.foxnicweb.web.contract.controller.ContractController.save
[POST] /service-wms/wms-company-trade/get-by-ids , method = com.dt.platform.wms.controller.CompanyTradeController.getByIds
[POST] /service-wms/wms-company-trade/query-list , method = com.dt.platform.wms.controller.CompanyTradeController.queryList
[POST] /service-hr/hr-professional-level/update , method = com.dt.platform.hr.controller.ProfessionalLevelController.update
[POST] /service-wms/wms-company-trade/delete , method = com.dt.platform.wms.controller.CompanyTradeController.deleteById
[POST] /service-wms/wms-company-trade/delete-by-ids , method = com.dt.platform.wms.controller.CompanyTradeController.deleteByIds
[POST] /service-eam/eam-asset-borrow/get-by-id , method = com.dt.platform.eam.controller.AssetBorrowController.getById
[POST] /service-wms/wms-company-trade/query-paged-list , method = com.dt.platform.wms.controller.CompanyTradeController.queryPagedList
[POST] /service-contract/cont-contract/insert , method = com.foxnicweb.web.contract.controller.ContractController.insert
[POST] /service-hr/hr-professional-level/save , method = com.dt.platform.hr.controller.ProfessionalLevelController.save
[POST] /service-eam/eam-asset-borrow/get-by-ids , method = com.dt.platform.eam.controller.AssetBorrowController.getByIds
[POST] /service-contract/cont-contract/archive , method = com.foxnicweb.web.contract.controller.ContractController.archive
[POST] /service-eam/eam-asset-software/query-paged-list , method = com.dt.platform.eam.controller.AssetSoftwareController.queryPagedList
[ALL] /service-eam/eam-asset-borrow/confirm-operation , method = com.dt.platform.eam.controller.AssetBorrowController.confirmOperation
[POST] /service-wms/wms-customer/update , method = com.dt.platform.wms.controller.CustomerController.update
[ALL] /service-eam/eam-asset-software/export-excel , method = com.dt.platform.eam.controller.AssetSoftwareController.exportExcel
[ALL] /service-eam/eam-asset-borrow/asset-return , method = com.dt.platform.eam.controller.AssetBorrowController.assetReturn
[POST] /service-contract/cont-contract/get-by-id , method = com.foxnicweb.web.contract.controller.ContractController.getById
[POST] /service-ops/ops-cmdb-model-v-h/insert , method = com.dt.platform.ops.controller.CmdbModelVHController.insert
[ALL] /service-eam/eam-asset-software/export-excel-template , method = com.dt.platform.eam.controller.AssetSoftwareController.exportExcelTemplate
[POST] /service-eam/eam-asset-borrow/bpm-callback , method = com.dt.platform.eam.controller.AssetBorrowController.onProcessCallback
[POST] /service-hr/hr-professional-level/insert , method = com.dt.platform.hr.controller.ProfessionalLevelController.insert
[POST] /service-contract/cont-contract/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractController.getByIds
[POST] /service-ops/ops-cmdb-model-v-h/get-by-id , method = com.dt.platform.ops.controller.CmdbModelVHController.getById
[POST] /service-wms/wms-customer/save , method = com.dt.platform.wms.controller.CustomerController.save
[POST] /service-ops/ops-cmdb-model-v-h/get-by-ids , method = com.dt.platform.ops.controller.CmdbModelVHController.getByIds
[POST] /service-hr/hr-professional-level/get-by-id , method = com.dt.platform.hr.controller.ProfessionalLevelController.getById
[POST] /service-eam/eam-asset-borrow/query-list , method = com.dt.platform.eam.controller.AssetBorrowController.queryList
[POST] /service-wms/wms-customer/insert , method = com.dt.platform.wms.controller.CustomerController.insert
[POST] /service-eam/eam-asset-borrow/delete , method = com.dt.platform.eam.controller.AssetBorrowController.deleteById
[POST] /service-hr/hr-professional-level/get-by-ids , method = com.dt.platform.hr.controller.ProfessionalLevelController.getByIds
[POST] /service-wms/wms-customer/get-by-id , method = com.dt.platform.wms.controller.CustomerController.getById
[POST] /service-eam/eam-asset-borrow/delete-by-ids , method = com.dt.platform.eam.controller.AssetBorrowController.deleteByIds
[POST] /service-contract/cont-contract/query-list , method = com.foxnicweb.web.contract.controller.ContractController.queryList
[POST] /service-wms/wms-customer/get-by-ids , method = com.dt.platform.wms.controller.CustomerController.getByIds
[POST] /service-eam/eam-c-cust-inspect-log/insert , method = com.dt.platform.eam.controller.CCustInspectLogController.insert
[POST] /service-contract/cont-contract/delete , method = com.foxnicweb.web.contract.controller.ContractController.deleteById
[POST] /service-eam/eam-c-cust-inspect-log/get-by-id , method = com.dt.platform.eam.controller.CCustInspectLogController.getById
[POST] /service-contract/cont-contract/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractController.deleteByIds
[POST] /service-eam/eam-c-cust-inspect-log/get-by-ids , method = com.dt.platform.eam.controller.CCustInspectLogController.getByIds
[POST] /service-hr/hr-professional-level/query-list , method = com.dt.platform.hr.controller.ProfessionalLevelController.queryList
[POST] /service-eam/eam-asset-borrow/query-paged-list , method = com.dt.platform.eam.controller.AssetBorrowController.queryPagedList
[POST] /service-wms/wms-customer/query-list , method = com.dt.platform.wms.controller.CustomerController.queryList
[ALL] /service-eam/eam-asset-borrow/export-excel , method = com.dt.platform.eam.controller.AssetBorrowController.exportExcel
[ALL] /service-eam/eam-asset-borrow/export-excel-template , method = com.dt.platform.eam.controller.AssetBorrowController.exportExcelTemplate
[POST] /service-eam/eam-c-cust-inspect-log/query-list , method = com.dt.platform.eam.controller.CCustInspectLogController.queryList
[POST] /service-wms/wms-customer/delete , method = com.dt.platform.wms.controller.CustomerController.deleteById
[ALL] /service-eam/eam-asset-borrow/import-excel , method = com.dt.platform.eam.controller.AssetBorrowController.importExcel
[POST] /service-hr/hr-professional-level/delete , method = com.dt.platform.hr.controller.ProfessionalLevelController.deleteById
[POST] /service-eam/eam-c-cust-inspect-log/delete , method = com.dt.platform.eam.controller.CCustInspectLogController.deleteById
[POST] /service-wms/wms-customer/delete-by-ids , method = com.dt.platform.wms.controller.CustomerController.deleteByIds
[POST] /service-ops/ops-cmdb-model-v-h/query-list , method = com.dt.platform.ops.controller.CmdbModelVHController.queryList
[POST] /service-eam/eam-c-cust-inspect-log/delete-by-ids , method = com.dt.platform.eam.controller.CCustInspectLogController.deleteByIds
[POST] /service-ops/ops-cmdb-model-v-h/delete , method = com.dt.platform.ops.controller.CmdbModelVHController.deleteById
[POST] /service-hr/hr-professional-level/delete-by-ids , method = com.dt.platform.hr.controller.ProfessionalLevelController.deleteByIds
[POST] /service-contract/cont-contract/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractController.queryPagedList
[POST] /service-ops/ops-cmdb-model-v-h/delete-by-ids , method = com.dt.platform.ops.controller.CmdbModelVHController.deleteByIds
[POST] /service-contract/cont-contract/query-data , method = com.foxnicweb.web.contract.controller.ContractController.queryData
[POST] /service-eam/eam-c-cust-inspect-log/query-paged-list , method = com.dt.platform.eam.controller.CCustInspectLogController.queryPagedList
[POST] /service-wms/wms-customer/query-paged-list , method = com.dt.platform.wms.controller.CustomerController.queryPagedList
[POST] /service-contract/cont-contract/finish-performance , method = com.foxnicweb.web.contract.controller.ContractController.finishPerformance
[POST] /service-wms/wms-delivery-method/update , method = com.dt.platform.wms.controller.DeliveryMethodController.update
[POST] /service-hr/hr-professional-level/query-paged-list , method = com.dt.platform.hr.controller.ProfessionalLevelController.queryPagedList
[POST] /service-eam/eam-c-cust-inspect-plan/update , method = com.dt.platform.eam.controller.CCustInspectPlanController.update
[POST] /service-wms/wms-delivery-method/save , method = com.dt.platform.wms.controller.DeliveryMethodController.save
[POST] /service-eam/eam-c-cust-inspect-plan/execute , method = com.dt.platform.eam.controller.CCustInspectPlanController.execute
[POST] /service-contract/cont-contract-signer/update , method = com.foxnicweb.web.contract.controller.ContractSignerController.update
[POST] /service-wms/wms-delivery-method/insert , method = com.dt.platform.wms.controller.DeliveryMethodController.insert
[POST] /service-wms/wms-delivery-method/get-by-id , method = com.dt.platform.wms.controller.DeliveryMethodController.getById
[POST] /service-eam/eam-c-cust-inspect-plan/save , method = com.dt.platform.eam.controller.CCustInspectPlanController.save
[POST] /service-hr/hr-rank/update , method = com.dt.platform.hr.controller.RankController.update
[POST] /service-wms/wms-delivery-method/get-by-ids , method = com.dt.platform.wms.controller.DeliveryMethodController.getByIds
[POST] /service-contract/cont-contract-signer/save , method = com.foxnicweb.web.contract.controller.ContractSignerController.save
[POST] /service-wms/wms-delivery-method/query-list , method = com.dt.platform.wms.controller.DeliveryMethodController.queryList
[POST] /service-eam/eam-c-cust-inspect-plan/insert , method = com.dt.platform.eam.controller.CCustInspectPlanController.insert
[POST] /service-wms/wms-delivery-method/delete , method = com.dt.platform.wms.controller.DeliveryMethodController.deleteById
[POST] /service-eam/eam-c-cust-inspect-plan/get-by-id , method = com.dt.platform.eam.controller.CCustInspectPlanController.getById
[POST] /service-hr/hr-rank/save , method = com.dt.platform.hr.controller.RankController.save
[POST] /service-ops/ops-cmdb-model-v-h/query-paged-list , method = com.dt.platform.ops.controller.CmdbModelVHController.queryPagedList
[POST] /service-wms/wms-delivery-method/delete-by-ids , method = com.dt.platform.wms.controller.DeliveryMethodController.deleteByIds
[POST] /service-contract/cont-contract-signer/insert , method = com.foxnicweb.web.contract.controller.ContractSignerController.insert
[POST] /service-eam/eam-c-cust-inspect-plan/get-by-ids , method = com.dt.platform.eam.controller.CCustInspectPlanController.getByIds
[POST] /service-wms/wms-delivery-method/query-paged-list , method = com.dt.platform.wms.controller.DeliveryMethodController.queryPagedList
[POST] /service-contract/cont-contract-signer/get-by-id , method = com.foxnicweb.web.contract.controller.ContractSignerController.getById
[POST] /service-eam/eam-inspection-point-pos/query-paged-list , method = com.dt.platform.eam.controller.InspectionPointPosController.queryPagedList
[POST] /service-ops/ops-cmdb-obj-attribute/update , method = com.dt.platform.ops.controller.CmdbObjAttributeController.update
[POST] /service-contract/cont-contract-signer/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractSignerController.getByIds
[POST] /service-wms/wms-loc-type/update , method = com.dt.platform.wms.controller.LocTypeController.update
[POST] /service-eam/eam-c-cust-inspect-plan/query-list , method = com.dt.platform.eam.controller.CCustInspectPlanController.queryList
[POST] /service-eam/eam-inspection-report/inspection-point-report , method = com.dt.platform.eam.controller.InspectionReportController.inspectionPointReport
[POST] /service-eam/eam-c-cust-inspect-plan/delete , method = com.dt.platform.eam.controller.CCustInspectPlanController.deleteById
[POST] /service-wms/wms-loc-type/save , method = com.dt.platform.wms.controller.LocTypeController.save
[POST] /service-eam/eam-inspection-route/update , method = com.dt.platform.eam.controller.InspectionRouteController.update
[POST] /service-eam/eam-c-cust-inspect-plan/delete-by-ids , method = com.dt.platform.eam.controller.CCustInspectPlanController.deleteByIds
[POST] /service-ops/ops-cmdb-obj-attribute/save , method = com.dt.platform.ops.controller.CmdbObjAttributeController.save
[POST] /service-contract/cont-contract-signer/query-list , method = com.foxnicweb.web.contract.controller.ContractSignerController.queryList
[POST] /service-wms/wms-loc-type/insert , method = com.dt.platform.wms.controller.LocTypeController.insert
[POST] /service-eam/eam-asset-borrow-return/update , method = com.dt.platform.eam.controller.AssetBorrowReturnController.update
[POST] /service-wms/wms-loc-type/get-by-id , method = com.dt.platform.wms.controller.LocTypeController.getById
[POST] /service-eam/eam-inspection-route/save , method = com.dt.platform.eam.controller.InspectionRouteController.save
[POST] /service-eam/eam-c-cust-inspect-plan/query-paged-list , method = com.dt.platform.eam.controller.CCustInspectPlanController.queryPagedList
[POST] /service-ops/ops-cmdb-obj-attribute/insert , method = com.dt.platform.ops.controller.CmdbObjAttributeController.insert
[POST] /service-eam/eam-c-cust-inspect-plan/create-task , method = com.dt.platform.eam.controller.CCustInspectPlanController.createTask
[POST] /service-eam/eam-inspection-route/insert , method = com.dt.platform.eam.controller.InspectionRouteController.insert
[POST] /service-ops/ops-cmdb-obj-attribute/get-by-id , method = com.dt.platform.ops.controller.CmdbObjAttributeController.getById
[POST] /service-wms/wms-loc-type/get-by-ids , method = com.dt.platform.wms.controller.LocTypeController.getByIds
[POST] /service-eam/eam-inspection-route/get-by-id , method = com.dt.platform.eam.controller.InspectionRouteController.getById
[POST] /service-hr/hr-rank/insert , method = com.dt.platform.hr.controller.RankController.insert
[POST] /service-ops/ops-cmdb-obj-attribute/get-by-ids , method = com.dt.platform.ops.controller.CmdbObjAttributeController.getByIds
[POST] /service-eam/eam-c-cust-inspect-task/update , method = com.dt.platform.eam.controller.CCustInspectTaskController.update
[POST] /service-eam/eam-inspection-route/get-by-ids , method = com.dt.platform.eam.controller.InspectionRouteController.getByIds
[POST] /service-wms/wms-loc-type/query-list , method = com.dt.platform.wms.controller.LocTypeController.queryList
[POST] /service-hr/hr-rank/get-by-id , method = com.dt.platform.hr.controller.RankController.getById
[POST] /service-eam/eam-c-cust-inspect-task/start , method = com.dt.platform.eam.controller.CCustInspectTaskController.start
[POST] /service-wms/wms-loc-type/delete , method = com.dt.platform.wms.controller.LocTypeController.deleteById
[POST] /service-eam/eam-inspection-route/query-list , method = com.dt.platform.eam.controller.InspectionRouteController.queryList
[POST] /service-hr/hr-rank/get-by-ids , method = com.dt.platform.hr.controller.RankController.getByIds
[POST] /service-ops/ops-cmdb-obj-attribute/query-list , method = com.dt.platform.ops.controller.CmdbObjAttributeController.queryList
[POST] /service-eam/eam-inspection-route/delete , method = com.dt.platform.eam.controller.InspectionRouteController.deleteById
[POST] /service-wms/wms-loc-type/delete-by-ids , method = com.dt.platform.wms.controller.LocTypeController.deleteByIds
[POST] /service-eam/eam-inspection-route/delete-by-ids , method = com.dt.platform.eam.controller.InspectionRouteController.deleteByIds
[POST] /service-eam/eam-c-cust-inspect-task/save , method = com.dt.platform.eam.controller.CCustInspectTaskController.save
[POST] /service-hr/hr-rank/query-list , method = com.dt.platform.hr.controller.RankController.queryList
[POST] /service-wms/wms-loc-type/query-paged-list , method = com.dt.platform.wms.controller.LocTypeController.queryPagedList
[POST] /service-eam/eam-inspection-route/query-paged-list , method = com.dt.platform.eam.controller.InspectionRouteController.queryPagedList
[POST] /service-hr/hr-rank/delete , method = com.dt.platform.hr.controller.RankController.deleteById
[ALL] /service-eam/eam-inspection-route/export-excel , method = com.dt.platform.eam.controller.InspectionRouteController.exportExcel
[POST] /service-wms/wms-oper-type/update , method = com.dt.platform.wms.controller.OperTypeController.update
[ALL] /service-eam/eam-inspection-route/export-excel-template , method = com.dt.platform.eam.controller.InspectionRouteController.exportExcelTemplate
[POST] /service-eam/eam-c-cust-inspect-task/insert , method = com.dt.platform.eam.controller.CCustInspectTaskController.insert
[POST] /service-hr/hr-rank/delete-by-ids , method = com.dt.platform.hr.controller.RankController.deleteByIds
[ALL] /service-eam/eam-inspection-route/import-excel , method = com.dt.platform.eam.controller.InspectionRouteController.importExcel
[POST] /service-ops/ops-auto-task-m-log/get-by-ids , method = com.dt.platform.ops.controller.AutoTaskMLogController.getByIds
[POST] /service-eam/eam-c-cust-inspect-task/cancel , method = com.dt.platform.eam.controller.CCustInspectTaskController.cancel
[POST] /service-wms/wms-oper-type/save , method = com.dt.platform.wms.controller.OperTypeController.save
[POST] /service-hr/hr-rank/query-paged-list , method = com.dt.platform.hr.controller.RankController.queryPagedList
[POST] /service-eam/eam-c-cust-inspect-task/finish , method = com.dt.platform.eam.controller.CCustInspectTaskController.finish
[POST] /service-wms/wms-oper-type/insert , method = com.dt.platform.wms.controller.OperTypeController.insert
[POST] /service-eam/eam-c-cust-inspect-task/get-by-id , method = com.dt.platform.eam.controller.CCustInspectTaskController.getById
[POST] /service-wms/wms-oper-type/get-by-id , method = com.dt.platform.wms.controller.OperTypeController.getById
[POST] /service-eam/eam-c-cust-inspect-task/get-by-ids , method = com.dt.platform.eam.controller.CCustInspectTaskController.getByIds
[POST] /service-eam/eam-inspection-task/update , method = com.dt.platform.eam.controller.InspectionTaskController.update
[POST] /service-eam/eam-asset-borrow-return/save , method = com.dt.platform.eam.controller.AssetBorrowReturnController.save
[POST] /service-eam/eam-c-cust-inspect-task/inspect , method = com.dt.platform.eam.controller.CCustInspectTaskController.inspect
[POST] /service-wms/wms-oper-type/get-by-ids , method = com.dt.platform.wms.controller.OperTypeController.getByIds
[POST] /service-eam/eam-inspection-task/execute , method = com.dt.platform.eam.controller.InspectionTaskController.execute
[POST] /service-ops/ops-auto-task-m-log/query-list , method = com.dt.platform.ops.controller.AutoTaskMLogController.queryList
[POST] /service-hr/hr-vacation-data/update , method = com.dt.platform.hr.controller.VacationDataController.update
[POST] /service-eam/eam-inspection-task/check , method = com.dt.platform.eam.controller.InspectionTaskController.check
[POST] /service-wms/wms-oper-type/query-list , method = com.dt.platform.wms.controller.OperTypeController.queryList
[POST] /service-wms/wms-oper-type/delete , method = com.dt.platform.wms.controller.OperTypeController.deleteById
[POST] /service-eam/eam-c-cust-inspect-task/query-list , method = com.dt.platform.eam.controller.CCustInspectTaskController.queryList
[POST] /service-ops/ops-auto-task-m-log/delete , method = com.dt.platform.ops.controller.AutoTaskMLogController.deleteById
[POST] /service-wms/wms-oper-type/delete-by-ids , method = com.dt.platform.wms.controller.OperTypeController.deleteByIds
[POST] /service-eam/eam-c-cust-inspect-task/delete , method = com.dt.platform.eam.controller.CCustInspectTaskController.deleteById
[POST] /service-eam/eam-asset-borrow-return/insert , method = com.dt.platform.eam.controller.AssetBorrowReturnController.insert
[POST] /service-hr/hr-vacation-data/save , method = com.dt.platform.hr.controller.VacationDataController.save
[POST] /service-eam/eam-c-cust-inspect-task/delete-by-ids , method = com.dt.platform.eam.controller.CCustInspectTaskController.deleteByIds
[POST] /service-wms/wms-oper-type/query-paged-list , method = com.dt.platform.wms.controller.OperTypeController.queryPagedList
[POST] /service-eam/eam-asset-borrow-return/get-by-id , method = com.dt.platform.eam.controller.AssetBorrowReturnController.getById
[POST] /service-ops/ops-auto-task-m-log/delete-by-ids , method = com.dt.platform.ops.controller.AutoTaskMLogController.deleteByIds
[POST] /service-eam/eam-inspection-task/save , method = com.dt.platform.eam.controller.InspectionTaskController.save
[POST] /service-eam/eam-asset-borrow-return/get-by-ids , method = com.dt.platform.eam.controller.AssetBorrowReturnController.getByIds
[POST] /service-hr/hr-vacation-data/insert , method = com.dt.platform.hr.controller.VacationDataController.insert
[POST] /service-wms/wms-product-attr/update , method = com.dt.platform.wms.controller.ProductAttrController.update
[POST] /service-eam/eam-c-cust-inspect-task/query-paged-list , method = com.dt.platform.eam.controller.CCustInspectTaskController.queryPagedList
[ALL] /service-eam/eam-asset-borrow-return/confirm-operation , method = com.dt.platform.eam.controller.AssetBorrowReturnController.confirmOperation
[POST] /service-hr/hr-vacation-data/get-by-id , method = com.dt.platform.hr.controller.VacationDataController.getById
[POST] /service-eam/eam-c-cust-inspect-task/inspect-scan , method = com.dt.platform.eam.controller.CCustInspectTaskController.inspectScan
[POST] /service-wms/wms-product-attr/save , method = com.dt.platform.wms.controller.ProductAttrController.save
[POST] /service-hr/hr-vacation-data/get-by-ids , method = com.dt.platform.hr.controller.VacationDataController.getByIds
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/update , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.update
[POST] /service-wms/wms-product-attr/insert , method = com.dt.platform.wms.controller.ProductAttrController.insert
[POST] /service-eam/eam-inspection-task/insert , method = com.dt.platform.eam.controller.InspectionTaskController.insert
[POST] /service-ops/ops-auto-task-m-log/log-download , method = com.dt.platform.ops.controller.AutoTaskMLogController.queryPagedList
[POST] /service-wms/wms-product-attr/get-by-id , method = com.dt.platform.wms.controller.ProductAttrController.getById
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/save , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.save
[POST] /service-eam/eam-inspection-task/cancel , method = com.dt.platform.eam.controller.InspectionTaskController.cancel
[POST] /service-hr/hr-vacation-data/query-list , method = com.dt.platform.hr.controller.VacationDataController.queryList
[POST] /service-wms/wms-product-attr/get-by-ids , method = com.dt.platform.wms.controller.ProductAttrController.getByIds
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/insert , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.insert
[POST] /service-eam/eam-inspection-task/finish , method = com.dt.platform.eam.controller.InspectionTaskController.finish
[POST] /service-hr/hr-vacation-data/delete , method = com.dt.platform.hr.controller.VacationDataController.deleteById
[POST] /service-ops/ops-cmdb-obj-attribute/delete , method = com.dt.platform.ops.controller.CmdbObjAttributeController.deleteById
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/get-by-id , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.getById
[POST] /service-wms/wms-product-attr/query-list , method = com.dt.platform.wms.controller.ProductAttrController.queryList
[POST] /service-eam/eam-inspection-task/get-by-id , method = com.dt.platform.eam.controller.InspectionTaskController.getById
[POST] /service-hr/hr-vacation-data/delete-by-ids , method = com.dt.platform.hr.controller.VacationDataController.deleteByIds
[POST] /service-wms/wms-product-attr/delete , method = com.dt.platform.wms.controller.ProductAttrController.deleteById
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/get-by-ids , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.getByIds
[POST] /service-eam/eam-inspection-task/get-by-ids , method = com.dt.platform.eam.controller.InspectionTaskController.getByIds
[POST] /service-ops/ops-cmdb-obj-attribute/delete-by-ids , method = com.dt.platform.ops.controller.CmdbObjAttributeController.deleteByIds
[POST] /service-wms/wms-product-attr/delete-by-ids , method = com.dt.platform.wms.controller.ProductAttrController.deleteByIds
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/query-list , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.queryList
[POST] /service-hr/hr-vacation-data/query-paged-list , method = com.dt.platform.hr.controller.VacationDataController.queryPagedList
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/delete , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.deleteById
[POST] /service-wms/wms-product-attr/query-paged-list , method = com.dt.platform.wms.controller.ProductAttrController.queryPagedList
[POST] /service-contract/cont-contract-signer/delete , method = com.foxnicweb.web.contract.controller.ContractSignerController.deleteById
[POST] /service-ops/ops-cmdb-obj-attribute/query-paged-list , method = com.dt.platform.ops.controller.CmdbObjAttributeController.queryPagedList
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/delete-by-ids , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.deleteByIds
[POST] /service-eam/eam-inspection-task/query-list , method = com.dt.platform.eam.controller.InspectionTaskController.queryList
[POST] /service-hr/hr-work-overtime-data/update , method = com.dt.platform.hr.controller.WorkOvertimeDataController.update
[POST] /service-wms/wms-product-category/update , method = com.dt.platform.wms.controller.ProductCategoryController.update
[POST] /service-eam/eam-c-cust-inspect-tpl-asset/query-paged-list , method = com.dt.platform.eam.controller.CCustInspectTplAssetController.queryPagedList
[POST] /service-eam/eam-inspection-task/delete , method = com.dt.platform.eam.controller.InspectionTaskController.deleteById
[POST] /service-contract/cont-contract-signer/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractSignerController.deleteByIds
[POST] /service-eam/eam-inspection-task/delete-by-ids , method = com.dt.platform.eam.controller.InspectionTaskController.deleteByIds
[POST] /service-eam/eam-c-cust-inspect-tpl/update , method = com.dt.platform.eam.controller.CCustInspectTplController.update
[POST] /service-hr/hr-work-overtime-data/save , method = com.dt.platform.hr.controller.WorkOvertimeDataController.save
[POST] /service-ops/ops-db-backup-info/update , method = com.dt.platform.ops.controller.DbBackupInfoController.update
[POST] /service-eam/eam-c-cust-inspect-tpl/save , method = com.dt.platform.eam.controller.CCustInspectTplController.save
[POST] /service-wms/wms-product-category/save , method = com.dt.platform.wms.controller.ProductCategoryController.save
[POST] /service-hr/hr-work-overtime-data/insert , method = com.dt.platform.hr.controller.WorkOvertimeDataController.insert
[POST] /service-eam/eam-c-cust-inspect-tpl/insert , method = com.dt.platform.eam.controller.CCustInspectTplController.insert
[POST] /service-eam/eam-inspection-task/query-paged-list , method = com.dt.platform.eam.controller.InspectionTaskController.queryPagedList
[POST] /service-hr/hr-work-overtime-data/get-by-id , method = com.dt.platform.hr.controller.WorkOvertimeDataController.getById
[POST] /service-wms/wms-product-category/insert , method = com.dt.platform.wms.controller.ProductCategoryController.insert
[POST] /service-eam/eam-c-cust-inspect-tpl/get-by-id , method = com.dt.platform.eam.controller.CCustInspectTplController.getById
[POST] /service-ops/ops-db-backup-info/save , method = com.dt.platform.ops.controller.DbBackupInfoController.save
[ALL] /service-eam/eam-inspection-task/export-excel , method = com.dt.platform.eam.controller.InspectionTaskController.exportExcel
[POST] /service-hr/hr-work-overtime-data/get-by-ids , method = com.dt.platform.hr.controller.WorkOvertimeDataController.getByIds
[POST] /service-eam/eam-c-cust-inspect-tpl/get-by-ids , method = com.dt.platform.eam.controller.CCustInspectTplController.getByIds
[POST] /service-wms/wms-product-category/get-by-id , method = com.dt.platform.wms.controller.ProductCategoryController.getById
[ALL] /service-eam/eam-inspection-task/export-excel-template , method = com.dt.platform.eam.controller.InspectionTaskController.exportExcelTemplate
[ALL] /service-eam/eam-inspection-task/import-excel , method = com.dt.platform.eam.controller.InspectionTaskController.importExcel
[POST] /service-wms/wms-product-category/get-by-ids , method = com.dt.platform.wms.controller.ProductCategoryController.getByIds
[POST] /service-eam/eam-c-cust-inspect-tpl/query-list , method = com.dt.platform.eam.controller.CCustInspectTplController.queryList
[POST] /service-hr/hr-work-overtime-data/query-list , method = com.dt.platform.hr.controller.WorkOvertimeDataController.queryList
[POST] /service-eam/eam-c-cust-inspect-tpl/delete , method = com.dt.platform.eam.controller.CCustInspectTplController.deleteById
[POST] /service-contract/cont-contract-signer/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractSignerController.queryPagedList
[POST] /service-ops/ops-db-backup-info/insert , method = com.dt.platform.ops.controller.DbBackupInfoController.insert
[POST] /service-hr/hr-work-overtime-data/delete , method = com.dt.platform.hr.controller.WorkOvertimeDataController.deleteById
[POST] /service-wms/wms-product-category/query-list , method = com.dt.platform.wms.controller.ProductCategoryController.queryList
[POST] /service-eam/eam-c-cust-inspect-tpl/delete-by-ids , method = com.dt.platform.eam.controller.CCustInspectTplController.deleteByIds
[POST] /service-ops/ops-db-backup-info/get-by-id , method = com.dt.platform.ops.controller.DbBackupInfoController.getById
[POST] /service-hr/hr-work-overtime-data/delete-by-ids , method = com.dt.platform.hr.controller.WorkOvertimeDataController.deleteByIds
[POST] /service-wms/wms-product-category/delete , method = com.dt.platform.wms.controller.ProductCategoryController.deleteById
[POST] /service-eam/eam-c-cust-inspect-tpl/query-paged-list , method = com.dt.platform.eam.controller.CCustInspectTplController.queryPagedList
[POST] /service-ops/ops-db-backup-info/get-by-ids , method = com.dt.platform.ops.controller.DbBackupInfoController.getByIds
[POST] /service-eam/eam-c-cust-inspect-tpl/query-asset-paged-list , method = com.dt.platform.eam.controller.CCustInspectTplController.queryPagedListBySelected
[POST] /service-wms/wms-product-category/delete-by-ids , method = com.dt.platform.wms.controller.ProductCategoryController.deleteByIds
[POST] /service-contract/cont-contract-attachment/update , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.update
[POST] /service-hr/hr-work-overtime-data/query-paged-list , method = com.dt.platform.hr.controller.WorkOvertimeDataController.queryPagedList
[POST] /service-eam/eam-c-cust-inspect-tpl/remove-asset , method = com.dt.platform.eam.controller.CCustInspectTplController.removeAsset
[ALL] /business/hr/assessment_grade/assessment_grade_form.html , method = com.dt.platform.hr.page.AssessmentGradePageController.form
[ALL] /business/hr/assessment_grade/assessment_grade_list.html , method = com.dt.platform.hr.page.AssessmentGradePageController.list
[POST] /service-eam/eam-c-cust-inspect-user-r/update , method = com.dt.platform.eam.controller.CCustInspectUserRController.update
[POST] /service-wms/wms-product-category/query-paged-list , method = com.dt.platform.wms.controller.ProductCategoryController.queryPagedList
[ALL] /business/hr/attendance_data/attendance_data_form.html , method = com.dt.platform.hr.page.AttendanceDataPageController.form
[POST] /service-ops/ops-db-backup-info/query-list , method = com.dt.platform.ops.controller.DbBackupInfoController.queryList
[ALL] /business/hr/attendance_data/attendance_data_list.html , method = com.dt.platform.hr.page.AttendanceDataPageController.list
[POST] /service-eam/eam-c-cust-inspect-user-r/save , method = com.dt.platform.eam.controller.CCustInspectUserRController.save
[ALL] /business/hr/attendance_record_import/attendance_record_import_form.html , method = com.dt.platform.hr.page.AttendanceRecordImportPageController.form
[POST] /service-contract/cont-contract-attachment/save , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.save
[POST] /service-ops/ops-db-backup-info/delete , method = com.dt.platform.ops.controller.DbBackupInfoController.deleteById
[ALL] /business/hr/attendance_record_import/attendance_record_import_list.html , method = com.dt.platform.hr.page.AttendanceRecordImportPageController.list
[POST] /service-eam/eam-c-cust-inspect-user-r/insert , method = com.dt.platform.eam.controller.CCustInspectUserRController.insert
[ALL] /business/hr/attendance_record/attendance_record_form.html , method = com.dt.platform.hr.page.AttendanceRecordPageController.form
[POST] /service-ops/ops-db-backup-info/delete-by-ids , method = com.dt.platform.ops.controller.DbBackupInfoController.deleteByIds
[ALL] /business/hr/attendance_record/attendance_record_list.html , method = com.dt.platform.hr.page.AttendanceRecordPageController.list
[POST] /service-eam/eam-c-cust-inspect-user-r/get-by-id , method = com.dt.platform.eam.controller.CCustInspectUserRController.getById
[ALL] /business/hr/business_travel_data/business_travel_data_form.html , method = com.dt.platform.hr.page.BusinessTravelDataPageController.form
[POST] /service-wms/wms-product/update , method = com.dt.platform.wms.controller.ProductController.update
[POST] /service-eam/eam-c-cust-inspect-user-r/get-by-ids , method = com.dt.platform.eam.controller.CCustInspectUserRController.getByIds
[POST] /service-contract/cont-contract-attachment/insert , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.insert
[ALL] /business/hr/business_travel_data/business_travel_data_list.html , method = com.dt.platform.hr.page.BusinessTravelDataPageController.list
[ALL] /business/hr/certificate_level/certificate_level_form.html , method = com.dt.platform.hr.page.CertificateLevelPageController.form
[POST] /service-eam/eam-c-cust-inspect-user-r/query-list , method = com.dt.platform.eam.controller.CCustInspectUserRController.queryList
[ALL] /business/hr/certificate_level/certificate_level_list.html , method = com.dt.platform.hr.page.CertificateLevelPageController.list
[POST] /service-ops/ops-db-backup-info/query-paged-list , method = com.dt.platform.ops.controller.DbBackupInfoController.queryPagedList
[POST] /service-contract/cont-contract-attachment/get-by-id , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.getById
[ALL] /business/hr/certificate/certificate_form.html , method = com.dt.platform.hr.page.CertificatePageController.form
[POST] /service-eam/eam-c-cust-inspect-user-r/delete , method = com.dt.platform.eam.controller.CCustInspectUserRController.deleteById
[ALL] /business/hr/certificate/certificate_list.html , method = com.dt.platform.hr.page.CertificatePageController.list
[ALL] /business/hr/certificate_type/certificate_type_form.html , method = com.dt.platform.hr.page.CertificateTypePageController.form
[POST] /service-eam/eam-c-cust-inspect-user-r/delete-by-ids , method = com.dt.platform.eam.controller.CCustInspectUserRController.deleteByIds
[POST] /service-wms/wms-product/save , method = com.dt.platform.wms.controller.ProductController.save
[POST] /service-contract/cont-contract-attachment/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.getByIds
[ALL] /business/hr/certificate_type/certificate_type_list.html , method = com.dt.platform.hr.page.CertificateTypePageController.list
[POST] /service-eam/eam-c-cust-inspect-user-r/query-paged-list , method = com.dt.platform.eam.controller.CCustInspectUserRController.queryPagedList
[POST] /service-ops/ops-db-backup-log/update , method = com.dt.platform.ops.controller.DbBackupLogController.update
[ALL] /business/hr/contract_org/contract_org_form.html , method = com.dt.platform.hr.page.ContractOrgPageController.form
[ALL] /business/hr/contract_org/contract_org_list.html , method = com.dt.platform.hr.page.ContractOrgPageController.list
[POST] /service-eam/eam-c-cust-inspect-user-s/update , method = com.dt.platform.eam.controller.CCustInspectUserSController.update
[ALL] /business/hr/person_cert/person_cert_form.html , method = com.dt.platform.hr.page.PersonCertPageController.form
[ALL] /business/hr/person_cert/person_cert_list.html , method = com.dt.platform.hr.page.PersonCertPageController.list
[POST] /service-eam/eam-c-cust-inspect-user-s/save , method = com.dt.platform.eam.controller.CCustInspectUserSController.save
[POST] /service-contract/cont-contract-attachment/query-list , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.queryList
[POST] /service-wms/wms-product/insert , method = com.dt.platform.wms.controller.ProductController.insert
[POST] /service-eam/eam-c-cust-inspect-user-s/insert , method = com.dt.platform.eam.controller.CCustInspectUserSController.insert
[POST] /service-ops/ops-db-backup-log/save , method = com.dt.platform.ops.controller.DbBackupLogController.save
[POST] /service-wms/wms-product/get-by-id , method = com.dt.platform.wms.controller.ProductController.getById
[POST] /service-eam/eam-c-cust-inspect-user-s/get-by-id , method = com.dt.platform.eam.controller.CCustInspectUserSController.getById
[POST] /service-contract/cont-contract-attachment/delete , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.deleteById
[POST] /service-wms/wms-product/get-by-ids , method = com.dt.platform.wms.controller.ProductController.getByIds
[POST] /service-eam/eam-c-cust-inspect-user-s/get-by-ids , method = com.dt.platform.eam.controller.CCustInspectUserSController.getByIds
[POST] /service-ops/ops-auto-task-m-log/query-paged-list , method = com.dt.platform.ops.controller.AutoTaskMLogController.queryPagedList
[POST] /service-eam/eam-c-cust-inspect-user-s/query-list , method = com.dt.platform.eam.controller.CCustInspectUserSController.queryList
[POST] /service-contract/cont-contract-attachment/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.deleteByIds
[POST] /service-ops/ops-auto-task-node/update , method = com.dt.platform.ops.controller.AutoTaskNodeController.update
[POST] /service-ops/ops-db-backup-log/insert , method = com.dt.platform.ops.controller.DbBackupLogController.insert
[POST] /service-eam/eam-c-cust-inspect-user-s/delete , method = com.dt.platform.eam.controller.CCustInspectUserSController.deleteById
[POST] /service-ops/ops-db-backup-log/parse-log , method = com.dt.platform.ops.controller.DbBackupLogController.parseLog
[POST] /service-ops/ops-auto-task-node/save , method = com.dt.platform.ops.controller.AutoTaskNodeController.save
[POST] /service-ops/ops-db-backup-log/get-by-id , method = com.dt.platform.ops.controller.DbBackupLogController.getById
[POST] /service-eam/eam-c-cust-inspect-user-s/delete-by-ids , method = com.dt.platform.eam.controller.CCustInspectUserSController.deleteByIds
[POST] /service-wms/wms-product/query-list , method = com.dt.platform.wms.controller.ProductController.queryList
[POST] /service-ops/ops-db-backup-log/get-by-ids , method = com.dt.platform.ops.controller.DbBackupLogController.getByIds
[POST] /service-ops/ops-auto-task-node/insert , method = com.dt.platform.ops.controller.AutoTaskNodeController.insert
[POST] /service-wms/wms-product/delete , method = com.dt.platform.wms.controller.ProductController.deleteById
[POST] /service-eam/eam-c-cust-inspect-user-s/query-paged-list , method = com.dt.platform.eam.controller.CCustInspectUserSController.queryPagedList
[POST] /service-contract/cont-contract-attachment/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractAttachmentController.queryPagedList
[POST] /service-ops/ops-auto-task-node/get-by-id , method = com.dt.platform.ops.controller.AutoTaskNodeController.getById
[POST] /service-wms/wms-product/delete-by-ids , method = com.dt.platform.wms.controller.ProductController.deleteByIds
[POST] /service-ops/ops-auto-task-node/get-by-ids , method = com.dt.platform.ops.controller.AutoTaskNodeController.getByIds
[POST] /service-ops/ops-db-backup-log/query-list , method = com.dt.platform.ops.controller.DbBackupLogController.queryList
[POST] /service-ops/ops-auto-task-node/query-list , method = com.dt.platform.ops.controller.AutoTaskNodeController.queryList
[POST] /service-eam/eam-c-cust-repair-apply/update , method = com.dt.platform.eam.controller.CCustRepairApplyController.update
[POST] /service-ops/ops-db-backup-log/delete , method = com.dt.platform.ops.controller.DbBackupLogController.deleteById
[POST] /service-ops/ops-auto-task-node/delete , method = com.dt.platform.ops.controller.AutoTaskNodeController.deleteById
[POST] /service-ops/ops-db-backup-log/delete-by-ids , method = com.dt.platform.ops.controller.DbBackupLogController.deleteByIds
[POST] /service-ops/ops-auto-task-node/delete-by-ids , method = com.dt.platform.ops.controller.AutoTaskNodeController.deleteByIds
[POST] /service-wms/wms-product/query-paged-list , method = com.dt.platform.wms.controller.ProductController.queryPagedList
[POST] /service-contract/cont-contract-accept/update , method = com.foxnicweb.web.contract.controller.ContractAcceptController.update
[POST] /service-ops/ops-auto-task-node/query-paged-list , method = com.dt.platform.ops.controller.AutoTaskNodeController.queryPagedList
[POST] /service-eam/eam-c-cust-repair-apply/save , method = com.dt.platform.eam.controller.CCustRepairApplyController.save
[POST] /service-wms/wms-receive-method/update , method = com.dt.platform.wms.controller.ReceiveMethodController.update
[POST] /service-wms/wms-receive-method/save , method = com.dt.platform.wms.controller.ReceiveMethodController.save
[POST] /service-ops/ops-auto-voucher/update , method = com.dt.platform.ops.controller.AutoVoucherController.update
[POST] /service-ops/ops-db-backup-log/query-paged-list , method = com.dt.platform.ops.controller.DbBackupLogController.queryPagedList
[POST] /service-eam/eam-inspection-task-point/update , method = com.dt.platform.eam.controller.InspectionTaskPointController.update
[POST] /service-wms/wms-receive-method/insert , method = com.dt.platform.wms.controller.ReceiveMethodController.insert
[POST] /service-eam/eam-c-cust-repair-apply/insert , method = com.dt.platform.eam.controller.CCustRepairApplyController.insert
[POST] /service-ops/ops-auto-voucher/save , method = com.dt.platform.ops.controller.AutoVoucherController.save
[POST] /service-wms/wms-receive-method/get-by-id , method = com.dt.platform.wms.controller.ReceiveMethodController.getById
[POST] /service-contract/cont-contract-accept/save , method = com.foxnicweb.web.contract.controller.ContractAcceptController.save
[POST] /service-eam/eam-c-cust-repair-apply/cancel , method = com.dt.platform.eam.controller.CCustRepairApplyController.cancel
[POST] /service-wms/wms-receive-method/get-by-ids , method = com.dt.platform.wms.controller.ReceiveMethodController.getByIds
[POST] /service-ops/ops-db-backup-record/update , method = com.dt.platform.ops.controller.DbBackupRecordController.update
[POST] /service-ops/ops-auto-voucher/insert , method = com.dt.platform.ops.controller.AutoVoucherController.insert
[POST] /service-eam/eam-c-cust-repair-apply/finish , method = com.dt.platform.eam.controller.CCustRepairApplyController.finish
[POST] /service-wms/wms-receive-method/query-list , method = com.dt.platform.wms.controller.ReceiveMethodController.queryList
[POST] /service-ops/ops-auto-voucher/get-by-id , method = com.dt.platform.ops.controller.AutoVoucherController.getById
[POST] /service-eam/eam-c-cust-repair-apply/get-by-id , method = com.dt.platform.eam.controller.CCustRepairApplyController.getById
[POST] /service-wms/wms-receive-method/delete , method = com.dt.platform.wms.controller.ReceiveMethodController.deleteById
[POST] /service-eam/eam-inspection-task-point/save , method = com.dt.platform.eam.controller.InspectionTaskPointController.save
[POST] /service-ops/ops-auto-voucher/get-by-ids , method = com.dt.platform.ops.controller.AutoVoucherController.getByIds
[POST] /service-wms/wms-receive-method/delete-by-ids , method = com.dt.platform.wms.controller.ReceiveMethodController.deleteByIds
[POST] /service-eam/eam-c-cust-repair-apply/get-by-ids , method = com.dt.platform.eam.controller.CCustRepairApplyController.getByIds
[POST] /service-ops/ops-db-backup-record/save , method = com.dt.platform.ops.controller.DbBackupRecordController.save
[POST] /service-eam/eam-c-cust-repair-apply/receive , method = com.dt.platform.eam.controller.CCustRepairApplyController.receive
[POST] /service-wms/wms-receive-method/query-paged-list , method = com.dt.platform.wms.controller.ReceiveMethodController.queryPagedList
[POST] /service-ops/ops-auto-voucher/query-list , method = com.dt.platform.ops.controller.AutoVoucherController.queryList
[POST] /service-eam/eam-c-cust-repair-apply/answer , method = com.dt.platform.eam.controller.CCustRepairApplyController.ans
[POST] /service-contract/cont-contract-accept/insert , method = com.foxnicweb.web.contract.controller.ContractAcceptController.insert
[POST] /service-ops/ops-auto-voucher/delete , method = com.dt.platform.ops.controller.AutoVoucherController.deleteById
[POST] /service-wms/wms-region/update , method = com.dt.platform.wms.controller.RegionController.update
[POST] /service-eam/eam-inspection-task-point/insert , method = com.dt.platform.eam.controller.InspectionTaskPointController.insert
[POST] /service-ops/ops-db-backup-record/insert , method = com.dt.platform.ops.controller.DbBackupRecordController.insert
[POST] /service-ops/ops-auto-voucher/delete-by-ids , method = com.dt.platform.ops.controller.AutoVoucherController.deleteByIds
[POST] /service-eam/eam-inspection-task-point/get-by-id , method = com.dt.platform.eam.controller.InspectionTaskPointController.getById
[POST] /service-wms/wms-region/save , method = com.dt.platform.wms.controller.RegionController.save
[POST] /service-contract/cont-contract-accept/get-by-id , method = com.foxnicweb.web.contract.controller.ContractAcceptController.getById
[POST] /service-ops/ops-db-backup-record/get-by-id , method = com.dt.platform.ops.controller.DbBackupRecordController.getById
[POST] /service-ops/ops-auto-voucher/query-paged-list , method = com.dt.platform.ops.controller.AutoVoucherController.queryPagedList
[POST] /service-eam/eam-inspection-task-point/get-by-ids , method = com.dt.platform.eam.controller.InspectionTaskPointController.getByIds
[POST] /service-wms/wms-region/insert , method = com.dt.platform.wms.controller.RegionController.insert
[POST] /service-ops/ops-db-backup-record/get-by-ids , method = com.dt.platform.ops.controller.DbBackupRecordController.getByIds
[POST] /service-wms/wms-region/get-by-id , method = com.dt.platform.wms.controller.RegionController.getById
[POST] /service-contract/cont-contract-accept/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractAcceptController.getByIds
[POST] /service-eam/eam-asset-borrow-return/query-list , method = com.dt.platform.eam.controller.AssetBorrowReturnController.queryList
[POST] /service-ops/ops-certificate/update , method = com.dt.platform.ops.controller.CertificateController.update
[POST] /service-wms/wms-region/get-by-ids , method = com.dt.platform.wms.controller.RegionController.getByIds
[POST] /service-ops/ops-db-backup-record/query-list , method = com.dt.platform.ops.controller.DbBackupRecordController.queryList
[POST] /service-eam/eam-asset-borrow-return/delete , method = com.dt.platform.eam.controller.AssetBorrowReturnController.deleteById
[POST] /service-eam/eam-inspection-task-point/query-list , method = com.dt.platform.eam.controller.InspectionTaskPointController.queryList
[POST] /service-ops/ops-db-backup-record/delete , method = com.dt.platform.ops.controller.DbBackupRecordController.deleteById
[POST] /service-wms/wms-region/query-list , method = com.dt.platform.wms.controller.RegionController.queryList
[POST] /service-eam/eam-asset-borrow-return/delete-by-ids , method = com.dt.platform.eam.controller.AssetBorrowReturnController.deleteByIds
[POST] /service-eam/eam-inspection-task-point/delete , method = com.dt.platform.eam.controller.InspectionTaskPointController.deleteById
[POST] /service-wms/wms-region/delete , method = com.dt.platform.wms.controller.RegionController.deleteById
[POST] /service-eam/eam-inspection-task-point/delete-by-ids , method = com.dt.platform.eam.controller.InspectionTaskPointController.deleteByIds
[POST] /service-ops/ops-db-backup-record/delete-by-ids , method = com.dt.platform.ops.controller.DbBackupRecordController.deleteByIds
[POST] /service-ops/ops-certificate/save , method = com.dt.platform.ops.controller.CertificateController.save
[POST] /service-wms/wms-region/delete-by-ids , method = com.dt.platform.wms.controller.RegionController.deleteByIds
[POST] /service-eam/eam-c-cust-repair-apply/query-list , method = com.dt.platform.eam.controller.CCustRepairApplyController.queryList
[POST] /service-wms/wms-region/query-paged-list , method = com.dt.platform.wms.controller.RegionController.queryPagedList
[POST] /service-eam/eam-asset-borrow-return/query-paged-list , method = com.dt.platform.eam.controller.AssetBorrowReturnController.queryPagedList
[POST] /service-ops/ops-db-backup-record/query-paged-list , method = com.dt.platform.ops.controller.DbBackupRecordController.queryPagedList
[POST] /service-ops/ops-certificate/insert , method = com.dt.platform.ops.controller.CertificateController.insert
[POST] /service-eam/eam-asset-category/query-nodes-by-code , method = com.dt.platform.eam.controller.AssetCategoryController.queryNodesByCode
[POST] /service-wms/wms-storehouse-attr-v/update , method = com.dt.platform.wms.controller.StorehouseAttrVController.update
[POST] /service-eam/eam-inspection-task-point/query-paged-list , method = com.dt.platform.eam.controller.InspectionTaskPointController.queryPagedList
[POST] /service-eam/eam-asset-category/query-nodes , method = com.dt.platform.eam.controller.AssetCategoryController.queryNodes
[POST] /service-ops/ops-certificate/get-by-id , method = com.dt.platform.ops.controller.CertificateController.getById
[POST] /service-ops/ops-db-data-loc/update , method = com.dt.platform.ops.controller.DbDataLocController.update
[ALL] /service-eam/eam-inspection-task-point/export-excel , method = com.dt.platform.eam.controller.InspectionTaskPointController.exportExcel
[POST] /service-eam/eam-asset-category/query-catalog-attribute-by-asset-category , method = com.dt.platform.eam.controller.AssetCategoryController.queryCatalogAttributeByAssetCategory
[POST] /service-wms/wms-storehouse-attr-v/save , method = com.dt.platform.wms.controller.StorehouseAttrVController.save
[POST] /service-ops/ops-certificate/get-by-ids , method = com.dt.platform.ops.controller.CertificateController.getByIds
[ALL] /service-eam/eam-inspection-task-point/export-excel-template , method = com.dt.platform.eam.controller.InspectionTaskPointController.exportExcelTemplate
[POST] /service-ops/ops-db-data-loc/save , method = com.dt.platform.ops.controller.DbDataLocController.save
[POST] /service-eam/eam-c-cust-repair-apply/delete , method = com.dt.platform.eam.controller.CCustRepairApplyController.deleteById
[POST] /service-wms/wms-storehouse-attr-v/insert , method = com.dt.platform.wms.controller.StorehouseAttrVController.insert
[ALL] /service-eam/eam-inspection-task-point/import-excel , method = com.dt.platform.eam.controller.InspectionTaskPointController.importExcel
[POST] /service-ops/ops-db-data-loc/insert , method = com.dt.platform.ops.controller.DbDataLocController.insert
[POST] /service-wms/wms-storehouse-attr-v/get-by-id , method = com.dt.platform.wms.controller.StorehouseAttrVController.getById
[POST] /service-ops/ops-certificate/query-list , method = com.dt.platform.ops.controller.CertificateController.queryList
[POST] /service-eam/eam-asset-collection/update , method = com.dt.platform.eam.controller.AssetCollectionController.update
[POST] /service-ops/ops-db-data-loc/get-by-id , method = com.dt.platform.ops.controller.DbDataLocController.getById
[POST] /service-wms/wms-storehouse-attr-v/get-by-ids , method = com.dt.platform.wms.controller.StorehouseAttrVController.getByIds
[POST] /service-eam/eam-c-cust-repair-apply/delete-by-ids , method = com.dt.platform.eam.controller.CCustRepairApplyController.deleteByIds
[POST] /service-ops/ops-certificate/delete , method = com.dt.platform.ops.controller.CertificateController.deleteById
[POST] /service-ops/ops-db-data-loc/get-by-ids , method = com.dt.platform.ops.controller.DbDataLocController.getByIds
[POST] /service-wms/wms-storehouse-attr-v/query-list , method = com.dt.platform.wms.controller.StorehouseAttrVController.queryList
[POST] /service-ops/ops-certificate/delete-by-ids , method = com.dt.platform.ops.controller.CertificateController.deleteByIds
[POST] /service-ops/ops-db-data-loc/query-list , method = com.dt.platform.ops.controller.DbDataLocController.queryList
[POST] /service-wms/wms-storehouse-attr-v/delete , method = com.dt.platform.wms.controller.StorehouseAttrVController.deleteById
[POST] /service-eam/eam-inventory-asset/update , method = com.dt.platform.eam.controller.InventoryAssetController.update
[POST] /service-eam/eam-asset-collection/save , method = com.dt.platform.eam.controller.AssetCollectionController.save
[POST] /service-ops/ops-db-data-loc/delete , method = com.dt.platform.ops.controller.DbDataLocController.deleteById
[POST] /service-wms/wms-storehouse-attr-v/delete-by-ids , method = com.dt.platform.wms.controller.StorehouseAttrVController.deleteByIds
[POST] /service-ops/ops-db-data-loc/delete-by-ids , method = com.dt.platform.ops.controller.DbDataLocController.deleteByIds
[POST] /service-ops/ops-certificate/query-paged-list , method = com.dt.platform.ops.controller.CertificateController.queryPagedList
[ALL] /service-ops/ops-certificate/export-excel , method = com.dt.platform.ops.controller.CertificateController.exportExcel
[POST] /service-wms/wms-storehouse-attr-v/query-paged-list , method = com.dt.platform.wms.controller.StorehouseAttrVController.queryPagedList
[ALL] /service-ops/ops-certificate/export-excel-template , method = com.dt.platform.ops.controller.CertificateController.exportExcelTemplate
[POST] /service-ops/ops-db-data-loc/query-paged-list , method = com.dt.platform.ops.controller.DbDataLocController.queryPagedList
[POST] /service-eam/eam-asset-collection/insert , method = com.dt.platform.eam.controller.AssetCollectionController.insert
[ALL] /service-ops/ops-certificate/import-excel , method = com.dt.platform.ops.controller.CertificateController.importExcel
[POST] /service-wms/wms-storehouse/update , method = com.dt.platform.wms.controller.StorehouseController.update
[POST] /service-eam/eam-asset-collection/get-by-id , method = com.dt.platform.eam.controller.AssetCollectionController.getById
[POST] /service-eam/eam-inventory-asset/save , method = com.dt.platform.eam.controller.InventoryAssetController.save
[POST] /service-eam/eam-c-cust-repair-apply/query-paged-list , method = com.dt.platform.eam.controller.CCustRepairApplyController.queryPagedList
[POST] /service-eam/eam-asset-collection/get-by-ids , method = com.dt.platform.eam.controller.AssetCollectionController.getByIds
[POST] /service-ops/ops-db-env-info/update , method = com.dt.platform.ops.controller.DbEnvInfoController.update
[POST] /service-wms/wms-storehouse/save , method = com.dt.platform.wms.controller.StorehouseController.save
[ALL] /service-eam/eam-asset-collection/confirm-operation , method = com.dt.platform.eam.controller.AssetCollectionController.confirmOperation
[POST] /service-ops/ops-certificate-item/update , method = com.dt.platform.ops.controller.CertificateItemController.update
[POST] /service-eam/eam-asset-collection/bpm-callback , method = com.dt.platform.eam.controller.AssetCollectionController.onProcessCallback
[POST] /service-wms/wms-storehouse/insert , method = com.dt.platform.wms.controller.StorehouseController.insert
[POST] /service-ops/ops-db-env-info/save , method = com.dt.platform.ops.controller.DbEnvInfoController.save
[POST] /service-wms/wms-storehouse/get-by-id , method = com.dt.platform.wms.controller.StorehouseController.getById
[POST] /service-eam/eam-c-cust-repiar-item/update , method = com.dt.platform.eam.controller.CCustRepiarItemController.update
[POST] /service-ops/ops-certificate-item/save , method = com.dt.platform.ops.controller.CertificateItemController.save
[POST] /service-eam/eam-inventory-asset/insert , method = com.dt.platform.eam.controller.InventoryAssetController.insert
[POST] /service-wms/wms-storehouse/get-by-ids , method = com.dt.platform.wms.controller.StorehouseController.getByIds
[POST] /service-ops/ops-db-env-info/insert , method = com.dt.platform.ops.controller.DbEnvInfoController.insert
[POST] /service-eam/eam-asset-collection/query-list , method = com.dt.platform.eam.controller.AssetCollectionController.queryList
[POST] /service-eam/eam-inventory-asset/get-by-id , method = com.dt.platform.eam.controller.InventoryAssetController.getById
[POST] /service-ops/ops-db-env-info/get-by-id , method = com.dt.platform.ops.controller.DbEnvInfoController.getById
[POST] /service-wms/wms-storehouse/query-list , method = com.dt.platform.wms.controller.StorehouseController.queryList
[POST] /service-eam/eam-inventory-asset/get-by-ids , method = com.dt.platform.eam.controller.InventoryAssetController.getByIds
[POST] /service-eam/eam-asset-collection/delete , method = com.dt.platform.eam.controller.AssetCollectionController.deleteById
[POST] /service-ops/ops-certificate-item/insert , method = com.dt.platform.ops.controller.CertificateItemController.insert
[POST] /service-ops/ops-db-env-info/get-by-ids , method = com.dt.platform.ops.controller.DbEnvInfoController.getByIds
[POST] /service-eam/eam-asset-collection/delete-by-ids , method = com.dt.platform.eam.controller.AssetCollectionController.deleteByIds
[POST] /service-ops/ops-certificate-item/get-by-id , method = com.dt.platform.ops.controller.CertificateItemController.getById
[POST] /service-eam/eam-c-cust-repiar-item/save , method = com.dt.platform.eam.controller.CCustRepiarItemController.save
[POST] /service-ops/ops-certificate-item/get-by-ids , method = com.dt.platform.ops.controller.CertificateItemController.getByIds
[POST] /service-ops/ops-db-env-info/query-list , method = com.dt.platform.ops.controller.DbEnvInfoController.queryList
[POST] /service-ops/ops-db-env-info/delete , method = com.dt.platform.ops.controller.DbEnvInfoController.deleteById
[POST] /service-eam/eam-asset-collection/query-paged-list , method = com.dt.platform.eam.controller.AssetCollectionController.queryPagedList
[POST] /service-workorder/wo-service-desk/update , method = com.dt.platform.workorder.controller.ServiceDeskController.update
[POST] /service-eam/eam-inventory-asset/query-list , method = com.dt.platform.eam.controller.InventoryAssetController.queryList
[POST] /service-ops/ops-certificate-item/query-list , method = com.dt.platform.ops.controller.CertificateItemController.queryList
[ALL] /service-eam/eam-asset-collection/export-excel , method = com.dt.platform.eam.controller.AssetCollectionController.exportExcel
[POST] /service-eam/eam-c-cust-repiar-item/insert , method = com.dt.platform.eam.controller.CCustRepiarItemController.insert
[POST] /service-eam/eam-inventory-asset/delete , method = com.dt.platform.eam.controller.InventoryAssetController.deleteById
[ALL] /service-eam/eam-asset-collection/export-excel-template , method = com.dt.platform.eam.controller.AssetCollectionController.exportExcelTemplate
[POST] /service-ops/ops-certificate-item/delete , method = com.dt.platform.ops.controller.CertificateItemController.deleteById
[ALL] /service-eam/eam-asset-collection/import-excel , method = com.dt.platform.eam.controller.AssetCollectionController.importExcel
[POST] /service-eam/eam-inventory-asset/delete-by-ids , method = com.dt.platform.eam.controller.InventoryAssetController.deleteByIds
[POST] /service-workorder/wo-service-desk/save , method = com.dt.platform.workorder.controller.ServiceDeskController.save
[POST] /service-ops/ops-certificate-item/delete-by-ids , method = com.dt.platform.ops.controller.CertificateItemController.deleteByIds
[POST] /service-contract/cont-contract-accept/query-list , method = com.foxnicweb.web.contract.controller.ContractAcceptController.queryList
[POST] /service-eam/eam-c-cust-repiar-item/get-by-id , method = com.dt.platform.eam.controller.CCustRepiarItemController.getById
[POST] /service-contract/cont-contract-accept/delete , method = com.foxnicweb.web.contract.controller.ContractAcceptController.deleteById
[POST] /service-contract/cont-contract-accept/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractAcceptController.deleteByIds
[POST] /service-ops/ops-certificate-item/query-paged-list , method = com.dt.platform.ops.controller.CertificateItemController.queryPagedList
[POST] /service-workorder/wo-service-desk/insert , method = com.dt.platform.workorder.controller.ServiceDeskController.insert
[POST] /service-eam/eam-asset-collection-return/update , method = com.dt.platform.eam.controller.AssetCollectionReturnController.update
[ALL] /service-ops/ops-certificate-item/export-excel , method = com.dt.platform.ops.controller.CertificateItemController.exportExcel
[POST] /service-eam/eam-inventory-asset/query-paged-list , method = com.dt.platform.eam.controller.InventoryAssetController.queryPagedList
[POST] /service-workorder/wo-service-desk/get-by-id , method = com.dt.platform.workorder.controller.ServiceDeskController.getById
[ALL] /service-ops/ops-certificate-item/export-excel-template , method = com.dt.platform.ops.controller.CertificateItemController.exportExcelTemplate
[ALL] /service-eam/eam-inventory-asset/export-excel , method = com.dt.platform.eam.controller.InventoryAssetController.exportExcel
[ALL] /service-ops/ops-certificate-item/import-excel , method = com.dt.platform.ops.controller.CertificateItemController.importExcel
[POST] /service-workorder/wo-service-desk/get-by-ids , method = com.dt.platform.workorder.controller.ServiceDeskController.getByIds
[ALL] /service-eam/eam-inventory-asset/export-excel-template , method = com.dt.platform.eam.controller.InventoryAssetController.exportExcelTemplate
[POST] /service-contract/cont-contract-accept/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractAcceptController.queryPagedList
[ALL] /service-eam/eam-inventory-asset/import-excel , method = com.dt.platform.eam.controller.InventoryAssetController.importExcel
[POST] /service-eam/eam-asset-collection-return/save , method = com.dt.platform.eam.controller.AssetCollectionReturnController.save
[POST] /service-ops/ops-certificate-position/update , method = com.dt.platform.ops.controller.CertificatePositionController.update
[POST] /service-contract/cont-contract-payment-label/update , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.update
[ALL] /business/hr/person_contract/person_contract_form.html , method = com.dt.platform.hr.page.PersonContractPageController.form
[POST] /service-eam/eam-inventory-catalog/update , method = com.dt.platform.eam.controller.InventoryCatalogController.update
[POST] /service-workorder/wo-service-desk/query-list , method = com.dt.platform.workorder.controller.ServiceDeskController.queryList
[POST] /service-ops/ops-certificate-position/save , method = com.dt.platform.ops.controller.CertificatePositionController.save
[POST] /service-contract/cont-contract-payment-label/save , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.save
[POST] /service-eam/eam-asset-collection-return/insert , method = com.dt.platform.eam.controller.AssetCollectionReturnController.insert
[POST] /service-workorder/wo-service-desk/delete , method = com.dt.platform.workorder.controller.ServiceDeskController.deleteById
[POST] /service-ops/ops-certificate-position/insert , method = com.dt.platform.ops.controller.CertificatePositionController.insert
[POST] /service-contract/cont-contract-payment-label/insert , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.insert
[POST] /service-workorder/wo-service-desk/delete-by-ids , method = com.dt.platform.workorder.controller.ServiceDeskController.deleteByIds
[POST] /service-eam/eam-asset-collection-return/get-by-id , method = com.dt.platform.eam.controller.AssetCollectionReturnController.getById
[POST] /service-eam/eam-inventory-catalog/save , method = com.dt.platform.eam.controller.InventoryCatalogController.save
[POST] /service-contract/cont-contract-payment-label/get-by-id , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.getById
[POST] /service-ops/ops-certificate-position/get-by-id , method = com.dt.platform.ops.controller.CertificatePositionController.getById
[POST] /service-eam/eam-c-cust-repiar-item/get-by-ids , method = com.dt.platform.eam.controller.CCustRepiarItemController.getByIds
[POST] /service-eam/eam-asset-collection-return/get-by-ids , method = com.dt.platform.eam.controller.AssetCollectionReturnController.getByIds
[POST] /service-eam/eam-inventory-catalog/insert , method = com.dt.platform.eam.controller.InventoryCatalogController.insert
[POST] /service-ops/ops-certificate-position/get-by-ids , method = com.dt.platform.ops.controller.CertificatePositionController.getByIds
[POST] /service-contract/cont-contract-payment-label/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.getByIds
[ALL] /service-eam/eam-asset-collection-return/confirm-operation , method = com.dt.platform.eam.controller.AssetCollectionReturnController.confirmOperation
[POST] /service-workorder/wo-service-desk/query-paged-list , method = com.dt.platform.workorder.controller.ServiceDeskController.queryPagedList
[POST] /service-eam/eam-asset-collection-return/bpm-callback , method = com.dt.platform.eam.controller.AssetCollectionReturnController.onProcessCallback
[POST] /service-ops/ops-certificate-position/query-list , method = com.dt.platform.ops.controller.CertificatePositionController.queryList
[POST] /service-contract/cont-contract-payment-label/query-list , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.queryList
[POST] /service-eam/eam-inventory-catalog/get-by-id , method = com.dt.platform.eam.controller.InventoryCatalogController.getById
[POST] /service-workorder/wo-service-my-portal/update , method = com.dt.platform.workorder.controller.ServiceMyPortalController.update
[POST] /service-ops/ops-certificate-position/delete , method = com.dt.platform.ops.controller.CertificatePositionController.deleteById
[POST] /service-contract/cont-contract-payment-label/delete , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.deleteById
[POST] /service-eam/eam-inventory-catalog/get-by-ids , method = com.dt.platform.eam.controller.InventoryCatalogController.getByIds
[POST] /service-workorder/wo-service-my-portal/save , method = com.dt.platform.workorder.controller.ServiceMyPortalController.save
[POST] /service-eam/eam-c-cust-repiar-item/query-list , method = com.dt.platform.eam.controller.CCustRepiarItemController.queryList
[POST] /service-ops/ops-certificate-position/delete-by-ids , method = com.dt.platform.ops.controller.CertificatePositionController.deleteByIds
[POST] /service-contract/cont-contract-payment-label/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.deleteByIds
[POST] /service-eam/eam-asset-collection-return/query-list , method = com.dt.platform.eam.controller.AssetCollectionReturnController.queryList
[POST] /service-workorder/wo-service-my-portal/insert , method = com.dt.platform.workorder.controller.ServiceMyPortalController.insert
[POST] /service-eam/eam-inventory-catalog/query-list , method = com.dt.platform.eam.controller.InventoryCatalogController.queryList
[POST] /service-ops/ops-certificate-position/query-paged-list , method = com.dt.platform.ops.controller.CertificatePositionController.queryPagedList
[POST] /service-contract/cont-contract-payment-label/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractPaymentLabelController.queryPagedList
[POST] /service-eam/eam-inventory-catalog/delete , method = com.dt.platform.eam.controller.InventoryCatalogController.deleteById
[POST] /service-eam/eam-asset-collection-return/delete , method = com.dt.platform.eam.controller.AssetCollectionReturnController.deleteById
[POST] /service-workorder/wo-service-my-portal/get-by-id , method = com.dt.platform.workorder.controller.ServiceMyPortalController.getById
[ALL] /service-ops/ops-certificate-position/export-excel , method = com.dt.platform.ops.controller.CertificatePositionController.exportExcel
[POST] /service-contract/cont-contract-label/update , method = com.foxnicweb.web.contract.controller.ContractLabelController.update
[POST] /service-eam/eam-asset-collection-return/delete-by-ids , method = com.dt.platform.eam.controller.AssetCollectionReturnController.deleteByIds
[POST] /service-eam/eam-inventory-catalog/delete-by-ids , method = com.dt.platform.eam.controller.InventoryCatalogController.deleteByIds
[POST] /service-workorder/wo-service-my-portal/get-by-ids , method = com.dt.platform.workorder.controller.ServiceMyPortalController.getByIds
[ALL] /service-ops/ops-certificate-position/export-excel-template , method = com.dt.platform.ops.controller.CertificatePositionController.exportExcelTemplate
[POST] /service-contract/cont-contract-label/save , method = com.foxnicweb.web.contract.controller.ContractLabelController.save
[ALL] /service-ops/ops-certificate-position/import-excel , method = com.dt.platform.ops.controller.CertificatePositionController.importExcel
[ALL] /business/hr/person_contract/person_contract_list.html , method = com.dt.platform.hr.page.PersonContractPageController.list
[POST] /service-eam/eam-inventory-catalog/query-paged-list , method = com.dt.platform.eam.controller.InventoryCatalogController.queryPagedList
[POST] /service-workorder/wo-service-my-portal/query-list , method = com.dt.platform.workorder.controller.ServiceMyPortalController.queryList
[POST] /service-contract/cont-contract-label/insert , method = com.foxnicweb.web.contract.controller.ContractLabelController.insert
[ALL] /service-eam/eam-inventory-catalog/export-excel , method = com.dt.platform.eam.controller.InventoryCatalogController.exportExcel
[POST] /service-ops/ops-certificate-type/update , method = com.dt.platform.ops.controller.CertificateTypeController.update
[ALL] /business/hr/person_file/person_file_form.html , method = com.dt.platform.hr.page.PersonFilePageController.form
[POST] /service-workorder/wo-service-my-portal/delete , method = com.dt.platform.workorder.controller.ServiceMyPortalController.deleteById
[ALL] /service-eam/eam-inventory-catalog/export-excel-template , method = com.dt.platform.eam.controller.InventoryCatalogController.exportExcelTemplate
[POST] /service-contract/cont-contract-label/get-by-id , method = com.foxnicweb.web.contract.controller.ContractLabelController.getById
[POST] /service-ops/ops-certificate-type/save , method = com.dt.platform.ops.controller.CertificateTypeController.save
[ALL] /business/hr/person_file/person_file_list.html , method = com.dt.platform.hr.page.PersonFilePageController.list
[ALL] /business/eam/asset_employee_apply/asset_employee_apply_list.html , method = com.dt.platform.eam.page.AssetEmployeeApplyPageController.list
[POST] /service-workorder/wo-service-my-portal/delete-by-ids , method = com.dt.platform.workorder.controller.ServiceMyPortalController.deleteByIds
[POST] /service-contract/cont-contract-label/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractLabelController.getByIds
[POST] /service-ops/ops-certificate-type/insert , method = com.dt.platform.ops.controller.CertificateTypeController.insert
[ALL] /business/eam/asset_employee_handover/asset_employee_handover_form.html , method = com.dt.platform.eam.page.AssetEmployeeHandoverPageController.form
[ALL] /business/hr/person/person_form.html , method = com.dt.platform.hr.page.PersonPageController.form
[POST] /service-contract/cont-contract-label/query-list , method = com.foxnicweb.web.contract.controller.ContractLabelController.queryList
[POST] /service-workorder/wo-service-my-portal/query-paged-list , method = com.dt.platform.workorder.controller.ServiceMyPortalController.queryPagedList
[POST] /service-ops/ops-db-env-info/delete-by-ids , method = com.dt.platform.ops.controller.DbEnvInfoController.deleteByIds
[ALL] /business/hr/person/person_list.html , method = com.dt.platform.hr.page.PersonPageController.list
[POST] /service-contract/cont-contract-label/delete , method = com.foxnicweb.web.contract.controller.ContractLabelController.deleteById
[POST] /service-workorder/wo-service-portal/update , method = com.dt.platform.workorder.controller.ServicePortalController.update
[POST] /service-contract/cont-contract-label/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractLabelController.deleteByIds
[POST] /service-ops/ops-db-env-info/query-paged-list , method = com.dt.platform.ops.controller.DbEnvInfoController.queryPagedList
[POST] /service-ops/ops-certificate-type/get-by-id , method = com.dt.platform.ops.controller.CertificateTypeController.getById
[POST] /service-contract/cont-contract-label/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractLabelController.queryPagedList
[POST] /service-workorder/wo-service-portal/save , method = com.dt.platform.workorder.controller.ServicePortalController.save
[POST] /service-contract/cont-contract-sign-item/update , method = com.foxnicweb.web.contract.controller.ContractSignItemController.update
[POST] /service-ops/ops-certificate-type/get-by-ids , method = com.dt.platform.ops.controller.CertificateTypeController.getByIds
[POST] /service-contract/cont-contract-sign-item/save , method = com.foxnicweb.web.contract.controller.ContractSignItemController.save
[ALL] /business/hr/position/position_form.html , method = com.dt.platform.hr.page.PositionPageController.form
[POST] /service-ops/ops-certificate-type/query-list , method = com.dt.platform.ops.controller.CertificateTypeController.queryList
[ALL] /business/hr/position/position_list.html , method = com.dt.platform.hr.page.PositionPageController.list
[POST] /service-workorder/wo-service-portal/insert , method = com.dt.platform.workorder.controller.ServicePortalController.insert
[POST] /service-ops/ops-db-info/update , method = com.dt.platform.ops.controller.DbInfoController.update
[POST] /service-contract/cont-contract-sign-item/insert , method = com.foxnicweb.web.contract.controller.ContractSignItemController.insert
[POST] /service-ops/ops-certificate-type/delete , method = com.dt.platform.ops.controller.CertificateTypeController.deleteById
[ALL] /business/hr/position_type/position_type_form.html , method = com.dt.platform.hr.page.PositionTypePageController.form
[POST] /service-workorder/wo-service-portal/get-by-id , method = com.dt.platform.workorder.controller.ServicePortalController.getById
[ALL] /business/hr/position_type/position_type_list.html , method = com.dt.platform.hr.page.PositionTypePageController.list
[POST] /service-contract/cont-contract-sign-item/get-by-id , method = com.foxnicweb.web.contract.controller.ContractSignItemController.getById
[POST] /service-ops/ops-certificate-type/delete-by-ids , method = com.dt.platform.ops.controller.CertificateTypeController.deleteByIds
[POST] /service-workorder/wo-service-portal/get-by-ids , method = com.dt.platform.workorder.controller.ServicePortalController.getByIds
[ALL] /business/hr/professional_level/professional_level_form.html , method = com.dt.platform.hr.page.ProfessionalLevelPageController.form
[POST] /service-contract/cont-contract-sign-item/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractSignItemController.getByIds
[ALL] /business/hr/professional_level/professional_level_list.html , method = com.dt.platform.hr.page.ProfessionalLevelPageController.list
[POST] /service-ops/ops-certificate-type/query-paged-list , method = com.dt.platform.ops.controller.CertificateTypeController.queryPagedList
[ALL] /business/eam/asset_employee_handover/asset_employee_handover_list.html , method = com.dt.platform.eam.page.AssetEmployeeHandoverPageController.list
[ALL] /service-ops/ops-certificate-type/export-excel , method = com.dt.platform.ops.controller.CertificateTypeController.exportExcel
[POST] /service-contract/cont-contract-sign-item/query-list , method = com.foxnicweb.web.contract.controller.ContractSignItemController.queryList
[POST] /service-workorder/wo-service-portal/query-list , method = com.dt.platform.workorder.controller.ServicePortalController.queryList
[POST] /service-ops/ops-db-info/save , method = com.dt.platform.ops.controller.DbInfoController.save
[ALL] /business/eam/asset_employee_loss/asset_employee_loss_form.html , method = com.dt.platform.eam.page.AssetEmployeeLossPageController.form
[ALL] /service-ops/ops-certificate-type/export-excel-template , method = com.dt.platform.ops.controller.CertificateTypeController.exportExcelTemplate
[POST] /service-contract/cont-contract-sign-item/delete , method = com.foxnicweb.web.contract.controller.ContractSignItemController.deleteById
[ALL] /business/eam/asset_employee_loss/asset_employee_loss_list.html , method = com.dt.platform.eam.page.AssetEmployeeLossPageController.list
[ALL] /business/eam/asset_employee_repair/asset_employee_repair_form.html , method = com.dt.platform.eam.page.AssetEmployeeRepairPageController.form
[POST] /service-contract/cont-contract-sign-item/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractSignItemController.deleteByIds
[ALL] /business/eam/asset_employee_repair/asset_employee_repair_list.html , method = com.dt.platform.eam.page.AssetEmployeeRepairPageController.list
[ALL] /business/eam/asset_handle/asset_handle_form.html , method = com.dt.platform.eam.page.AssetHandlePageController.form
[ALL] /business/eam/asset_handle/asset_handle_list.html , method = com.dt.platform.eam.page.AssetHandlePageController.list
[POST] /service-contract/cont-contract-sign-item/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractSignItemController.queryPagedList
[ALL] /business/eam/asset_item/asset_item_form.html , method = com.dt.platform.eam.page.AssetItemPageController.form
[ALL] /service-ops/ops-certificate-type/import-excel , method = com.dt.platform.ops.controller.CertificateTypeController.importExcel
[ALL] /business/eam/asset_item/asset_item_list.html , method = com.dt.platform.eam.page.AssetItemPageController.list
[ALL] /business/eam/asset_label_col/asset_label_col_form.html , method = com.dt.platform.eam.page.AssetLabelColPageController.form
[ALL] /business/eam/asset_label_col/asset_label_col_list.html , method = com.dt.platform.eam.page.AssetLabelColPageController.list
[POST] /service-ops/ops-ciphertext-box/update , method = com.dt.platform.ops.controller.CiphertextBoxController.update
[ALL] /business/eam/asset_label_layout/asset_label_layout_form.html , method = com.dt.platform.eam.page.AssetLabelLayoutPageController.form
[ALL] /business/eam/asset_label_layout/asset_label_layout_list.html , method = com.dt.platform.eam.page.AssetLabelLayoutPageController.list
[ALL] /service-eam/eam-inventory-catalog/import-excel , method = com.dt.platform.eam.controller.InventoryCatalogController.importExcel
[POST] /service-contract/cont-invoice-out/update , method = com.foxnicweb.web.contract.controller.InvoiceOutController.update
[ALL] /business/eam/asset_label/asset_label_form.html , method = com.dt.platform.eam.page.AssetLabelPageController.form
[POST] /service-ops/ops-ciphertext-box/save , method = com.dt.platform.ops.controller.CiphertextBoxController.save
[ALL] /business/eam/asset_label/asset_label_list.html , method = com.dt.platform.eam.page.AssetLabelPageController.list
[ALL] /business/eam/asset_label/asset_label_setting.html , method = com.dt.platform.eam.page.AssetLabelPageController.labelSetting
[ALL] /business/eam/asset_label/asset_label_custom.html , method = com.dt.platform.eam.page.AssetLabelPageController.labelCustom
[ALL] /business/eam/asset_label_paper/asset_label_paper_form.html , method = com.dt.platform.eam.page.AssetLabelPaperPageController.form
[POST] /service-ops/ops-ciphertext-box/insert , method = com.dt.platform.ops.controller.CiphertextBoxController.insert
[ALL] /business/eam/asset_label_paper/asset_label_paper_list.html , method = com.dt.platform.eam.page.AssetLabelPaperPageController.list
[POST] /service-eam/eam-c-cust-repiar-item/delete , method = com.dt.platform.eam.controller.CCustRepiarItemController.deleteById
[ALL] /business/eam/asset_label_tpl_item/asset_label_tpl_item_form.html , method = com.dt.platform.eam.page.AssetLabelTplItemPageController.form
[POST] /service-ops/ops-ciphertext-box/get-by-id , method = com.dt.platform.ops.controller.CiphertextBoxController.getById
[ALL] /business/eam/asset_label_tpl_item/asset_label_tpl_item_list.html , method = com.dt.platform.eam.page.AssetLabelTplItemPageController.list
[POST] /service-eam/eam-inventory/update , method = com.dt.platform.eam.controller.InventoryController.update
[POST] /service-contract/cont-invoice-out/save , method = com.foxnicweb.web.contract.controller.InvoiceOutController.save
[POST] /service-ops/ops-ciphertext-box/get-by-ids , method = com.dt.platform.ops.controller.CiphertextBoxController.getByIds
[ALL] /business/eam/asset_label_tpl/asset_label_tpl_form.html , method = com.dt.platform.eam.page.AssetLabelTplPageController.form
[POST] /service-eam/eam-inventory/start , method = com.dt.platform.eam.controller.InventoryController.start
[POST] /service-eam/eam-c-cust-repiar-item/delete-by-ids , method = com.dt.platform.eam.controller.CCustRepiarItemController.deleteByIds
[ALL] /business/eam/asset_label_tpl/asset_label_tpl_list.html , method = com.dt.platform.eam.page.AssetLabelTplPageController.list
[ALL] /business/eam/asset_maintenance_record/asset_maintenance_record_form.html , method = com.dt.platform.eam.page.AssetMaintenanceRecordPageController.form
[POST] /service-ops/ops-ciphertext-box/query-list , method = com.dt.platform.ops.controller.CiphertextBoxController.queryList
[ALL] /business/eam/asset_maintenance_record/asset_maintenance_record_list.html , method = com.dt.platform.eam.page.AssetMaintenanceRecordPageController.list
[POST] /service-eam/eam-c-cust-repiar-item/query-paged-list , method = com.dt.platform.eam.controller.CCustRepiarItemController.queryPagedList
[POST] /service-ops/ops-db-info/insert , method = com.dt.platform.ops.controller.DbInfoController.insert
[POST] /service-ops/ops-ciphertext-box/delete , method = com.dt.platform.ops.controller.CiphertextBoxController.deleteById
[POST] /service-contract/cont-invoice-out/insert , method = com.foxnicweb.web.contract.controller.InvoiceOutController.insert
[POST] /service-ops/ops-ciphertext-box/delete-by-ids , method = com.dt.platform.ops.controller.CiphertextBoxController.deleteByIds
[POST] /service-contract/cont-invoice-out/get-by-id , method = com.foxnicweb.web.contract.controller.InvoiceOutController.getById
[POST] /service-eam/eam-category/update , method = com.dt.platform.eam.controller.CategoryController.update
[POST] /service-ops/ops-ciphertext-box/user-en-de-perm-by-boxtype , method = com.dt.platform.ops.controller.CiphertextBoxController.queryPagedList
[POST] /service-contract/cont-invoice-out/get-by-ids , method = com.foxnicweb.web.contract.controller.InvoiceOutController.getByIds
[POST] /service-eam/eam-inventory/save , method = com.dt.platform.eam.controller.InventoryController.save
[POST] /service-ops/ops-ciphertext-box/query-paged-list , method = com.dt.platform.ops.controller.CiphertextBoxController.queryPagedList
[POST] /service-eam/eam-category/save , method = com.dt.platform.eam.controller.CategoryController.save
[POST] /service-contract/cont-invoice-out/query-list , method = com.foxnicweb.web.contract.controller.InvoiceOutController.queryList
[POST] /service-ops/ops-ciphertext-box-data/update , method = com.dt.platform.ops.controller.CiphertextBoxDataController.update
[POST] /service-contract/cont-invoice-out/delete , method = com.foxnicweb.web.contract.controller.InvoiceOutController.deleteById
[POST] /service-eam/eam-inventory/insert , method = com.dt.platform.eam.controller.InventoryController.insert
[POST] /service-eam/eam-category/insert , method = com.dt.platform.eam.controller.CategoryController.insert
[POST] /service-contract/cont-invoice-out/delete-by-ids , method = com.foxnicweb.web.contract.controller.InvoiceOutController.deleteByIds
[POST] /service-eam/eam-inventory/cancel , method = com.dt.platform.eam.controller.InventoryController.cancel
[POST] /service-eam/eam-category/get-by-id , method = com.dt.platform.eam.controller.CategoryController.getById
[POST] /service-ops/ops-ciphertext-box-data/save , method = com.dt.platform.ops.controller.CiphertextBoxDataController.save
[POST] /service-eam/eam-inventory/finish , method = com.dt.platform.eam.controller.InventoryController.finish
[POST] /service-eam/eam-category/get-by-ids , method = com.dt.platform.eam.controller.CategoryController.getByIds
[POST] /service-eam/eam-inventory/get-by-id , method = com.dt.platform.eam.controller.InventoryController.getById
[POST] /service-contract/cont-invoice-out/query-paged-list , method = com.foxnicweb.web.contract.controller.InvoiceOutController.queryPagedList
[POST] /service-ops/ops-ciphertext-box-data/insert , method = com.dt.platform.ops.controller.CiphertextBoxDataController.insert
[POST] /service-eam/eam-inventory/get-by-ids , method = com.dt.platform.eam.controller.InventoryController.getByIds
[POST] /service-eam/eam-category/query-list , method = com.dt.platform.eam.controller.CategoryController.queryList
[POST] /service-ops/ops-ciphertext-box-data/get-by-id , method = com.dt.platform.ops.controller.CiphertextBoxDataController.getById
[POST] /service-eam/eam-inventory/data-sync , method = com.dt.platform.eam.controller.InventoryController.dataSync
[POST] /service-eam/eam-category/delete , method = com.dt.platform.eam.controller.CategoryController.deleteById
[POST] /service-ops/ops-db-info/get-by-id , method = com.dt.platform.ops.controller.DbInfoController.getById
[POST] /service-ops/ops-ciphertext-box-data/get-by-ids , method = com.dt.platform.ops.controller.CiphertextBoxDataController.getByIds
[POST] /service-eam/eam-category/delete-by-ids , method = com.dt.platform.eam.controller.CategoryController.deleteByIds
[POST] /service-ops/ops-db-info/get-by-ids , method = com.dt.platform.ops.controller.DbInfoController.getByIds
[POST] /service-contract/cont-contract-performance/update , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.update
[POST] /service-ops/ops-ciphertext-box-data/query-list , method = com.dt.platform.ops.controller.CiphertextBoxDataController.queryList
[POST] /service-ops/ops-ciphertext-box-data/delete , method = com.dt.platform.ops.controller.CiphertextBoxDataController.deleteById
[POST] /service-eam/eam-category/query-paged-list , method = com.dt.platform.eam.controller.CategoryController.queryPagedList
[ALL] /service-eam/eam-category/export-excel , method = com.dt.platform.eam.controller.CategoryController.exportExcel
[POST] /service-ops/ops-ciphertext-box-data/delete-by-ids , method = com.dt.platform.ops.controller.CiphertextBoxDataController.deleteByIds
[POST] /service-eam/eam-inventory/query-list , method = com.dt.platform.eam.controller.InventoryController.queryList
[POST] /service-contract/cont-contract-performance/save , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.save
[ALL] /service-eam/eam-category/export-excel-template , method = com.dt.platform.eam.controller.CategoryController.exportExcelTemplate
[POST] /service-eam/eam-inventory/delete , method = com.dt.platform.eam.controller.InventoryController.deleteById
[ALL] /service-eam/eam-category/import-excel , method = com.dt.platform.eam.controller.CategoryController.importExcel
[POST] /service-ops/ops-db-info/query-list , method = com.dt.platform.ops.controller.DbInfoController.queryList
[POST] /service-eam/eam-inventory/delete-by-ids , method = com.dt.platform.eam.controller.InventoryController.deleteByIds
[POST] /service-ops/ops-ciphertext-box-data/query-paged-list , method = com.dt.platform.ops.controller.CiphertextBoxDataController.queryPagedList
[POST] /service-ops/ops-db-info/delete , method = com.dt.platform.ops.controller.DbInfoController.deleteById
[POST] /service-ops/ops-db-info/delete-by-ids , method = com.dt.platform.ops.controller.DbInfoController.deleteByIds
[POST] /service-eam/eam-category-finance/update , method = com.dt.platform.eam.controller.CategoryFinanceController.update
[POST] /service-contract/cont-contract-performance/insert , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.insert
[POST] /service-ops/ops-ciphertext-conf/update , method = com.dt.platform.ops.controller.CiphertextConfController.update
[POST] /service-contract/cont-contract-performance/execute , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.archive
[POST] /service-ops/ops-ciphertext-conf/save , method = com.dt.platform.ops.controller.CiphertextConfController.save
[POST] /service-contract/cont-contract-performance/get-by-id , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.getById
[POST] /service-eam/eam-inventory/query-paged-list , method = com.dt.platform.eam.controller.InventoryController.queryPagedList
[POST] /service-eam/eam-category-finance/save , method = com.dt.platform.eam.controller.CategoryFinanceController.save
[ALL] /service-eam/eam-inventory/export-excel , method = com.dt.platform.eam.controller.InventoryController.exportExcel
[POST] /service-contract/cont-contract-performance/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.getByIds
[POST] /service-ops/ops-ciphertext-conf/insert , method = com.dt.platform.ops.controller.CiphertextConfController.insert
[ALL] /service-eam/eam-inventory/export-excel-template , method = com.dt.platform.eam.controller.InventoryController.exportExcelTemplate
[ALL] /service-eam/eam-inventory/import-excel , method = com.dt.platform.eam.controller.InventoryController.importExcel
[POST] /service-ops/ops-ciphertext-conf/get-by-id , method = com.dt.platform.ops.controller.CiphertextConfController.getById
[POST] /service-ops/ops-db-info/query-paged-list , method = com.dt.platform.ops.controller.DbInfoController.queryPagedList
[POST] /service-eam/eam-category-finance/insert , method = com.dt.platform.eam.controller.CategoryFinanceController.insert
[POST] /service-eam/eam-inventory/inventory-asset , method = com.dt.platform.eam.controller.InventoryController.inventoryAsset
[POST] /service-ops/ops-ciphertext-conf/get-by-ids , method = com.dt.platform.ops.controller.CiphertextConfController.getByIds
[POST] /service-workorder/wo-service-portal/delete , method = com.dt.platform.workorder.controller.ServicePortalController.deleteById
[POST] /service-eam/eam-category-finance/get-by-id , method = com.dt.platform.eam.controller.CategoryFinanceController.getById
[POST] /service-eam/eam-inventory/asset-plus-data , method = com.dt.platform.eam.controller.InventoryController.inventoryAsset
[POST] /service-contract/cont-contract-performance/query-list , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.queryList
[POST] /service-ops/ops-ciphertext-conf/query-list , method = com.dt.platform.ops.controller.CiphertextConfController.queryList
[POST] /service-eam/eam-category-finance/get-by-ids , method = com.dt.platform.eam.controller.CategoryFinanceController.getByIds
[POST] /service-contract/cont-contract-performance/delete , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.deleteById
[POST] /service-ops/ops-ciphertext-conf/delete , method = com.dt.platform.ops.controller.CiphertextConfController.deleteById
[POST] /service-eam/eam-inventory/get-by-id-for-employee , method = com.dt.platform.eam.controller.InventoryController.getByIdForEmployee
[POST] /service-ops/ops-ciphertext-conf/delete-by-ids , method = com.dt.platform.ops.controller.CiphertextConfController.deleteByIds
[POST] /service-contract/cont-contract-performance/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.deleteByIds
[POST] /service-ops/ops-db-info/public-query-paged-list , method = com.dt.platform.ops.controller.DbInfoController.publicQueryPagedList
[ALL] /service-eam/eam-inventory/query-asset-by-inventory , method = com.dt.platform.eam.controller.InventoryController.queryAssetByInventory
[ALL] /service-eam/eam-inventory/download-asset , method = com.dt.platform.eam.controller.InventoryController.downloadAsset
[ALL] /business/hr/rank/rank_form.html , method = com.dt.platform.hr.page.RankPageController.form
[POST] /service-eam/eam-category-finance/query-list , method = com.dt.platform.eam.controller.CategoryFinanceController.queryList
[POST] /service-eam/eam-inventory/query-asset-by-employee-mode-paged-list , method = com.dt.platform.eam.controller.InventoryController.queryAssetByEmployeeModePagedList
[POST] /service-ops/ops-ciphertext-conf/query-paged-list , method = com.dt.platform.ops.controller.CiphertextConfController.queryPagedList
[POST] /service-eam/eam-category-finance/delete , method = com.dt.platform.eam.controller.CategoryFinanceController.deleteById
[POST] /service-eam/eam-inventory/query-my-asset-by-employee-mode-paged-list , method = com.dt.platform.eam.controller.InventoryController.queryMyAssetByEmployeeModePagedList
[ALL] /business/hr/rank/rank_list.html , method = com.dt.platform.hr.page.RankPageController.list
[POST] /service-ops/ops-db-instance/update , method = com.dt.platform.ops.controller.DbInstanceController.update
[POST] /service-eam/eam-inventory/query-by-employee-mode-paged-list , method = com.dt.platform.eam.controller.InventoryController.queryByEmployeeModePagedList
[POST] /service-eam/eam-category-finance/delete-by-ids , method = com.dt.platform.eam.controller.CategoryFinanceController.deleteByIds
[ALL] /business/hr/vacation_data/vacation_data_form.html , method = com.dt.platform.hr.page.VacationDataPageController.form
[ALL] /business/hr/vacation_data/vacation_data_list.html , method = com.dt.platform.hr.page.VacationDataPageController.list
[POST] /service-eam/eam-inventory-director/update , method = com.dt.platform.eam.controller.InventoryDirectorController.update
[POST] /service-ops/ops-ciphertext-history/update , method = com.dt.platform.ops.controller.CiphertextHistoryController.update
[POST] /service-workorder/wo-service-portal/delete-by-ids , method = com.dt.platform.workorder.controller.ServicePortalController.deleteByIds
[ALL] /business/hr/work_overtime_data/work_overtime_data_form.html , method = com.dt.platform.hr.page.WorkOvertimeDataPageController.form
[POST] /service-ops/ops-db-instance/save , method = com.dt.platform.ops.controller.DbInstanceController.save
[POST] /service-eam/eam-category-finance/query-paged-list , method = com.dt.platform.eam.controller.CategoryFinanceController.queryPagedList
[ALL] /business/hr/work_overtime_data/work_overtime_data_list.html , method = com.dt.platform.hr.page.WorkOvertimeDataPageController.list
[ALL] /service-eam/eam-category-finance/export-excel , method = com.dt.platform.eam.controller.CategoryFinanceController.exportExcel
[POST] /service-ops/ops-ciphertext-history/save , method = com.dt.platform.ops.controller.CiphertextHistoryController.save
[ALL] /service-eam/eam-category-finance/export-excel-template , method = com.dt.platform.eam.controller.CategoryFinanceController.exportExcelTemplate
[POST] /service-workorder/wo-service-portal/query-paged-list , method = com.dt.platform.workorder.controller.ServicePortalController.queryPagedList
[ALL] /service-eam/eam-category-finance/import-excel , method = com.dt.platform.eam.controller.CategoryFinanceController.importExcel
[POST] /service-ops/ops-ciphertext-history/insert , method = com.dt.platform.ops.controller.CiphertextHistoryController.insert
[POST] /service-ops/ops-db-instance/insert , method = com.dt.platform.ops.controller.DbInstanceController.insert
[POST] /service-eam/eam-code-part/update , method = com.dt.platform.eam.controller.CodePartController.update
[POST] /service-eam/eam-code-rule/update , method = com.dt.platform.eam.controller.CodeRuleController.update
[POST] /service-ops/ops-db-instance/get-by-id , method = com.dt.platform.ops.controller.DbInstanceController.getById
[POST] /service-datacenter/dc-area/update , method = com.dt.platform.datacenter.controller.AreaController.update
[POST] /service-ops/ops-ciphertext-history/get-by-id , method = com.dt.platform.ops.controller.CiphertextHistoryController.getById
[POST] /service-ops/ops-db-instance/get-by-ids , method = com.dt.platform.ops.controller.DbInstanceController.getByIds
[POST] /service-eam/eam-code-part/save , method = com.dt.platform.eam.controller.CodePartController.save
[POST] /service-workorder/wo-slb-strategy-apply/update , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.update
[POST] /service-ops/ops-ciphertext-history/get-by-ids , method = com.dt.platform.ops.controller.CiphertextHistoryController.getByIds
[POST] /service-eam/eam-code-rule/save , method = com.dt.platform.eam.controller.CodeRuleController.save
[POST] /service-eam/eam-code-part/insert , method = com.dt.platform.eam.controller.CodePartController.insert
[POST] /service-datacenter/dc-area/save , method = com.dt.platform.datacenter.controller.AreaController.save
[POST] /service-eam/eam-code-part/get-by-id , method = com.dt.platform.eam.controller.CodePartController.getById
[POST] /service-ops/ops-ciphertext-history/query-list , method = com.dt.platform.ops.controller.CiphertextHistoryController.queryList
[POST] /service-ops/ops-db-instance/query-list , method = com.dt.platform.ops.controller.DbInstanceController.queryList
[POST] /service-eam/eam-code-rule/insert , method = com.dt.platform.eam.controller.CodeRuleController.insert
[POST] /service-workorder/wo-slb-strategy-apply/save , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.save
[POST] /service-ops/ops-ciphertext-history/delete , method = com.dt.platform.ops.controller.CiphertextHistoryController.deleteById
[POST] /service-ops/ops-db-instance/delete , method = com.dt.platform.ops.controller.DbInstanceController.deleteById
[POST] /service-eam/eam-code-part/get-by-ids , method = com.dt.platform.eam.controller.CodePartController.getByIds
[POST] /service-eam/eam-code-rule/get-by-id , method = com.dt.platform.eam.controller.CodeRuleController.getById
[POST] /service-ops/ops-ciphertext-history/delete-by-ids , method = com.dt.platform.ops.controller.CiphertextHistoryController.deleteByIds
[POST] /service-datacenter/dc-area/insert , method = com.dt.platform.datacenter.controller.AreaController.insert
[POST] /service-eam/eam-code-rule/get-by-ids , method = com.dt.platform.eam.controller.CodeRuleController.getByIds
[POST] /service-ops/ops-db-instance/delete-by-ids , method = com.dt.platform.ops.controller.DbInstanceController.deleteByIds
[POST] /service-eam/eam-code-part/query-list , method = com.dt.platform.eam.controller.CodePartController.queryList
[POST] /service-workorder/wo-slb-strategy-apply/insert , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.insert
[POST] /service-ops/ops-ciphertext-history/query-paged-list , method = com.dt.platform.ops.controller.CiphertextHistoryController.queryPagedList
[POST] /service-datacenter/dc-area/get-by-id , method = com.dt.platform.datacenter.controller.AreaController.getById
[POST] /service-eam/eam-code-part/delete , method = com.dt.platform.eam.controller.CodePartController.deleteById
[POST] /service-eam/eam-code-rule/query-list , method = com.dt.platform.eam.controller.CodeRuleController.queryList
[POST] /service-workorder/wo-slb-strategy-apply/get-by-id , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.getById
[POST] /service-ops/ops-db-instance/query-paged-list , method = com.dt.platform.ops.controller.DbInstanceController.queryPagedList
[POST] /service-eam/eam-code-part/delete-by-ids , method = com.dt.platform.eam.controller.CodePartController.deleteByIds
[POST] /service-eam/eam-code-rule/delete , method = com.dt.platform.eam.controller.CodeRuleController.deleteById
[POST] /service-datacenter/dc-area/get-by-ids , method = com.dt.platform.datacenter.controller.AreaController.getByIds
[POST] /service-workorder/wo-slb-strategy-apply/get-by-ids , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.getByIds
[POST] /service-workorder/wo-slb-strategy-apply/bpm-callback , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.onProcessCallback
[POST] /service-eam/eam-code-rule/delete-by-ids , method = com.dt.platform.eam.controller.CodeRuleController.deleteByIds
[POST] /service-eam/eam-code-part/query-paged-list , method = com.dt.platform.eam.controller.CodePartController.queryPagedList
[ALL] /business/eam/asset_maintenance_record_u/asset_maintenance_record_u_form.html , method = com.dt.platform.eam.page.AssetMaintenanceRecordUPageController.form
[ALL] /service-eam/eam-code-part/export-excel , method = com.dt.platform.eam.controller.CodePartController.exportExcel
[POST] /service-ops/ops-deploy-standard/update , method = com.dt.platform.ops.controller.DeployStandardController.update
[ALL] /business/eam/asset_maintenance_record_u/asset_maintenance_record_u_list.html , method = com.dt.platform.eam.page.AssetMaintenanceRecordUPageController.list
[ALL] /business/eam/asset_maintenance_update/asset_maintenance_update_form.html , method = com.dt.platform.eam.page.AssetMaintenanceUpdatePageController.form
[POST] /service-eam/eam-code-rule/query-paged-list , method = com.dt.platform.eam.controller.CodeRuleController.queryPagedList
[ALL] /service-eam/eam-code-part/export-excel-template , method = com.dt.platform.eam.controller.CodePartController.exportExcelTemplate
[POST] /service-workorder/wo-slb-strategy-apply/query-list , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.queryList
[ALL] /business/eam/asset_maintenance_update/asset_maintenance_update_list.html , method = com.dt.platform.eam.page.AssetMaintenanceUpdatePageController.list
[ALL] /service-eam/eam-code-part/import-excel , method = com.dt.platform.eam.controller.CodePartController.importExcel
[ALL] /service-eam/eam-code-rule/export-excel , method = com.dt.platform.eam.controller.CodeRuleController.exportExcel
[POST] /service-ops/ops-deploy-standard/save , method = com.dt.platform.ops.controller.DeployStandardController.save
[ALL] /business/eam/asset/asset_form.html , method = com.dt.platform.eam.page.AssetPageController.form
[POST] /service-workorder/wo-slb-strategy-apply/delete , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.deleteById
[ALL] /service-eam/eam-code-rule/export-excel-template , method = com.dt.platform.eam.controller.CodeRuleController.exportExcelTemplate
[ALL] /business/eam/asset/asset_list.html , method = com.dt.platform.eam.page.AssetPageController.list
[ALL] /service-eam/eam-code-rule/import-excel , method = com.dt.platform.eam.controller.CodeRuleController.importExcel
[ALL] /business/eam/asset/asset_info_form.html , method = com.dt.platform.eam.page.AssetPageController.infoForm
[POST] /service-workorder/wo-slb-strategy-apply/delete-by-ids , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.deleteByIds
[POST] /service-ops/ops-cmdb-attribute-c/update , method = com.dt.platform.ops.controller.CmdbAttributeCController.update
[POST] /service-eam/eam-asset-stock-goods/delete-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsController.deleteByIds
[POST] /service-ops/ops-deploy-standard/insert , method = com.dt.platform.ops.controller.DeployStandardController.insert
[POST] /service-eam/eam-failure-registration/update , method = com.dt.platform.eam.controller.FailureRegistrationController.update
[POST] /service-workorder/wo-slb-strategy-apply/query-paged-list , method = com.dt.platform.workorder.controller.SlbStrategyApplyController.queryPagedList
[POST] /service-ops/ops-deploy-standard/get-by-id , method = com.dt.platform.ops.controller.DeployStandardController.getById
[POST] /service-datacenter/dc-area/query-list , method = com.dt.platform.datacenter.controller.AreaController.queryList
[POST] /service-eam/eam-failure-registration/save , method = com.dt.platform.eam.controller.FailureRegistrationController.save
[POST] /service-ops/ops-cmdb-attribute-c/save , method = com.dt.platform.ops.controller.CmdbAttributeCController.save
[POST] /service-ops/ops-deploy-standard/get-by-ids , method = com.dt.platform.ops.controller.DeployStandardController.getByIds
[POST] /service-eam/eam-asset-stock-goods/query-paged-list , method = com.dt.platform.eam.controller.AssetStockGoodsController.queryPagedList
[POST] /service-datacenter/dc-area/delete , method = com.dt.platform.datacenter.controller.AreaController.deleteById
[POST] /service-workorder/wo-slb-strategy-info/update , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.update
[ALL] /service-eam/eam-asset-stock-goods/export-excel , method = com.dt.platform.eam.controller.AssetStockGoodsController.exportExcel
[POST] /service-datacenter/dc-area/delete-by-ids , method = com.dt.platform.datacenter.controller.AreaController.deleteByIds
[ALL] /service-eam/eam-asset-stock-goods/export-excel-template , method = com.dt.platform.eam.controller.AssetStockGoodsController.exportExcelTemplate
[POST] /service-eam/eam-failure-registration/insert , method = com.dt.platform.eam.controller.FailureRegistrationController.insert
[ALL] /service-eam/eam-asset-stock-goods/import-excel , method = com.dt.platform.eam.controller.AssetStockGoodsController.importExcel
[POST] /service-eam/eam-failure-registration/get-by-id , method = com.dt.platform.eam.controller.FailureRegistrationController.getById
[POST] /service-ops/ops-deploy-standard/query-list , method = com.dt.platform.ops.controller.DeployStandardController.queryList
[POST] /service-ops/ops-cmdb-attribute-c/insert , method = com.dt.platform.ops.controller.CmdbAttributeCController.insert
[POST] /service-workorder/wo-slb-strategy-info/save , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.save
[POST] /service-datacenter/dc-area/query-paged-list , method = com.dt.platform.datacenter.controller.AreaController.queryPagedList
[POST] /service-eam/eam-failure-registration/get-by-ids , method = com.dt.platform.eam.controller.FailureRegistrationController.getByIds
[POST] /service-ops/ops-deploy-standard/delete , method = com.dt.platform.ops.controller.DeployStandardController.deleteById
[POST] /service-eam/eam-asset-stock-goods-detail/update , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.update
[POST] /service-eam/eam-failure-registration/confirm-operation , method = com.dt.platform.eam.controller.FailureRegistrationController.confirmOperation
[POST] /service-ops/ops-deploy-standard/delete-by-ids , method = com.dt.platform.ops.controller.DeployStandardController.deleteByIds
[POST] /service-ops/ops-cmdb-attribute-c/get-by-id , method = com.dt.platform.ops.controller.CmdbAttributeCController.getById
[POST] /service-datacenter/dc-layer/update , method = com.dt.platform.datacenter.controller.LayerController.update
[POST] /service-workorder/wo-slb-strategy-info/insert , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.insert
[POST] /service-eam/eam-asset-stock-goods-detail/save , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.save
[POST] /service-workorder/wo-slb-strategy-info/get-by-id , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.getById
[POST] /service-datacenter/dc-layer/save , method = com.dt.platform.datacenter.controller.LayerController.save
[POST] /service-ops/ops-cmdb-attribute-c/get-by-ids , method = com.dt.platform.ops.controller.CmdbAttributeCController.getByIds
[POST] /service-eam/eam-failure-registration/query-list , method = com.dt.platform.eam.controller.FailureRegistrationController.queryList
[POST] /service-ops/ops-deploy-standard/query-paged-list , method = com.dt.platform.ops.controller.DeployStandardController.queryPagedList
[POST] /service-workorder/wo-slb-strategy-info/get-by-ids , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.getByIds
[POST] /service-eam/eam-asset-stock-goods-detail/insert , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.insert
[POST] /service-eam/eam-failure-registration/delete , method = com.dt.platform.eam.controller.FailureRegistrationController.deleteById
[POST] /service-datacenter/dc-layer/insert , method = com.dt.platform.datacenter.controller.LayerController.insert
[POST] /service-eam/eam-asset-stock-goods-detail/get-by-id , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.getById
[POST] /service-eam/eam-failure-registration/delete-by-ids , method = com.dt.platform.eam.controller.FailureRegistrationController.deleteByIds
[POST] /service-datacenter/dc-layer/get-by-id , method = com.dt.platform.datacenter.controller.LayerController.getById
[POST] /service-eam/eam-asset-stock-goods-detail/get-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.getByIds
[POST] /service-ops/ops-cmdb-attribute-c/query-list , method = com.dt.platform.ops.controller.CmdbAttributeCController.queryList
[POST] /service-datacenter/dc-layer/get-by-ids , method = com.dt.platform.datacenter.controller.LayerController.getByIds
[POST] /service-eam/eam-failure-registration/query-paged-list , method = com.dt.platform.eam.controller.FailureRegistrationController.queryPagedList
[POST] /service-eam/eam-asset-stock-goods-detail/query-list , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.queryList
[ALL] /service-eam/eam-failure-registration/confirm-operation , method = com.dt.platform.eam.controller.FailureRegistrationController.exportExcel
[POST] /service-datacenter/dc-layer/query-list , method = com.dt.platform.datacenter.controller.LayerController.queryList
[POST] /service-ops/ops-cmdb-attribute-c/delete , method = com.dt.platform.ops.controller.CmdbAttributeCController.deleteById
[ALL] /service-eam/eam-failure-registration/export-excel-template , method = com.dt.platform.eam.controller.FailureRegistrationController.exportExcelTemplate
[POST] /service-eam/eam-asset-stock-goods-detail/delete , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.deleteById
[POST] /service-ops/ops-host/update , method = com.dt.platform.ops.controller.HostController.update
[ALL] /service-eam/eam-failure-registration/import-excel , method = com.dt.platform.eam.controller.FailureRegistrationController.importExcel
[POST] /service-eam/eam-asset-stock-goods-detail/delete-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.deleteByIds
[POST] /service-datacenter/dc-layer/delete , method = com.dt.platform.datacenter.controller.LayerController.deleteById
[POST] /service-contract/cont-contract-performance/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractPerformanceController.queryPagedList
[POST] /service-eam/eam-feedback/update , method = com.dt.platform.eam.controller.FeedbackController.update
[POST] /service-datacenter/dc-layer/delete-by-ids , method = com.dt.platform.datacenter.controller.LayerController.deleteByIds
[POST] /service-eam/eam-asset-stock-goods-detail/query-paged-list , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.queryPagedList
[ALL] /service-eam/eam-asset-stock-goods-detail/export-excel , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.exportExcel
[ALL] /service-eam/eam-asset-stock-goods-detail/export-excel-template , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.exportExcelTemplate
[POST] /service-eam/eam-feedback/save , method = com.dt.platform.eam.controller.FeedbackController.save
[POST] /service-datacenter/dc-layer/query-paged-list , method = com.dt.platform.datacenter.controller.LayerController.queryPagedList
[ALL] /service-eam/eam-asset-stock-goods-detail/import-excel , method = com.dt.platform.eam.controller.AssetStockGoodsDetailController.importExcel
[POST] /service-contract/cont-invoice-receive/update , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.update
[POST] /service-ops/ops-cmdb-attribute-c/delete-by-ids , method = com.dt.platform.ops.controller.CmdbAttributeCController.deleteByIds
[POST] /service-eam/eam-feedback/insert , method = com.dt.platform.eam.controller.FeedbackController.insert
[POST] /service-ops/ops-host/save , method = com.dt.platform.ops.controller.HostController.save
[POST] /service-eam/eam-feedback/get-by-id , method = com.dt.platform.eam.controller.FeedbackController.getById
[POST] /service-eam/eam-feedback/get-by-ids , method = com.dt.platform.eam.controller.FeedbackController.getByIds
[POST] /service-datacenter/dc-rack/update , method = com.dt.platform.datacenter.controller.RackController.update
[POST] /service-contract/cont-invoice-receive/save , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.save
[POST] /service-ops/ops-cmdb-attribute-c/query-paged-list , method = com.dt.platform.ops.controller.CmdbAttributeCController.queryPagedList
[POST] /service-eam/eam-feedback/query-list , method = com.dt.platform.eam.controller.FeedbackController.queryList
[POST] /service-ops/ops-cmdb/delete-by-source-id , method = com.dt.platform.ops.controller.CmdbController.deleteBySourceId
[POST] /service-eam/eam-feedback/delete , method = com.dt.platform.eam.controller.FeedbackController.deleteById
[POST] /service-eam/eam-asset-stock-goods-in/update , method = com.dt.platform.eam.controller.AssetStockGoodsInController.update
[POST] /service-contract/cont-invoice-receive/insert , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.insert
[POST] /service-ops/ops-cmdb/delete-by-modelvalue-id , method = com.dt.platform.ops.controller.CmdbController.deleteByModelValueId
[POST] /service-eam/eam-feedback/delete-by-ids , method = com.dt.platform.eam.controller.FeedbackController.deleteByIds
[POST] /service-ops/ops-host/insert , method = com.dt.platform.ops.controller.HostController.insert
[POST] /service-contract/cont-invoice-receive/get-by-id , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.getById
[POST] /service-datacenter/dc-rack/save , method = com.dt.platform.datacenter.controller.RackController.save
[POST] /service-ops/ops-cmdb/get-by-source-id , method = com.dt.platform.ops.controller.CmdbController.getBySourceId
[POST] /service-ops/ops-host/get-by-id , method = com.dt.platform.ops.controller.HostController.getById
[POST] /service-contract/cont-invoice-receive/get-by-ids , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.getByIds
[POST] /service-eam/eam-feedback/query-paged-list , method = com.dt.platform.eam.controller.FeedbackController.queryPagedList
[POST] /service-ops/ops-cmdb/get_by_modelvalue_id , method = com.dt.platform.ops.controller.CmdbController.getByModelValueId
[POST] /service-ops/ops-host/get-by-ids , method = com.dt.platform.ops.controller.HostController.getByIds
[POST] /service-ops/ops-cmdb/update-by-modelvalue , method = com.dt.platform.ops.controller.CmdbController.updateByModelValue
[POST] /service-eam/eam-goods/update , method = com.dt.platform.eam.controller.GoodsController.update
[POST] /service-eam/eam-asset-stock-goods-in/save , method = com.dt.platform.eam.controller.AssetStockGoodsInController.save
[POST] /service-datacenter/dc-rack/insert , method = com.dt.platform.datacenter.controller.RackController.insert
[POST] /service-contract/cont-invoice-receive/query-list , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.queryList
[POST] /service-ops/ops-cmdb/insert-modelvalue-object , method = com.dt.platform.ops.controller.CmdbController.insertModelValueObject
[POST] /service-datacenter/dc-rack/get-by-id , method = com.dt.platform.datacenter.controller.RackController.getById
[POST] /service-contract/cont-invoice-receive/delete , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.deleteById
[POST] /service-ops/ops-cmdb/insert-modelvalue , method = com.dt.platform.ops.controller.CmdbController.insertModelValue
[POST] /service-contract/cont-invoice-receive/delete-by-ids , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.deleteByIds
[POST] /service-datacenter/dc-rack/get-by-ids , method = com.dt.platform.datacenter.controller.RackController.getByIds
[POST] /service-eam/eam-goods/save , method = com.dt.platform.eam.controller.GoodsController.save
[POST] /service-ops/ops-cmdb/verify-model , method = com.dt.platform.ops.controller.CmdbController.verifyModel
[POST] /service-ops/ops-host/query-list , method = com.dt.platform.ops.controller.HostController.queryList
[POST] /service-ops/ops-cmdb/get-modelvalue-id-by-source-id , method = com.dt.platform.ops.controller.CmdbController.getModelValueIdBySourceId
[POST] /service-ops/ops-host/delete , method = com.dt.platform.ops.controller.HostController.deleteById
[POST] /service-eam/eam-goods/insert , method = com.dt.platform.eam.controller.GoodsController.insert
[POST] /service-ops/ops-cmdb/update-by-modelv-jsonobject , method = com.dt.platform.ops.controller.CmdbController.updateByModelValueJSONObject
[POST] /service-contract/cont-invoice-receive/query-paged-list , method = com.foxnicweb.web.contract.controller.InvoiceReceiveController.queryPagedList
[POST] /service-eam/eam-goods/get-by-id , method = com.dt.platform.eam.controller.GoodsController.getById
[POST] /service-eam/eam-asset-stock-goods-in/insert , method = com.dt.platform.eam.controller.AssetStockGoodsInController.insert
[POST] /service-datacenter/dc-rack/query-list , method = com.dt.platform.datacenter.controller.RackController.queryList
[POST] /service-eam/eam-goods/get-by-ids , method = com.dt.platform.eam.controller.GoodsController.getByIds
[POST] /service-contract/cont-contract-signer-type/update , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.update
[POST] /service-datacenter/dc-rack/delete , method = com.dt.platform.datacenter.controller.RackController.deleteById
[POST] /service-eam/eam-asset-stock-goods-in/get-by-id , method = com.dt.platform.eam.controller.AssetStockGoodsInController.getById
[POST] /service-workorder/wo-slb-strategy-info/query-list , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.queryList
[POST] /service-datacenter/dc-rack/delete-by-ids , method = com.dt.platform.datacenter.controller.RackController.deleteByIds
[POST] /service-contract/cont-contract-signer-type/save , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.save
[POST] /service-eam/eam-asset-stock-goods-in/get-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsInController.getByIds
[POST] /service-eam/eam-goods/query-list , method = com.dt.platform.eam.controller.GoodsController.queryList
[POST] /service-workorder/wo-slb-strategy-info/delete , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.deleteById
[POST] /service-ops/ops-cmdb-log/update , method = com.dt.platform.ops.controller.CmdbLogController.update
[ALL] /service-eam/eam-asset-stock-goods-in/confirm-operation , method = com.dt.platform.eam.controller.AssetStockGoodsInController.confirmOperation
[POST] /service-workorder/wo-slb-strategy-info/delete-by-ids , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.deleteByIds
[POST] /service-contract/cont-contract-signer-type/insert , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.insert
[ALL] /business/eam/maintain_task_project/maintain_task_project_form.html , method = com.dt.platform.eam.page.MaintainTaskProjectPageController.form
[POST] /service-eam/eam-goods/delete , method = com.dt.platform.eam.controller.GoodsController.deleteById
[ALL] /business/eam/maintain_task_project/maintain_task_project_list.html , method = com.dt.platform.eam.page.MaintainTaskProjectPageController.list
[POST] /service-contract/cont-contract-signer-type/get-by-id , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.getById
[ALL] /business/eam/maintain_task_project/maintain_task_project_selected_list.html , method = com.dt.platform.eam.page.MaintainTaskProjectPageController.selectedList
[POST] /service-eam/eam-goods/delete-by-ids , method = com.dt.platform.eam.controller.GoodsController.deleteByIds
[ALL] /business/eam/maintainer/maintainer_form.html , method = com.dt.platform.eam.page.MaintainerPageController.form
[POST] /service-contract/cont-contract-signer-type/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.getByIds
[ALL] /business/eam/maintainer/maintainer_list.html , method = com.dt.platform.eam.page.MaintainerPageController.list
[POST] /service-workorder/wo-slb-strategy-info/query-paged-list , method = com.dt.platform.workorder.controller.SlbStrategyInfoController.queryPagedList
[ALL] /business/eam/manufacturer/manufacturer_form.html , method = com.dt.platform.eam.page.ManufacturerPageController.form
[POST] /service-contract/cont-contract-signer-type/query-list , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.queryList
[ALL] /business/workorder/network_strategy_apply/network_strategy_apply_form.html , method = com.dt.platform.workorder.page.NetworkStrategyApplyPageController.form
[POST] /service-ops/ops-cmdb-log/save , method = com.dt.platform.ops.controller.CmdbLogController.save
[ALL] /business/eam/manufacturer/manufacturer_list.html , method = com.dt.platform.eam.page.ManufacturerPageController.list
[POST] /service-contract/cont-contract-signer-type/delete , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.deleteById
[POST] /service-eam/eam-goods/query-paged-list , method = com.dt.platform.eam.controller.GoodsController.queryPagedList
[ALL] /business/workorder/network_strategy_apply/network_strategy_apply_list.html , method = com.dt.platform.workorder.page.NetworkStrategyApplyPageController.list
[ALL] /business/eam/my_business/todo_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.todoList
[POST] /service-eam/eam-asset-stock-goods-in/query-list , method = com.dt.platform.eam.controller.AssetStockGoodsInController.queryList
[ALL] /business/workorder/network_strategy_info/network_strategy_info_form.html , method = com.dt.platform.workorder.page.NetworkStrategyInfoPageController.form
[ALL] /service-eam/eam-goods/export-excel , method = com.dt.platform.eam.controller.GoodsController.exportExcel
[ALL] /business/eam/my_business/done_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.doneList
[ALL] /business/workorder/network_strategy_info/network_strategy_info_list.html , method = com.dt.platform.workorder.page.NetworkStrategyInfoPageController.list
[ALL] /service-eam/eam-goods/export-excel-template , method = com.dt.platform.eam.controller.GoodsController.exportExcelTemplate
[ALL] /business/eam/my_business/assetInsert_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.assetInsertList
[POST] /service-eam/eam-asset-stock-goods-in/delete , method = com.dt.platform.eam.controller.AssetStockGoodsInController.deleteById
[ALL] /service-eam/eam-goods/import-excel , method = com.dt.platform.eam.controller.GoodsController.importExcel
[ALL] /business/workorder/server_apply/server_apply_form.html , method = com.dt.platform.workorder.page.ServerApplyPageController.form
[ALL] /business/eam/my_business/changeMaintenance_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeMaintenanceList
[ALL] /business/workorder/server_apply/server_apply_list.html , method = com.dt.platform.workorder.page.ServerApplyPageController.list
[POST] /service-eam/eam-asset-stock-goods-in/delete-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsInController.deleteByIds
[ALL] /business/eam/asset/asset_info_list.html , method = com.dt.platform.eam.page.AssetPageController.infoList
[ALL] /business/eam/my_business/changeBaseInfo_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeBaseInfoList
[ALL] /business/workorder/server_info/server_info_form.html , method = com.dt.platform.workorder.page.ServerInfoPageController.form
[ALL] /business/eam/asset/asset_search/org_tree.html , method = com.dt.platform.eam.page.AssetPageController.orgTree
[ALL] /business/workorder/server_info/server_info_list.html , method = com.dt.platform.workorder.page.ServerInfoPageController.list
[ALL] /business/eam/my_business/changeFinance_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeFinanceList
[ALL] /business/eam/asset/asset_search/employee_list.html , method = com.dt.platform.eam.page.AssetPageController.employeeList
[ALL] /business/workorder/server_os_type/server_os_type_form.html , method = com.dt.platform.workorder.page.ServerOsTypePageController.form
[ALL] /business/eam/operate/operate_form.html , method = com.dt.platform.eam.page.OperatePageController.form
[ALL] /business/eam/asset/asset_code_custom.html , method = com.dt.platform.eam.page.AssetPageController.assetCodeCustom
[ALL] /business/workorder/server_os_type/server_os_type_list.html , method = com.dt.platform.workorder.page.ServerOsTypePageController.list
[ALL] /business/eam/asset/asset_excel_oper.html , method = com.dt.platform.eam.page.AssetPageController.excelOper
[ALL] /business/eam/operate/operate_list.html , method = com.dt.platform.eam.page.OperatePageController.list
[ALL] /business/workorder/service_desk/service_desk_form.html , method = com.dt.platform.workorder.page.ServiceDeskPageController.form
[ALL] /business/eam/asset/asset_select_basic_list.html , method = com.dt.platform.eam.page.AssetPageController.basicLlist
[ALL] /business/eam/plan_execute_log/plan_execute_log_form.html , method = com.dt.platform.eam.page.PlanExecuteLogPageController.form
[ALL] /business/workorder/service_desk/service_desk_list.html , method = com.dt.platform.workorder.page.ServiceDeskPageController.list
[ALL] /business/eam/asset/asset_selected_list.html , method = com.dt.platform.eam.page.AssetPageController.selectedList
[POST] /service-eam/eam-goods-stock/update , method = com.dt.platform.eam.controller.GoodsStockController.update
[POST] /service-eam/eam-asset-stock-goods-in/query-paged-list , method = com.dt.platform.eam.controller.AssetStockGoodsInController.queryPagedList
[ALL] /business/workorder/service_my_portal/service_my_portal_form.html , method = com.dt.platform.workorder.page.ServiceMyPortalPageController.form
[ALL] /business/eam/asset/asset_select_list.html , method = com.dt.platform.eam.page.AssetPageController.selectLlist
[ALL] /service-eam/eam-asset-stock-goods-in/export-excel , method = com.dt.platform.eam.controller.AssetStockGoodsInController.exportExcel
[ALL] /business/workorder/service_my_portal/service_my_portal_list.html , method = com.dt.platform.workorder.page.ServiceMyPortalPageController.list
[ALL] /business/eam/asset/asset_search/employee_assetInfo_list.html , method = com.dt.platform.eam.page.AssetPageController.employeeAssetInfoList
[ALL] /business/eam/plan_execute_log/plan_execute_log_list.html , method = com.dt.platform.eam.page.PlanExecuteLogPageController.list
[ALL] /service-eam/eam-asset-stock-goods-in/export-excel-template , method = com.dt.platform.eam.controller.AssetStockGoodsInController.exportExcelTemplate
[ALL] /business/workorder/service_portal/service_portal_form.html , method = com.dt.platform.workorder.page.ServicePortalPageController.form
[ALL] /business/eam/asset/asset_search/employee_tree.html , method = com.dt.platform.eam.page.AssetPageController.employeeTree
[ALL] /business/eam/position/position_form.html , method = com.dt.platform.eam.page.PositionPageController.form
[POST] /service-contract/cont-contract-signer-type/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.deleteByIds
[ALL] /business/workorder/service_portal/service_portal_list.html , method = com.dt.platform.workorder.page.ServicePortalPageController.list
[ALL] /business/eam/position/position_list.html , method = com.dt.platform.eam.page.PositionPageController.list
[ALL] /business/workorder/slb_strategy_apply/slb_strategy_apply_form.html , method = com.dt.platform.workorder.page.SlbStrategyApplyPageController.form
[POST] /service-ops/ops-cmdb-log/insert , method = com.dt.platform.ops.controller.CmdbLogController.insert
[ALL] /business/workorder/slb_strategy_apply/slb_strategy_apply_list.html , method = com.dt.platform.workorder.page.SlbStrategyApplyPageController.list
[ALL] /business/workorder/slb_strategy_info/slb_strategy_info_form.html , method = com.dt.platform.workorder.page.SlbStrategyInfoPageController.form
[ALL] /business/eam/purchase_apply/purchase_apply_form.html , method = com.dt.platform.eam.page.PurchaseApplyPageController.form
[POST] /service-ops/ops-cmdb-log/get-by-id , method = com.dt.platform.ops.controller.CmdbLogController.getById
[ALL] /business/workorder/slb_strategy_info/slb_strategy_info_list.html , method = com.dt.platform.workorder.page.SlbStrategyInfoPageController.list
[POST] /service-eam/eam-goods-stock/save , method = com.dt.platform.eam.controller.GoodsStockController.save
[ALL] /business/eam/purchase_apply/purchase_apply_list.html , method = com.dt.platform.eam.page.PurchaseApplyPageController.list
[POST] /service-ops/ops-cmdb-log/get-by-ids , method = com.dt.platform.ops.controller.CmdbLogController.getByIds
[ALL] /business/eam/purchase_check/purchase_check_form.html , method = com.dt.platform.eam.page.PurchaseCheckPageController.form
[ALL] /business/eam/purchase_check/purchase_check_list.html , method = com.dt.platform.eam.page.PurchaseCheckPageController.list
[POST] /service-mobile/app-module-group/update , method = com.dt.platform.mobile.controller.ModuleGroupController.update
[ALL] /business/eam/purchase_order_detail/purchase_order_detail_form.html , method = com.dt.platform.eam.page.PurchaseOrderDetailPageController.form
[POST] /service-ops/ops-host/delete-by-ids , method = com.dt.platform.ops.controller.HostController.deleteByIds
[POST] /service-ops/ops-cmdb-log/query-list , method = com.dt.platform.ops.controller.CmdbLogController.queryList
[ALL] /business/eam/purchase_order_detail/purchase_order_detail_list.html , method = com.dt.platform.eam.page.PurchaseOrderDetailPageController.list
[POST] /service-mobile/app-module-group/save , method = com.dt.platform.mobile.controller.ModuleGroupController.save
[POST] /service-ops/ops-cmdb-log/delete , method = com.dt.platform.ops.controller.CmdbLogController.deleteById
[POST] /service-contract/cont-contract-signer-type/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractSignerTypeController.queryPagedList
[ALL] /business/eam/purchase_order/purchase_order_form.html , method = com.dt.platform.eam.page.PurchaseOrderPageController.form
[POST] /service-ops/ops-cmdb-log/delete-by-ids , method = com.dt.platform.ops.controller.CmdbLogController.deleteByIds
[ALL] /business/eam/purchase_order/purchase_order_list.html , method = com.dt.platform.eam.page.PurchaseOrderPageController.list
[POST] /service-mobile/app-module-group/insert , method = com.dt.platform.mobile.controller.ModuleGroupController.insert
[ALL] /business/eam/repair_category/repair_category_form.html , method = com.dt.platform.eam.page.RepairCategoryPageController.form
[POST] /service-eam/eam-goods-stock/insert , method = com.dt.platform.eam.controller.GoodsStockController.insert
[POST] /service-mobile/app-module-group/get-by-id , method = com.dt.platform.mobile.controller.ModuleGroupController.getById
[ALL] /business/eam/repair_category/repair_category_list.html , method = com.dt.platform.eam.page.RepairCategoryPageController.list
[POST] /service-contract/cont-contract-category/update , method = com.foxnicweb.web.contract.controller.ContractCategoryController.update
[POST] /service-ops/ops-cmdb-log/query-paged-list , method = com.dt.platform.ops.controller.CmdbLogController.queryPagedList
[POST] /service-mobile/app-module-group/get-by-ids , method = com.dt.platform.mobile.controller.ModuleGroupController.getByIds
[POST] /service-eam/eam-goods-stock/get-by-id , method = com.dt.platform.eam.controller.GoodsStockController.getById
[ALL] /business/eam/repair_category_tpl/repair_category_tpl_form.html , method = com.dt.platform.eam.page.RepairCategoryTplPageController.form
[ALL] /business/eam/repair_category_tpl/repair_category_tpl_list.html , method = com.dt.platform.eam.page.RepairCategoryTplPageController.list
[POST] /service-contract/cont-contract-category/save , method = com.foxnicweb.web.contract.controller.ContractCategoryController.save
[POST] /service-eam/eam-goods-stock/get-by-ids , method = com.dt.platform.eam.controller.GoodsStockController.getByIds
[ALL] /business/eam/repair_group/repair_group_form.html , method = com.dt.platform.eam.page.RepairGroupPageController.form
[POST] /service-eam/eam-goods-stock/save-by-ids , method = com.dt.platform.eam.controller.GoodsStockController.saveByIds
[ALL] /business/eam/repair_group/repair_group_list.html , method = com.dt.platform.eam.page.RepairGroupPageController.list
[ALL] /business/eam/repair_order_acceptance/repair_order_acceptance_form.html , method = com.dt.platform.eam.page.RepairOrderAcceptancePageController.form
[POST] /service-contract/cont-contract-category/insert , method = com.foxnicweb.web.contract.controller.ContractCategoryController.insert
[ALL] /business/eam/repair_order_acceptance/repair_order_acceptance_list.html , method = com.dt.platform.eam.page.RepairOrderAcceptancePageController.list
[ALL] /business/eam/repair_order_act/repair_order_act_form.html , method = com.dt.platform.eam.page.RepairOrderActPageController.form
[POST] /service-contract/cont-contract-category/get-by-id , method = com.foxnicweb.web.contract.controller.ContractCategoryController.getById
[ALL] /business/eam/repair_order_act/repair_order_act_list.html , method = com.dt.platform.eam.page.RepairOrderActPageController.list
[POST] /service-mobile/app-module-group/query-list , method = com.dt.platform.mobile.controller.ModuleGroupController.queryList
[ALL] /business/eam/repair_order/repair_order_form.html , method = com.dt.platform.eam.page.RepairOrderPageController.form
[POST] /service-contract/cont-contract-category/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractCategoryController.getByIds
[ALL] /business/eam/asset/asset_search/category_tree.html , method = com.dt.platform.eam.page.AssetPageController.categoryTree
[POST] /service-mobile/app-module-group/delete , method = com.dt.platform.mobile.controller.ModuleGroupController.deleteById
[POST] /service-ops/ops-cmdb-model/update , method = com.dt.platform.ops.controller.CmdbModelController.update
[POST] /service-mobile/app-module-group/delete-by-ids , method = com.dt.platform.mobile.controller.ModuleGroupController.deleteByIds
[ALL] /business/eam/asset/asset_search/belong_org_tree.html , method = com.dt.platform.eam.page.AssetPageController.belongOrgTree
[POST] /service-contract/cont-contract-category/query-list , method = com.foxnicweb.web.contract.controller.ContractCategoryController.queryList
[POST] /service-eam/eam-goods-stock/query-list , method = com.dt.platform.eam.controller.GoodsStockController.queryList
[ALL] /business/eam/asset/asset_search/position_tree.html , method = com.dt.platform.eam.page.AssetPageController.positionTree
[POST] /service-mobile/app-module-group/query-paged-list , method = com.dt.platform.mobile.controller.ModuleGroupController.queryPagedList
[POST] /service-eam/eam-goods-stock/delete , method = com.dt.platform.eam.controller.GoodsStockController.deleteById
[ALL] /service-mobile/app-module-group/export-excel , method = com.dt.platform.mobile.controller.ModuleGroupController.exportExcel
[POST] /service-contract/cont-contract-category/delete , method = com.foxnicweb.web.contract.controller.ContractCategoryController.deleteById
[ALL] /business/eam/asset/asset_search/asset_wait_clean_search.html , method = com.dt.platform.eam.page.AssetPageController.searchWaitCleanList
[ALL] /service-mobile/app-module-group/export-excel-template , method = com.dt.platform.mobile.controller.ModuleGroupController.exportExcelTemplate
[POST] /service-eam/eam-goods-stock/delete-by-ids , method = com.dt.platform.eam.controller.GoodsStockController.deleteByIds
[POST] /service-contract/cont-contract-category/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractCategoryController.deleteByIds
[ALL] /service-mobile/app-module-group/import-excel , method = com.dt.platform.mobile.controller.ModuleGroupController.importExcel
[ALL] /business/eam/asset/asset_search/asset_clean_search.html , method = com.dt.platform.eam.page.AssetPageController.searchCleanList
[ALL] /business/eam/asset/approval/asset_register_list.html , method = com.dt.platform.eam.page.AssetPageController.assetApprove
[POST] /service-mobile/app-module-group/query-for-mobile , method = com.dt.platform.mobile.controller.ModuleGroupController.queryForMobile
[POST] /service-contract/cont-contract-category/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractCategoryController.queryPagedList
[ALL] /business/eam/asset/asset_data_export_list.html , method = com.dt.platform.eam.page.AssetPageController.dataExportList
[POST] /service-ops/ops-host/query-paged-list , method = com.dt.platform.ops.controller.HostController.queryPagedList
[POST] /service-ops/ops-cmdb-model/save , method = com.dt.platform.ops.controller.CmdbModelController.save
[ALL] /service-ops/ops-host/export-excel , method = com.dt.platform.ops.controller.HostController.exportExcel
[ALL] /business/eam/asset/asset_import_form.html , method = com.dt.platform.eam.page.AssetPageController.importForm
[ALL] /service-ops/ops-host/export-excel-template , method = com.dt.platform.ops.controller.HostController.exportExcelTemplate
[POST] /service-mobile/app-module-info/update , method = com.dt.platform.mobile.controller.ModuleInfoController.update
[POST] /service-contract/cont-contract-internal-body/update , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.update
[ALL] /service-ops/ops-host/import-excel , method = com.dt.platform.ops.controller.HostController.importExcel
[ALL] /business/eam/asset/asset_info_batch_form.html , method = com.dt.platform.eam.page.AssetPageController.infoBatchForm
[POST] /service-eam/eam-goods-stock/query-paged-list , method = com.dt.platform.eam.controller.GoodsStockController.queryPagedList
[ALL] /service-eam/eam-goods-stock/export-excel , method = com.dt.platform.eam.controller.GoodsStockController.exportExcel
[POST] /service-mobile/app-module-info/save , method = com.dt.platform.mobile.controller.ModuleInfoController.save
[POST] /service-ops/ops-host-db/update , method = com.dt.platform.ops.controller.HostDbController.update
[POST] /service-contract/cont-contract-internal-body/save , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.save
[ALL] /service-eam/eam-goods-stock/export-excel-template , method = com.dt.platform.eam.controller.GoodsStockController.exportExcelTemplate
[ALL] /service-eam/eam-goods-stock/import-excel , method = com.dt.platform.eam.controller.GoodsStockController.importExcel
[POST] /service-eam/eam-goods-stock/query-min-stock-warn , method = com.dt.platform.eam.controller.GoodsStockController.queryMinStockWarn
[POST] /service-ops/ops-host-db/save , method = com.dt.platform.ops.controller.HostDbController.save
[POST] /service-mobile/app-module-info/insert , method = com.dt.platform.mobile.controller.ModuleInfoController.insert
[POST] /service-eam/eam-goods-stock/query-max-stock-warn , method = com.dt.platform.eam.controller.GoodsStockController.queryMaxStockWarn
[POST] /service-ops/ops-cmdb-model/insert , method = com.dt.platform.ops.controller.CmdbModelController.insert
[POST] /service-contract/cont-contract-internal-body/insert , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.insert
[POST] /service-eam/eam-goods-stock/query-security-stock-warn , method = com.dt.platform.eam.controller.GoodsStockController.querySecurityStockWarn
[POST] /service-mobile/app-module-info/get-by-id , method = com.dt.platform.mobile.controller.ModuleInfoController.getById
[POST] /service-ops/ops-host-db/insert , method = com.dt.platform.ops.controller.HostDbController.insert
[POST] /service-contract/cont-contract-internal-body/get-by-id , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.getById
[ALL] /service-eam/eam-asset-stock-goods-in/import-excel , method = com.dt.platform.eam.controller.AssetStockGoodsInController.importExcel
[POST] /service-ops/ops-host-db/get-by-id , method = com.dt.platform.ops.controller.HostDbController.getById
[POST] /service-contract/cont-contract-internal-body/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.getByIds
[POST] /service-contract/cont-contract-internal-body/query-list , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.queryList
[POST] /service-ops/ops-host-db/get-by-ids , method = com.dt.platform.ops.controller.HostDbController.getByIds
[POST] /service-contract/cont-contract-internal-body/delete , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.deleteById
[POST] /service-ops/ops-host-db/query-list , method = com.dt.platform.ops.controller.HostDbController.queryList
[POST] /service-contract/cont-contract-internal-body/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.deleteByIds
[POST] /service-eam/eam-goods-stock/query-goods-stock-real-all , method = com.dt.platform.eam.controller.GoodsStockController.queryGoodsStockRealAll
[POST] /service-ops/ops-host-db/delete , method = com.dt.platform.ops.controller.HostDbController.deleteById
[POST] /service-eam/eam-goods-stock/query-paged-list-by-select , method = com.dt.platform.eam.controller.GoodsStockController.queryPagedListBySelect
[POST] /service-contract/cont-contract-internal-body/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractInternalBodyController.queryPagedList
[POST] /service-eam/eam-goods-stock/query-paged-list-by-selected , method = com.dt.platform.eam.controller.GoodsStockController.queryPagedListBySelected
[POST] /service-ops/ops-host-db/delete-by-ids , method = com.dt.platform.ops.controller.HostDbController.deleteByIds
[POST] /service-ops/ops-cmdb-model/get-by-id , method = com.dt.platform.ops.controller.CmdbModelController.getById
[POST] /service-eam/eam-group-user/update , method = com.dt.platform.eam.controller.GroupUserController.update
[POST] /service-ops/ops-host-db/query-paged-list , method = com.dt.platform.ops.controller.HostDbController.queryPagedList
[POST] /service-contract/cont-contract-counterparty/update , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.update
[ALL] /service-ops/ops-host-db/export-excel , method = com.dt.platform.ops.controller.HostDbController.exportExcel
[POST] /service-eam/eam-group-user/save , method = com.dt.platform.eam.controller.GroupUserController.save
[POST] /service-ops/ops-cmdb-model/get-by-ids , method = com.dt.platform.ops.controller.CmdbModelController.getByIds
[POST] /service-eam/eam-asset-stock-goods-out/update , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.update
[ALL] /service-ops/ops-host-db/export-excel-template , method = com.dt.platform.ops.controller.HostDbController.exportExcelTemplate
[ALL] /service-ops/ops-host-db/import-excel , method = com.dt.platform.ops.controller.HostDbController.importExcel
[POST] /service-eam/eam-group-user/insert , method = com.dt.platform.eam.controller.GroupUserController.insert
[ALL] /business/eam/asset/asset_search/asset_search.html , method = com.dt.platform.eam.page.AssetPageController.searchList
[POST] /service-contract/cont-contract-counterparty/save , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.save
[POST] /service-ops/ops-host-ex-by-db/update , method = com.dt.platform.ops.controller.HostExByDbController.update
[POST] /service-eam/eam-group-user/get-by-id , method = com.dt.platform.eam.controller.GroupUserController.getById
[POST] /service-eam/eam-group-user/get-by-ids , method = com.dt.platform.eam.controller.GroupUserController.getByIds
[POST] /service-ops/ops-host-ex-by-db/save , method = com.dt.platform.ops.controller.HostExByDbController.save
[POST] /service-contract/cont-contract-counterparty/insert , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.insert
[POST] /service-eam/eam-group-user/query-list , method = com.dt.platform.eam.controller.GroupUserController.queryList
[POST] /service-ops/ops-host-ex-by-db/insert , method = com.dt.platform.ops.controller.HostExByDbController.insert
[POST] /service-contract/cont-contract-counterparty/get-by-id , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.getById
[POST] /service-eam/eam-asset-stock-goods-out/save , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.save
[POST] /service-eam/eam-group-user/delete , method = com.dt.platform.eam.controller.GroupUserController.deleteById
[POST] /service-ops/ops-cmdb-model/query-list , method = com.dt.platform.ops.controller.CmdbModelController.queryList
[POST] /service-ops/ops-host-ex-by-db/get-by-id , method = com.dt.platform.ops.controller.HostExByDbController.getById
[POST] /service-contract/cont-contract-counterparty/get-by-ids , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.getByIds
[POST] /service-eam/eam-group-user/delete-by-ids , method = com.dt.platform.eam.controller.GroupUserController.deleteByIds
[POST] /service-ops/ops-cmdb-model/delete , method = com.dt.platform.ops.controller.CmdbModelController.deleteById
[POST] /service-ops/ops-host-ex-by-db/get-by-ids , method = com.dt.platform.ops.controller.HostExByDbController.getByIds
[POST] /service-ops/ops-cmdb-model/delete-by-ids , method = com.dt.platform.ops.controller.CmdbModelController.deleteByIds
[POST] /service-eam/eam-group-user/query-paged-list , method = com.dt.platform.eam.controller.GroupUserController.queryPagedList
[ALL] /business/eam/repair_order/repair_order_list.html , method = com.dt.platform.eam.page.RepairOrderPageController.list
[POST] /service-contract/cont-contract-counterparty/query-list , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.queryList
[POST] /service-ops/ops-host-ex-by-db/query-list , method = com.dt.platform.ops.controller.HostExByDbController.queryList
[ALL] /business/eam/repair_report/group_report_list.html , method = com.dt.platform.eam.page.RepairReportPageController.groupReportList
[POST] /service-ops/ops-host-ex-by-db/delete , method = com.dt.platform.ops.controller.HostExByDbController.deleteById
[POST] /service-eam/eam-asset-stock-goods-out/insert , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.insert
[ALL] /business/eam/repair_rule_item/repair_rule_item_form.html , method = com.dt.platform.eam.page.RepairRuleItemPageController.form
[POST] /service-ops/ops-host-ex-by-db/delete-by-ids , method = com.dt.platform.ops.controller.HostExByDbController.deleteByIds
[POST] /service-contract/cont-contract-counterparty/delete , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.deleteById
[POST] /service-eam/eam-asset-stock-goods-out/get-by-id , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.getById
[ALL] /business/eam/asset/asset_search/employee_assetInfo_selected_list.html , method = com.dt.platform.eam.page.AssetPageController.employeeAssetInfoSelectedList
[ALL] /business/eam/repair_rule_item/repair_rule_item_list.html , method = com.dt.platform.eam.page.RepairRuleItemPageController.list
[ALL] /business/eam/asset/asset_search/employee_assetInfo_select_list.html , method = com.dt.platform.eam.page.AssetPageController.employeeAssetInfoSelectList
[POST] /service-contract/cont-contract-counterparty/delete-by-ids , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.deleteByIds
[POST] /service-eam/eam-asset-stock-goods-out/get-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.getByIds
[POST] /service-ops/ops-cmdb-model/query-paged-list , method = com.dt.platform.ops.controller.CmdbModelController.queryPagedList
[ALL] /business/eam/asset_process_record/asset_process_record_form.html , method = com.dt.platform.eam.page.AssetProcessRecordPageController.form
[ALL] /business/eam/repair_rule/repair_rule_form.html , method = com.dt.platform.eam.page.RepairRulePageController.form
[ALL] /service-eam/eam-asset-stock-goods-out/confirm-operation , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.confirmOperation
[ALL] /business/eam/asset_process_record/asset_process_record_list.html , method = com.dt.platform.eam.page.AssetProcessRecordPageController.list
[POST] /service-mobile/app-module-info/get-by-ids , method = com.dt.platform.mobile.controller.ModuleInfoController.getByIds
[ALL] /business/eam/asset_rack_info/asset_rack_info_form.html , method = com.dt.platform.eam.page.AssetRackInfoPageController.form
[ALL] /business/eam/repair_rule/repair_rule_list.html , method = com.dt.platform.eam.page.RepairRulePageController.list
[POST] /service-mobile/app-module-info/query-list , method = com.dt.platform.mobile.controller.ModuleInfoController.queryList
[POST] /service-ops/ops-cmdb-model-v/update , method = com.dt.platform.ops.controller.CmdbModelVController.update
[ALL] /business/eam/repair_urgency/repair_urgency_form.html , method = com.dt.platform.eam.page.RepairUrgencyPageController.form
[POST] /service-mobile/app-module-info/delete , method = com.dt.platform.mobile.controller.ModuleInfoController.deleteById
[ALL] /business/eam/repair_urgency/repair_urgency_list.html , method = com.dt.platform.eam.page.RepairUrgencyPageController.list
[ALL] /business/eam/residual_strategy/residual_strategy_form.html , method = com.dt.platform.eam.page.ResidualStrategyPageController.form
[POST] /service-mobile/app-module-info/delete-by-ids , method = com.dt.platform.mobile.controller.ModuleInfoController.deleteByIds
[ALL] /business/eam/residual_strategy/residual_strategy_list.html , method = com.dt.platform.eam.page.ResidualStrategyPageController.list
[POST] /service-ops/ops-host-ex-by-db/query-paged-list , method = com.dt.platform.ops.controller.HostExByDbController.queryPagedList
[ALL] /business/eam/safetylevel/safetylevel_form.html , method = com.dt.platform.eam.page.SafetylevelPageController.form
[POST] /service-mobile/app-module-info/query-paged-list , method = com.dt.platform.mobile.controller.ModuleInfoController.queryPagedList
[POST] /service-ops/ops-host-ex-by-host/update , method = com.dt.platform.ops.controller.HostExByHostController.update
[ALL] /business/eam/safetylevel/safetylevel_list.html , method = com.dt.platform.eam.page.SafetylevelPageController.list
[POST] /service-mobile/app-software-group/update , method = com.dt.platform.mobile.controller.SoftwareGroupController.update
[ALL] /business/eam/stock/stock_form.html , method = com.dt.platform.eam.page.StockPageController.form
[POST] /service-ops/ops-host-ex-by-host/save , method = com.dt.platform.ops.controller.HostExByHostController.save
[ALL] /service-eam/eam-group-user/export-excel , method = com.dt.platform.eam.controller.GroupUserController.exportExcel
[ALL] /business/eam/stock/stock_list.html , method = com.dt.platform.eam.page.StockPageController.list
[POST] /service-mobile/app-software-group/save , method = com.dt.platform.mobile.controller.SoftwareGroupController.save
[ALL] /service-eam/eam-group-user/export-excel-template , method = com.dt.platform.eam.controller.GroupUserController.exportExcelTemplate
[ALL] /business/eam/stock/stock_book_list.html , method = com.dt.platform.eam.page.StockPageController.stockBookList
[POST] /service-ops/ops-host-ex-by-host/insert , method = com.dt.platform.ops.controller.HostExByHostController.insert
[ALL] /service-eam/eam-group-user/import-excel , method = com.dt.platform.eam.controller.GroupUserController.importExcel
[ALL] /business/eam/stock/asset_stock_selected_list.html , method = com.dt.platform.eam.page.StockPageController.assetStockSelectedList
[POST] /service-eam/eam-group-user/query-employee-person , method = com.dt.platform.eam.controller.GroupUserController.queryEmployeePerson
[POST] /service-ops/ops-host-ex-by-host/get-by-id , method = com.dt.platform.ops.controller.HostExByHostController.getById
[ALL] /business/eam/stock/asset_stock_select_list.html , method = com.dt.platform.eam.page.StockPageController.assetStockSelectList
[POST] /service-mobile/app-software-group/insert , method = com.dt.platform.mobile.controller.SoftwareGroupController.insert
[ALL] /business/eam/stock/asset_stock_basic_list.html , method = com.dt.platform.eam.page.StockPageController.assetStockBasicList
[POST] /service-ops/ops-host-ex-by-host/get-by-ids , method = com.dt.platform.ops.controller.HostExByHostController.getByIds
[POST] /service-ops/ops-cmdb-model-v/save , method = com.dt.platform.ops.controller.CmdbModelVController.save
[ALL] /business/eam/stock/stock_asset_list.html , method = com.dt.platform.eam.page.StockPageController.stockAssetList
[POST] /service-mobile/app-software-group/get-by-id , method = com.dt.platform.mobile.controller.SoftwareGroupController.getById
[POST] /service-eam/eam-inspection-group/update , method = com.dt.platform.eam.controller.InspectionGroupController.update
[POST] /service-ops/ops-host-ex-by-host/query-list , method = com.dt.platform.ops.controller.HostExByHostController.queryList
[ALL] /business/eam/supplier/supplier_form.html , method = com.dt.platform.eam.page.SupplierPageController.form
[POST] /service-mobile/app-software-group/get-by-ids , method = com.dt.platform.mobile.controller.SoftwareGroupController.getByIds
[ALL] /business/eam/supplier/supplier_list.html , method = com.dt.platform.eam.page.SupplierPageController.list
[POST] /service-ops/ops-host-ex-by-host/delete , method = com.dt.platform.ops.controller.HostExByHostController.deleteById
[POST] /service-eam/eam-inspection-group/save , method = com.dt.platform.eam.controller.InspectionGroupController.save
[ALL] /business/eam/tpl_file/tpl_file_form.html , method = com.dt.platform.eam.page.TplFilePageController.form
[POST] /service-mobile/app-software-group/query-list , method = com.dt.platform.mobile.controller.SoftwareGroupController.queryList
[POST] /service-ops/ops-host-ex-by-host/delete-by-ids , method = com.dt.platform.ops.controller.HostExByHostController.deleteByIds
[ALL] /business/eam/tpl_file/tpl_file_list.html , method = com.dt.platform.eam.page.TplFilePageController.list
[POST] /service-mobile/app-software-group/delete , method = com.dt.platform.mobile.controller.SoftwareGroupController.deleteById
[ALL] /business/eam/warehouse/warehouse_form.html , method = com.dt.platform.eam.page.WarehousePageController.form
[POST] /service-eam/eam-inspection-group/insert , method = com.dt.platform.eam.controller.InspectionGroupController.insert
[POST] /service-ops/ops-host-ex-by-host/query-paged-list , method = com.dt.platform.ops.controller.HostExByHostController.queryPagedList
[ALL] /business/eam/warehouse/warehouse_list.html , method = com.dt.platform.eam.page.WarehousePageController.list
[POST] /service-mobile/app-software-group/delete-by-ids , method = com.dt.platform.mobile.controller.SoftwareGroupController.deleteByIds
[POST] /service-eam/eam-inspection-group/get-by-id , method = com.dt.platform.eam.controller.InspectionGroupController.getById
[POST] /service-ops/ops-host-mid/update , method = com.dt.platform.ops.controller.HostMidController.update
[POST] /service-hr/hr-assessment-grade/update , method = com.dt.platform.hr.controller.AssessmentGradeController.update
[POST] /service-eam/eam-inspection-group/get-by-ids , method = com.dt.platform.eam.controller.InspectionGroupController.getByIds
[POST] /service-ops/ops-host-mid/save , method = com.dt.platform.ops.controller.HostMidController.save
[POST] /service-hr/hr-assessment-grade/save , method = com.dt.platform.hr.controller.AssessmentGradeController.save
[POST] /service-eam/eam-inspection-group/query-list , method = com.dt.platform.eam.controller.InspectionGroupController.queryList
[POST] /service-ops/ops-host-mid/insert , method = com.dt.platform.ops.controller.HostMidController.insert
[ALL] /business/eam/asset_rack_info/asset_rack_info_list.html , method = com.dt.platform.eam.page.AssetRackInfoPageController.list
[POST] /service-eam/eam-inspection-group/delete , method = com.dt.platform.eam.controller.InspectionGroupController.deleteById
[POST] /service-ops/ops-host-mid/get-by-id , method = com.dt.platform.ops.controller.HostMidController.getById
[POST] /service-ops/ops-cmdb-model-v/insert , method = com.dt.platform.ops.controller.CmdbModelVController.insert
[POST] /service-hr/hr-assessment-grade/insert , method = com.dt.platform.hr.controller.AssessmentGradeController.insert
[ALL] /business/eam/asset_rack/asset_rack_form.html , method = com.dt.platform.eam.page.AssetRackPageController.form
[POST] /service-ops/ops-host-mid/get-by-ids , method = com.dt.platform.ops.controller.HostMidController.getByIds
[POST] /service-eam/eam-inspection-group/delete-by-ids , method = com.dt.platform.eam.controller.InspectionGroupController.deleteByIds
[POST] /service-ops/ops-cmdb-model-v/get-by-id , method = com.dt.platform.ops.controller.CmdbModelVController.getById
[ALL] /business/eam/asset_rack/asset_rack_list.html , method = com.dt.platform.eam.page.AssetRackPageController.list
[POST] /service-hr/hr-assessment-grade/get-by-id , method = com.dt.platform.hr.controller.AssessmentGradeController.getById
[ALL] /business/eam/asset_region/asset_region_form.html , method = com.dt.platform.eam.page.AssetRegionPageController.form
[POST] /service-ops/ops-host-mid/query-list , method = com.dt.platform.ops.controller.HostMidController.queryList
[POST] /service-eam/eam-inspection-group/query-paged-list , method = com.dt.platform.eam.controller.InspectionGroupController.queryPagedList
[POST] /service-ops/ops-cmdb-model-v/get-by-ids , method = com.dt.platform.ops.controller.CmdbModelVController.getByIds
[ALL] /business/eam/asset_region/asset_region_list.html , method = com.dt.platform.eam.page.AssetRegionPageController.list
[POST] /service-hr/hr-assessment-grade/get-by-ids , method = com.dt.platform.hr.controller.AssessmentGradeController.getByIds
[POST] /service-ops/ops-host-mid/delete , method = com.dt.platform.ops.controller.HostMidController.deleteById
[ALL] /service-eam/eam-inspection-group/export-excel , method = com.dt.platform.eam.controller.InspectionGroupController.exportExcel
[ALL] /business/eam/asset_repair/asset_repair_form.html , method = com.dt.platform.eam.page.AssetRepairPageController.form
[ALL] /service-eam/eam-inspection-group/export-excel-template , method = com.dt.platform.eam.controller.InspectionGroupController.exportExcelTemplate
[POST] /service-ops/ops-host-mid/delete-by-ids , method = com.dt.platform.ops.controller.HostMidController.deleteByIds
[ALL] /business/eam/asset_repair/asset_repair_list.html , method = com.dt.platform.eam.page.AssetRepairPageController.list
[POST] /service-hr/hr-assessment-grade/query-list , method = com.dt.platform.hr.controller.AssessmentGradeController.queryList
[ALL] /service-eam/eam-inspection-group/import-excel , method = com.dt.platform.eam.controller.InspectionGroupController.importExcel
[ALL] /business/eam/asset_report/screen.html , method = com.dt.platform.eam.page.AssetReportPageController.screen
[POST] /service-ops/ops-host-mid/query-paged-list , method = com.dt.platform.ops.controller.HostMidController.queryPagedList
[POST] /service-hr/hr-assessment-grade/delete , method = com.dt.platform.hr.controller.AssessmentGradeController.deleteById
[ALL] /business/eam/asset_report/category_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.categoryReportList
[ALL] /service-ops/ops-host-mid/export-excel , method = com.dt.platform.ops.controller.HostMidController.exportExcel
[POST] /service-eam/eam-inspection-group-user/update , method = com.dt.platform.eam.controller.InspectionGroupUserController.update
[ALL] /business/eam/asset_report/company_status_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.companyStatusReportList
[POST] /service-hr/hr-assessment-grade/delete-by-ids , method = com.dt.platform.hr.controller.AssessmentGradeController.deleteByIds
[ALL] /service-ops/ops-host-mid/export-excel-template , method = com.dt.platform.ops.controller.HostMidController.exportExcelTemplate
[ALL] /business/eam/asset_report/category_status_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.categoryStatusReportList
[POST] /service-eam/eam-inspection-group-user/save , method = com.dt.platform.eam.controller.InspectionGroupUserController.save
[ALL] /service-ops/ops-host-mid/import-excel , method = com.dt.platform.ops.controller.HostMidController.importExcel
[ALL] /business/eam/asset_report/aux_category_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.auxCategoryReportList
[POST] /service-hr/hr-assessment-grade/query-paged-list , method = com.dt.platform.hr.controller.AssessmentGradeController.queryPagedList
[ALL] /business/eam/asset_report/org_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.orgReportList
[POST] /service-eam/eam-inspection-group-user/insert , method = com.dt.platform.eam.controller.InspectionGroupUserController.insert
[POST] /service-ops/ops-host-os/update , method = com.dt.platform.ops.controller.HostOsController.update
[ALL] /business/eam/asset_report/report_dashboard.html , method = com.dt.platform.eam.page.AssetReportPageController.reportDashboard
[ALL] /business/eam/asset_report/report_dashboard_mro.html , method = com.dt.platform.eam.page.AssetReportPageController.reportDashboardMro
[POST] /service-eam/eam-inspection-group-user/get-by-id , method = com.dt.platform.eam.controller.InspectionGroupUserController.getById
[ALL] /business/eam/asset_report/report_employee_dashboard.html , method = com.dt.platform.eam.page.AssetReportPageController.reportEmployeeDashboard
[ALL] /business/eam/asset_report/report_workorder_dashboard.html , method = com.dt.platform.eam.page.AssetReportPageController.reportWorkorderDashboard
[POST] /service-eam/eam-inspection-group-user/get-by-ids , method = com.dt.platform.eam.controller.InspectionGroupUserController.getByIds
[POST] /service-ops/ops-cmdb-model-v/query-list , method = com.dt.platform.ops.controller.CmdbModelVController.queryList
[ALL] /business/eam/asset_report/report_manage_dashboard.html , method = com.dt.platform.eam.page.AssetReportPageController.reportManageDashboard
[POST] /service-hr/hr-attendance-data/update , method = com.dt.platform.hr.controller.AttendanceDataController.update
[ALL] /business/eam/asset_report/asset_oper_data_report.html , method = com.dt.platform.eam.page.AssetReportPageController.assetOperDataReport
[POST] /service-eam/eam-inspection-group-user/query-list , method = com.dt.platform.eam.controller.InspectionGroupUserController.queryList
[POST] /service-ops/ops-cmdb-model-v/delete , method = com.dt.platform.ops.controller.CmdbModelVController.deleteById
[ALL] /business/eam/asset_report/asset_insert_month.html , method = com.dt.platform.eam.page.AssetReportPageController.searchList
[POST] /service-ops/ops-monitor-voucher/get-by-ids , method = com.dt.platform.ops.controller.MonitorVoucherController.getByIds
[POST] /service-eam/eam-inspection-group-user/delete , method = com.dt.platform.eam.controller.InspectionGroupUserController.deleteById
[ALL] /business/eam/asset_report/asset_for_leave_employee_report.html , method = com.dt.platform.eam.page.AssetReportPageController.assetForLeaveEmployeeReport
[ALL] /business/eam/asset_scrap/asset_scrap_form.html , method = com.dt.platform.eam.page.AssetScrapPageController.form
[POST] /service-eam/eam-inspection-group-user/delete-by-ids , method = com.dt.platform.eam.controller.InspectionGroupUserController.deleteByIds
[ALL] /service-ops/ops-monitor-node-type/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeTypeController.exportExcelTemplate
[POST] /service-ops/ops-monitor-voucher/query-list , method = com.dt.platform.ops.controller.MonitorVoucherController.queryList
[POST] /service-hr/hr-attendance-data/save , method = com.dt.platform.hr.controller.AttendanceDataController.save
[ALL] /business/eam/asset_scrap/asset_scrap_list.html , method = com.dt.platform.eam.page.AssetScrapPageController.list
[ALL] /service-ops/ops-monitor-node-type/import-excel , method = com.dt.platform.ops.controller.MonitorNodeTypeController.importExcel
[POST] /service-eam/eam-inspection-group-user/query-paged-list , method = com.dt.platform.eam.controller.InspectionGroupUserController.queryPagedList
[POST] /service-ops/ops-monitor-voucher/delete , method = com.dt.platform.ops.controller.MonitorVoucherController.deleteById
[ALL] /business/eam/asset_selected_data/asset_selected_data_form.html , method = com.dt.platform.eam.page.AssetSelectedDataPageController.form
[ALL] /service-eam/eam-inspection-group-user/export-excel , method = com.dt.platform.eam.controller.InspectionGroupUserController.exportExcel
[POST] /service-ops/ops-monitor-voucher/delete-by-ids , method = com.dt.platform.ops.controller.MonitorVoucherController.deleteByIds
[ALL] /business/eam/asset_selected_data/asset_selected_data_list.html , method = com.dt.platform.eam.page.AssetSelectedDataPageController.list
[ALL] /service-eam/eam-inspection-group-user/export-excel-template , method = com.dt.platform.eam.controller.InspectionGroupUserController.exportExcelTemplate
[ALL] /business/eam/asset_software_change_detail/asset_software_change_detail_form.html , method = com.dt.platform.eam.page.AssetSoftwareChangeDetailPageController.form
[ALL] /service-eam/eam-inspection-group-user/import-excel , method = com.dt.platform.eam.controller.InspectionGroupUserController.importExcel
[POST] /service-ops/ops-monitor-voucher/query-paged-list , method = com.dt.platform.ops.controller.MonitorVoucherController.queryPagedList
[POST] /service-hr/hr-attendance-data/insert , method = com.dt.platform.hr.controller.AttendanceDataController.insert
[ALL] /business/eam/asset_software_change_detail/asset_software_change_detail_list.html , method = com.dt.platform.eam.page.AssetSoftwareChangeDetailPageController.list
[ALL] /business/eam/asset_software_change/asset_software_change_form.html , method = com.dt.platform.eam.page.AssetSoftwareChangePageController.form
[POST] /service-hr/hr-attendance-data/get-by-id , method = com.dt.platform.hr.controller.AttendanceDataController.getById
[ALL] /business/eam/asset_software_change/asset_software_change_list.html , method = com.dt.platform.eam.page.AssetSoftwareChangePageController.list
[ALL] /business/eam/asset_software_distribute_data/asset_software_distribute_data_form.html , method = com.dt.platform.eam.page.AssetSoftwareDistributeDataPageController.form
[POST] /service-hr/hr-attendance-data/get-by-ids , method = com.dt.platform.hr.controller.AttendanceDataController.getByIds
[ALL] /business/eam/asset_software_distribute_data/asset_software_distribute_data_list.html , method = com.dt.platform.eam.page.AssetSoftwareDistributeDataPageController.list
[ALL] /business/eam/asset_software_distribute/asset_software_distribute_form.html , method = com.dt.platform.eam.page.AssetSoftwareDistributePageController.form
[POST] /service-ops/ops-monitor-warn/update , method = com.dt.platform.ops.controller.MonitorWarnController.update
[POST] /service-eam/eam-inspection-plan/update , method = com.dt.platform.eam.controller.InspectionPlanController.update
[ALL] /business/eam/asset_software_distribute/asset_software_distribute_list.html , method = com.dt.platform.eam.page.AssetSoftwareDistributePageController.list
[ALL] /business/eam/asset_software_maintenance_detail/asset_software_maintenance_detail_form.html , method = com.dt.platform.eam.page.AssetSoftwareMaintenanceDetailPageController.form
[POST] /service-eam/eam-inspection-plan/execute , method = com.dt.platform.eam.controller.InspectionPlanController.execute
[ALL] /business/eam/asset_software_maintenance_detail/asset_software_maintenance_detail_list.html , method = com.dt.platform.eam.page.AssetSoftwareMaintenanceDetailPageController.list
[POST] /service-hr/hr-attendance-data/query-list , method = com.dt.platform.hr.controller.AttendanceDataController.queryList
[ALL] /business/eam/asset_software_maintenance/asset_software_maintenance_form.html , method = com.dt.platform.eam.page.AssetSoftwareMaintenancePageController.form
[POST] /service-eam/eam-inspection-plan/start , method = com.dt.platform.eam.controller.InspectionPlanController.start
[POST] /service-ops/ops-monitor-warn/save , method = com.dt.platform.ops.controller.MonitorWarnController.save
[ALL] /business/eam/asset_software_maintenance/asset_software_maintenance_list.html , method = com.dt.platform.eam.page.AssetSoftwareMaintenancePageController.list
[POST] /service-hr/hr-attendance-data/delete , method = com.dt.platform.hr.controller.AttendanceDataController.deleteById
[ALL] /business/eam/asset_software/asset_software_form.html , method = com.dt.platform.eam.page.AssetSoftwarePageController.form
[POST] /service-eam/eam-inspection-plan/stop , method = com.dt.platform.eam.controller.InspectionPlanController.stop
[ALL] /business/eam/asset_software/asset_software_list.html , method = com.dt.platform.eam.page.AssetSoftwarePageController.list
[POST] /service-hr/hr-attendance-data/delete-by-ids , method = com.dt.platform.hr.controller.AttendanceDataController.deleteByIds
[ALL] /business/eam/asset_software/asset_software_used_list.html , method = com.dt.platform.eam.page.AssetSoftwarePageController.usedlist
[ALL] /business/eam/asset_software/asset_software_selected_list.html , method = com.dt.platform.eam.page.AssetSoftwarePageController.selectedlist
[POST] /service-ops/ops-monitor-warn/insert , method = com.dt.platform.ops.controller.MonitorWarnController.insert
[POST] /service-ops/ops-monitor-node-value/update , method = com.dt.platform.ops.controller.MonitorNodeValueController.update
[ALL] /business/eam/asset_software/asset_software_select_list.html , method = com.dt.platform.eam.page.AssetSoftwarePageController.selectlist
[ALL] /business/eam/asset_software/asset_software_maintenance_list.html , method = com.dt.platform.eam.page.AssetSoftwarePageController.maintenanceWarnlist
[POST] /service-ops/ops-monitor-warn/get-by-id , method = com.dt.platform.ops.controller.MonitorWarnController.getById
[ALL] /business/eam/asset_status/asset_status_form.html , method = com.dt.platform.eam.page.AssetStatusPageController.form
[POST] /service-hr/hr-attendance-data/query-paged-list , method = com.dt.platform.hr.controller.AttendanceDataController.queryPagedList
[POST] /service-eam/eam-inspection-plan/save , method = com.dt.platform.eam.controller.InspectionPlanController.save
[POST] /service-ops/ops-monitor-warn/get-by-ids , method = com.dt.platform.ops.controller.MonitorWarnController.getByIds
[ALL] /business/eam/asset_status/asset_status_list.html , method = com.dt.platform.eam.page.AssetStatusPageController.list
[ALL] /business/eam/asset_status_rule/asset_status_rule_form.html , method = com.dt.platform.eam.page.AssetStatusRulePageController.form
[ALL] /business/eam/asset_status_rule/asset_status_rule_list.html , method = com.dt.platform.eam.page.AssetStatusRulePageController.list
[POST] /service-hr/hr-attendance-record/update , method = com.dt.platform.hr.controller.AttendanceRecordController.update
[POST] /service-eam/eam-asset-stock-goods-out/query-list , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.queryList
[ALL] /business/eam/asset_status_rule_v/asset_status_rule_v_form.html , method = com.dt.platform.eam.page.AssetStatusRuleVPageController.form
[POST] /service-ops/ops-monitor-warn/query-list , method = com.dt.platform.ops.controller.MonitorWarnController.queryList
[POST] /service-hr/hr-attendance-record/save , method = com.dt.platform.hr.controller.AttendanceRecordController.save
[ALL] /business/eam/asset_status_rule_v/asset_status_rule_v_list.html , method = com.dt.platform.eam.page.AssetStatusRuleVPageController.list
[POST] /service-eam/eam-inspection-plan/insert , method = com.dt.platform.eam.controller.InspectionPlanController.insert
[ALL] /business/eam/asset_stock_collection/asset_stock_collection_form.html , method = com.dt.platform.eam.page.AssetStockCollectionPageController.form
[ALL] /business/eam/asset_stock_collection/asset_stock_collection_list.html , method = com.dt.platform.eam.page.AssetStockCollectionPageController.list
[POST] /service-eam/eam-inspection-plan/get-by-id , method = com.dt.platform.eam.controller.InspectionPlanController.getById
[POST] /service-ops/ops-monitor-warn/delete , method = com.dt.platform.ops.controller.MonitorWarnController.deleteById
[POST] /service-hr/hr-attendance-record/insert , method = com.dt.platform.hr.controller.AttendanceRecordController.insert
[ALL] /business/eam/asset_stock_deliver/asset_stock_deliver_form.html , method = com.dt.platform.eam.page.AssetStockDeliverPageController.form
[POST] /service-eam/eam-asset-stock-goods-out/delete , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.deleteById
[POST] /service-eam/eam-inspection-plan/get-by-ids , method = com.dt.platform.eam.controller.InspectionPlanController.getByIds
[POST] /service-ops/ops-monitor-warn/delete-by-ids , method = com.dt.platform.ops.controller.MonitorWarnController.deleteByIds
[POST] /service-hr/hr-attendance-record/get-by-id , method = com.dt.platform.hr.controller.AttendanceRecordController.getById
[POST] /service-hr/hr-attendance-record/get-by-ids , method = com.dt.platform.hr.controller.AttendanceRecordController.getByIds
[POST] /service-ops/ops-monitor-node-value/save , method = com.dt.platform.ops.controller.MonitorNodeValueController.save
[POST] /service-eam/eam-asset-stock-goods-out/delete-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.deleteByIds
[POST] /service-contract/cont-contract-counterparty/query-paged-list , method = com.foxnicweb.web.contract.controller.ContractCounterpartyController.queryPagedList
[POST] /service-ops/ops-monitor-warn/query-paged-list , method = com.dt.platform.ops.controller.MonitorWarnController.queryPagedList
[POST] /service-hr/hr-attendance-record/query-list , method = com.dt.platform.hr.controller.AttendanceRecordController.queryList
[POST] /service-eam/eam-inspection-plan/query-list , method = com.dt.platform.eam.controller.InspectionPlanController.queryList
[ALL] /service-ops/ops-monitor-warn/export-excel , method = com.dt.platform.ops.controller.MonitorWarnController.exportExcel
[ALL] /business/contract/contract_label/contract_label_form.html , method = com.foxnicweb.web.contract.page.ContractLabelPageController.form
[POST] /service-hr/hr-attendance-record/delete , method = com.dt.platform.hr.controller.AttendanceRecordController.deleteById
[ALL] /service-ops/ops-monitor-warn/export-excel-template , method = com.dt.platform.ops.controller.MonitorWarnController.exportExcelTemplate
[POST] /service-eam/eam-inspection-plan/delete , method = com.dt.platform.eam.controller.InspectionPlanController.deleteById
[ALL] /business/contract/contract_label/contract_label_list.html , method = com.foxnicweb.web.contract.page.ContractLabelPageController.list
[POST] /service-hr/hr-attendance-record/delete-by-ids , method = com.dt.platform.hr.controller.AttendanceRecordController.deleteByIds
[ALL] /service-ops/ops-monitor-warn/import-excel , method = com.dt.platform.ops.controller.MonitorWarnController.importExcel
[ALL] /business/contract/contract/contract_form.html , method = com.foxnicweb.web.contract.page.ContractPageController.form
[POST] /service-eam/eam-inspection-plan/delete-by-ids , method = com.dt.platform.eam.controller.InspectionPlanController.deleteByIds
[ALL] /business/contract/contract/contract_list.html , method = com.foxnicweb.web.contract.page.ContractPageController.list
[ALL] /business/eam/asset_stock_deliver/asset_stock_deliver_list.html , method = com.dt.platform.eam.page.AssetStockDeliverPageController.list
[POST] /service-hr/hr-attendance-record/query-paged-list , method = com.dt.platform.hr.controller.AttendanceRecordController.queryPagedList
[ALL] /business/contract/contract/contract_mgr_list.html , method = com.foxnicweb.web.contract.page.ContractPageController.listMgr
[POST] /service-hr/hr-attendance-record-import/update , method = com.dt.platform.hr.controller.AttendanceRecordImportController.update
[ALL] /business/eam/asset_stock_goods_adjust/asset_stock_goods_adjust_form.html , method = com.dt.platform.eam.page.AssetStockGoodsAdjustPageController.form
[ALL] /business/contract/contract/contract_by_org_list.html , method = com.foxnicweb.web.contract.page.ContractPageController.listByOrg
[POST] /service-eam/eam-inspection-plan/query-paged-list , method = com.dt.platform.eam.controller.InspectionPlanController.queryPagedList
[ALL] /business/contract/contract/contract_agreement_list.html , method = com.foxnicweb.web.contract.page.ContractPageController.contractAgreementList
[POST] /service-hr/hr-attendance-record-import/save , method = com.dt.platform.hr.controller.AttendanceRecordImportController.save
[ALL] /business/eam/asset_stock_goods_adjust/asset_stock_goods_adjust_list.html , method = com.dt.platform.eam.page.AssetStockGoodsAdjustPageController.list
[ALL] /service-eam/eam-inspection-plan/export-excel , method = com.dt.platform.eam.controller.InspectionPlanController.exportExcel
[ALL] /business/contract/contract/contract_arched_list.html , method = com.foxnicweb.web.contract.page.ContractPageController.archedList
[POST] /service-hr/hr-attendance-record-import/insert , method = com.dt.platform.hr.controller.AttendanceRecordImportController.insert
[ALL] /service-eam/eam-inspection-plan/export-excel-template , method = com.dt.platform.eam.controller.InspectionPlanController.exportExcelTemplate
[ALL] /business/contract/contract/contract_wait_arch_list.html , method = com.foxnicweb.web.contract.page.ContractPageController.waitArcheist
[ALL] /business/eam/asset_stock_goods_detail/asset_stock_goods_detail_form.html , method = com.dt.platform.eam.page.AssetStockGoodsDetailPageController.form
[ALL] /service-eam/eam-inspection-plan/import-excel , method = com.dt.platform.eam.controller.InspectionPlanController.importExcel
[ALL] /business/contract/contract/dashboard.html , method = com.foxnicweb.web.contract.page.ContractPageController.dashboard
[POST] /service-hr/hr-attendance-record-import/get-by-id , method = com.dt.platform.hr.controller.AttendanceRecordImportController.getById
[POST] /service-eam/eam-inspection-plan/create-task , method = com.dt.platform.eam.controller.InspectionPlanController.createTask
[ALL] /business/eam/asset_stock_goods_detail/asset_stock_goods_detail_list.html , method = com.dt.platform.eam.page.AssetStockGoodsDetailPageController.list
[POST] /service-hr/hr-attendance-record-import/get-by-ids , method = com.dt.platform.hr.controller.AttendanceRecordImportController.getByIds
[ALL] /business/contract/contract/contract_agreement_plan_list.html , method = com.foxnicweb.web.contract.page.ContractPageController.contractAgreementPlanList
[POST] /service-mobile/app-software-group/query-paged-list , method = com.dt.platform.mobile.controller.SoftwareGroupController.queryPagedList
[POST] /service-eam/eam-inspection-plan-point/update , method = com.dt.platform.eam.controller.InspectionPlanPointController.update
[POST] /service-hr/hr-attendance-record-import/query-list , method = com.dt.platform.hr.controller.AttendanceRecordImportController.queryList
[ALL] /business/contract/contract_sign_item/contract_sign_item_form.html , method = com.foxnicweb.web.contract.page.ContractSignItemPageController.form
[POST] /service-hr/hr-attendance-record-import/delete , method = com.dt.platform.hr.controller.AttendanceRecordImportController.deleteById
[POST] /service-ops/ops-monitor-node-value/insert , method = com.dt.platform.ops.controller.MonitorNodeValueController.insert
[ALL] /business/contract/contract_sign_item/contract_sign_item_list.html , method = com.foxnicweb.web.contract.page.ContractSignItemPageController.list
[POST] /service-hr/hr-attendance-record-import/delete-by-ids , method = com.dt.platform.hr.controller.AttendanceRecordImportController.deleteByIds
[POST] /service-hr/hr-attendance-record-import/query-paged-list , method = com.dt.platform.hr.controller.AttendanceRecordImportController.queryPagedList
[ALL] /business/eam/asset_stock_goods_in/asset_stock_goods_in_form.html , method = com.dt.platform.eam.page.AssetStockGoodsInPageController.form
[ALL] /business/contract/contract_signer/contract_signer_form.html , method = com.foxnicweb.web.contract.page.ContractSignerPageController.form
[ALL] /business/contract/contract_signer/contract_signer_list.html , method = com.foxnicweb.web.contract.page.ContractSignerPageController.list
[ALL] /business/eam/asset_stock_goods_in/asset_stock_goods_in_list.html , method = com.dt.platform.eam.page.AssetStockGoodsInPageController.list
[POST] /service-hr/hr-business-travel-data/update , method = com.dt.platform.hr.controller.BusinessTravelDataController.update
[ALL] /business/contract/contract_internal_body/contract_internal_body_form.html , method = com.foxnicweb.web.contract.page.ContractInternalBodyPageController.form
[ALL] /business/eam/asset_stock_goods_out/asset_stock_goods_out_form.html , method = com.dt.platform.eam.page.AssetStockGoodsOutPageController.form
[ALL] /business/contract/contract_internal_body/contract_internal_body_list.html , method = com.foxnicweb.web.contract.page.ContractInternalBodyPageController.list
[ALL] /business/eam/asset_stock_goods_out/asset_stock_goods_out_list.html , method = com.dt.platform.eam.page.AssetStockGoodsOutPageController.list
[ALL] /business/contract/contract_counterparty/contract_counterparty_form.html , method = com.foxnicweb.web.contract.page.ContractCounterpartyPageController.form
[ALL] /business/eam/asset_stock_goods/asset_stock_goods_form.html , method = com.dt.platform.eam.page.AssetStockGoodsPageController.form
[POST] /service-ops/ops-data/export-host , method = com.dt.platform.ops.controller.OpsDataController.exportHost
[POST] /service-ops/ops-monitor-node-value/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeValueController.getById
[ALL] /business/eam/asset_stock_goods/asset_stock_goods_list.html , method = com.dt.platform.eam.page.AssetStockGoodsPageController.list
[POST] /service-ops/ops-monitor-node-value/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeValueController.getByIds
[POST] /service-ops/ops-data/export-information-system , method = com.dt.platform.ops.controller.OpsDataController.exportInformationSystem
[POST] /service-ops/ops-data/export-database-instance , method = com.dt.platform.ops.controller.OpsDataController.exportDatabaseInstance
[ALL] /business/eam/asset_stock_goods/asset_stock_goods_select_tree.html , method = com.dt.platform.eam.page.AssetStockGoodsPageController.assetStockGoodsSelectTree
[ALL] /business/eam/asset_stock_goods_tranfer/asset_stock_goods_tranfer_form.html , method = com.dt.platform.eam.page.AssetStockGoodsTranferPageController.form
[POST] /service-eam/eam-asset-stock-goods-out/query-paged-list , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.queryPagedList
[ALL] /business/eam/asset_stock_goods_tranfer/asset_stock_goods_tranfer_list.html , method = com.dt.platform.eam.page.AssetStockGoodsTranferPageController.list
[ALL] /service-eam/eam-asset-stock-goods-out/export-excel , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.exportExcel
[ALL] /service-eam/eam-asset-stock-goods-out/export-excel-template , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.exportExcelTemplate
[ALL] /service-eam/eam-asset-stock-goods-out/import-excel , method = com.dt.platform.eam.controller.AssetStockGoodsOutController.importExcel
[ALL] /business/eam/asset_storage/asset_storage_form.html , method = com.dt.platform.eam.page.AssetStoragePageController.form
[ALL] /business/eam/asset_storage/asset_storage_list.html , method = com.dt.platform.eam.page.AssetStoragePageController.list
[ALL] /business/eam/asset_storage/asset_excel_oper.html , method = com.dt.platform.eam.page.AssetStoragePageController.assetExcelOper
[POST] /service-ops/ops-data/query-host-data , method = com.dt.platform.ops.controller.OpsDataController.queryHostData
[POST] /service-ops/ops-database/record-database-backup , method = com.dt.platform.ops.controller.OpsDatabaseController.recordDatabaseBackup
[ALL] /business/eam/asset_tranfer/asset_tranfer_form.html , method = com.dt.platform.eam.page.AssetTranferPageController.form
[POST] /service-ops/ops-database/query-database-data , method = com.dt.platform.ops.controller.OpsDatabaseController.queryDatabaseData
[ALL] /business/eam/asset_tranfer/asset_tranfer_list.html , method = com.dt.platform.eam.page.AssetTranferPageController.list
[POST] /service-eam/eam-inspection-plan-point/save , method = com.dt.platform.eam.controller.InspectionPlanPointController.save
[POST] /service-eam/eam-asset-stock-goods-tranfer/update , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.update
[POST] /service-ops/ops-person/update , method = com.dt.platform.ops.controller.PersonController.update
[ALL] /business/eam/bill_relation/bill_relation_form.html , method = com.dt.platform.eam.page.BillRelationPageController.form
[POST] /service-ops/ops-monitor-node-value/query-list , method = com.dt.platform.ops.controller.MonitorNodeValueController.queryList
[ALL] /business/eam/bill_relation/bill_relation_list.html , method = com.dt.platform.eam.page.BillRelationPageController.list
[ALL] /business/eam/brand_demo/brand_demo_form.html , method = com.dt.platform.eam.page.BrandDemoPageController.form
[POST] /service-ops/ops-monitor-node-value/delete , method = com.dt.platform.ops.controller.MonitorNodeValueController.deleteById
[POST] /service-ops/ops-person/save , method = com.dt.platform.ops.controller.PersonController.save
[ALL] /business/eam/brand_demo/brand_demo_list.html , method = com.dt.platform.eam.page.BrandDemoPageController.list
[POST] /service-ops/ops-monitor-node-value/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeValueController.deleteByIds
[ALL] /service-mobile/app-software-group/export-excel , method = com.dt.platform.mobile.controller.SoftwareGroupController.exportExcel
[ALL] /business/eam/brand/brand_form.html , method = com.dt.platform.eam.page.BrandPageController.form
[ALL] /business/eam/brand/brand_list.html , method = com.dt.platform.eam.page.BrandPageController.list
[POST] /service-ops/ops-person/insert , method = com.dt.platform.ops.controller.PersonController.insert
[ALL] /business/eam/c_cust_inspect_item/c_cust_inspect_item_form.html , method = com.dt.platform.eam.page.CCustInspectItemPageController.form
[ALL] /service-mobile/app-software-group/export-excel-template , method = com.dt.platform.mobile.controller.SoftwareGroupController.exportExcelTemplate
[ALL] /business/eam/c_cust_inspect_item/c_cust_inspect_item_list.html , method = com.dt.platform.eam.page.CCustInspectItemPageController.list
[ALL] /service-mobile/app-software-group/import-excel , method = com.dt.platform.mobile.controller.SoftwareGroupController.importExcel
[POST] /service-ops/ops-person/get-by-id , method = com.dt.platform.ops.controller.PersonController.getById
[POST] /service-eam/eam-inspection-plan-point/insert , method = com.dt.platform.eam.controller.InspectionPlanPointController.insert
[ALL] /business/eam/c_cust_inspect_log/c_cust_inspect_log_form.html , method = com.dt.platform.eam.page.CCustInspectLogPageController.form
[ALL] /business/eam/c_cust_inspect_log/c_cust_inspect_log_list.html , method = com.dt.platform.eam.page.CCustInspectLogPageController.list
[POST] /service-ops/ops-person/get-by-ids , method = com.dt.platform.ops.controller.PersonController.getByIds
[POST] /service-eam/eam-asset-stock-goods-tranfer/save , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.save
[POST] /service-eam/eam-inspection-plan-point/get-by-id , method = com.dt.platform.eam.controller.InspectionPlanPointController.getById
[ALL] /business/contract/contract_counterparty/contract_counterparty_list.html , method = com.foxnicweb.web.contract.page.ContractCounterpartyPageController.list
[ALL] /business/eam/c_cust_inspect_plan/c_cust_inspect_plan_form.html , method = com.dt.platform.eam.page.CCustInspectPlanPageController.form
[POST] /service-mobile/app-software-info/update , method = com.dt.platform.mobile.controller.SoftwareInfoController.update
[POST] /service-eam/eam-inspection-plan-point/get-by-ids , method = com.dt.platform.eam.controller.InspectionPlanPointController.getByIds
[POST] /service-ops/ops-person/query-list , method = com.dt.platform.ops.controller.PersonController.queryList
[ALL] /business/eam/c_cust_inspect_plan/c_cust_inspect_plan_list.html , method = com.dt.platform.eam.page.CCustInspectPlanPageController.list
[ALL] /business/eam/c_cust_inspect_task/c_cust_inspect_task_form.html , method = com.dt.platform.eam.page.CCustInspectTaskPageController.form
[POST] /service-eam/eam-inspection-plan-point/query-list , method = com.dt.platform.eam.controller.InspectionPlanPointController.queryList
[POST] /service-ops/ops-person/delete , method = com.dt.platform.ops.controller.PersonController.deleteById
[ALL] /business/eam/c_cust_inspect_task/c_cust_inspect_task_list.html , method = com.dt.platform.eam.page.CCustInspectTaskPageController.list
[POST] /service-eam/eam-asset-stock-goods-tranfer/insert , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.insert
[POST] /service-ops/ops-person/delete-by-ids , method = com.dt.platform.ops.controller.PersonController.deleteByIds
[POST] /service-eam/eam-inspection-plan-point/delete , method = com.dt.platform.eam.controller.InspectionPlanPointController.deleteById
[POST] /service-hr/hr-business-travel-data/save , method = com.dt.platform.hr.controller.BusinessTravelDataController.save
[POST] /service-mobile/app-software-info/save , method = com.dt.platform.mobile.controller.SoftwareInfoController.save
[POST] /service-eam/eam-inspection-plan-point/delete-by-ids , method = com.dt.platform.eam.controller.InspectionPlanPointController.deleteByIds
[POST] /service-ops/ops-person/query-paged-list , method = com.dt.platform.ops.controller.PersonController.queryPagedList
[ALL] /business/contract/invoice_receive/invoice_receive_form.html , method = com.foxnicweb.web.contract.page.InvoiceReceivePageController.form
[POST] /service-ops/ops-monitor-node-value/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeValueController.queryPagedList
[ALL] /service-ops/ops-monitor-node-value/export-excel , method = com.dt.platform.ops.controller.MonitorNodeValueController.exportExcel
[ALL] /business/contract/invoice_receive/invoice_receive_list.html , method = com.foxnicweb.web.contract.page.InvoiceReceivePageController.list
[ALL] /service-ops/ops-monitor-node-value/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeValueController.exportExcelTemplate
[ALL] /business/contract/contract_signer_type/contract_signer_type_form.html , method = com.foxnicweb.web.contract.page.ContractSignerTypePageController.form
[POST] /service-mobile/app-software-info/insert , method = com.dt.platform.mobile.controller.SoftwareInfoController.insert
[ALL] /service-ops/ops-monitor-node-value/import-excel , method = com.dt.platform.ops.controller.MonitorNodeValueController.importExcel
[ALL] /business/contract/contract_signer_type/contract_signer_type_list.html , method = com.foxnicweb.web.contract.page.ContractSignerTypePageController.list
[POST] /service-ops/ops-personnel-division/update , method = com.dt.platform.ops.controller.PersonnelDivisionController.update
[POST] /service-eam/eam-inspection-plan-point/query-paged-list , method = com.dt.platform.eam.controller.InspectionPlanPointController.queryPagedList
[POST] /service-mobile/app-software-info/get-by-id , method = com.dt.platform.mobile.controller.SoftwareInfoController.getById
[ALL] /business/contract/contract_category/contract_category_form.html , method = com.foxnicweb.web.contract.page.ContractCategoryPageController.form
[ALL] /service-eam/eam-inspection-plan-point/export-excel , method = com.dt.platform.eam.controller.InspectionPlanPointController.exportExcel
[ALL] /business/contract/contract_category/contract_category_list.html , method = com.foxnicweb.web.contract.page.ContractCategoryPageController.list
[POST] /service-mobile/app-software-info/get-by-ids , method = com.dt.platform.mobile.controller.SoftwareInfoController.getByIds
[POST] /service-hr/hr-business-travel-data/insert , method = com.dt.platform.hr.controller.BusinessTravelDataController.insert
[ALL] /business/contract/invoice_out/invoice_out_form.html , method = com.foxnicweb.web.contract.page.InvoiceOutPageController.form
[ALL] /business/contract/invoice_out/invoice_out_list.html , method = com.foxnicweb.web.contract.page.InvoiceOutPageController.list
[POST] /service-ops/ops-personnel-division/save , method = com.dt.platform.ops.controller.PersonnelDivisionController.save
[POST] /service-hr/hr-business-travel-data/get-by-id , method = com.dt.platform.hr.controller.BusinessTravelDataController.getById
[ALL] /business/contract/contract_attachment/contract_attachment_form.html , method = com.foxnicweb.web.contract.page.ContractAttachmentPageController.form
[POST] /service-mobile/app-software-info/query-list , method = com.dt.platform.mobile.controller.SoftwareInfoController.queryList
[ALL] /business/contract/contract_attachment/contract_attachment_list.html , method = com.foxnicweb.web.contract.page.ContractAttachmentPageController.list
[POST] /service-mobile/app-software-info/delete , method = com.dt.platform.mobile.controller.SoftwareInfoController.deleteById
[ALL] /business/contract/contract_payment_label/contract_payment_label_form.html , method = com.foxnicweb.web.contract.page.ContractPaymentLabelPageController.form
[POST] /service-hr/hr-business-travel-data/get-by-ids , method = com.dt.platform.hr.controller.BusinessTravelDataController.getByIds
[POST] /service-ops/ops-personnel-division/insert , method = com.dt.platform.ops.controller.PersonnelDivisionController.insert
[POST] /service-mobile/app-software-info/delete-by-ids , method = com.dt.platform.mobile.controller.SoftwareInfoController.deleteByIds
[ALL] /business/contract/contract_payment_label/contract_payment_label_list.html , method = com.foxnicweb.web.contract.page.ContractPaymentLabelPageController.list
[ALL] /business/contract/contract_label_s/contract_label_s_form.html , method = com.foxnicweb.web.contract.page.ContractLabelSPageController.form
[POST] /service-ops/ops-personnel-division/get-by-id , method = com.dt.platform.ops.controller.PersonnelDivisionController.getById
[ALL] /business/contract/contract_label_s/contract_label_s_list.html , method = com.foxnicweb.web.contract.page.ContractLabelSPageController.list
[ALL] /business/contract/contract_performance/contract_performance_form.html , method = com.foxnicweb.web.contract.page.ContractPerformancePageController.form
[POST] /service-ops/ops-personnel-division/get-by-ids , method = com.dt.platform.ops.controller.PersonnelDivisionController.getByIds
[POST] /service-mobile/app-software-info/query-paged-list , method = com.dt.platform.mobile.controller.SoftwareInfoController.queryPagedList
[ALL] /business/contract/contract_performance/contract_performance_list.html , method = com.foxnicweb.web.contract.page.ContractPerformancePageController.list
[ALL] /service-mobile/app-software-info/export-excel , method = com.dt.platform.mobile.controller.SoftwareInfoController.exportExcel
[ALL] /business/contract/contract_accept/contract_accept_form.html , method = com.foxnicweb.web.contract.page.ContractAcceptPageController.form
[ALL] /service-mobile/app-software-info/export-excel-template , method = com.dt.platform.mobile.controller.SoftwareInfoController.exportExcelTemplate
[ALL] /business/contract/contract_accept/contract_accept_list.html , method = com.foxnicweb.web.contract.page.ContractAcceptPageController.list
[POST] /service-hr/hr-business-travel-data/query-list , method = com.dt.platform.hr.controller.BusinessTravelDataController.queryList
[ALL] /service-mobile/app-software-info/import-excel , method = com.dt.platform.mobile.controller.SoftwareInfoController.importExcel
[GET] /v3/api-docs , method = springfox.documentation.oas.web.OpenApiControllerWebMvc.getDocumentation
[POST] /service-ops/ops-monitor-node-value-last/update , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.update
[POST] /service-ops/ops-personnel-division/query-list , method = com.dt.platform.ops.controller.PersonnelDivisionController.queryList
[ALL] /business/mobile/module_group/module_group_form.html , method = com.dt.platform.mobile.page.ModuleGroupPageController.form
[ALL] /error , method = org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error
[ALL] /business/mobile/module_group/module_group_list.html , method = com.dt.platform.mobile.page.ModuleGroupPageController.list
[ALL] /error , method = org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml
[POST] /service-hr/hr-business-travel-data/delete , method = com.dt.platform.hr.controller.BusinessTravelDataController.deleteById
[POST] /service-ops/ops-personnel-division/delete , method = com.dt.platform.ops.controller.PersonnelDivisionController.deleteById
[ALL] /service-eam/eam-repair-urgency/export-excel , method = com.dt.platform.eam.controller.RepairUrgencyController.exportExcel
[ALL] /business/mobile/module_info/module_info_form.html , method = com.dt.platform.mobile.page.ModuleInfoPageController.form
[ALL] /service-eam/eam-repair-urgency/export-excel-template , method = com.dt.platform.eam.controller.RepairUrgencyController.exportExcelTemplate
[POST] /service-ops/ops-personnel-division/delete-by-ids , method = com.dt.platform.ops.controller.PersonnelDivisionController.deleteByIds
[ALL] /business/mobile/module_info/module_info_list.html , method = com.dt.platform.mobile.page.ModuleInfoPageController.list
[ALL] /service-eam/eam-repair-urgency/import-excel , method = com.dt.platform.eam.controller.RepairUrgencyController.importExcel
[POST] /service-eam/eam-purchase-order/delete , method = com.dt.platform.eam.controller.PurchaseOrderController.deleteById
[ALL] /business/mobile/software_group/software_group_form.html , method = com.dt.platform.mobile.page.SoftwareGroupPageController.form
[POST] /service-hr/hr-business-travel-data/delete-by-ids , method = com.dt.platform.hr.controller.BusinessTravelDataController.deleteByIds
[ALL] /business/mobile/software_group/software_group_list.html , method = com.dt.platform.mobile.page.SoftwareGroupPageController.list
[POST] /service-eam/eam-purchase-order/delete-by-ids , method = com.dt.platform.eam.controller.PurchaseOrderController.deleteByIds
[ALL] /business/mobile/software_info/software_info_form.html , method = com.dt.platform.mobile.page.SoftwareInfoPageController.form
[ALL] /business/mobile/software_info/software_info_list.html , method = com.dt.platform.mobile.page.SoftwareInfoPageController.list
[POST] /service-ops/ops-personnel-division/query-paged-list , method = com.dt.platform.ops.controller.PersonnelDivisionController.queryPagedList
[ALL] /business/mobile/software_info/software_download_list.html , method = com.dt.platform.mobile.page.SoftwareInfoPageController.downloadList
[POST] /service-eam/eam-residual-strategy/update , method = com.dt.platform.eam.controller.ResidualStrategyController.update
[POST] /service-eam/eam-purchase-order/query-paged-list , method = com.dt.platform.eam.controller.PurchaseOrderController.queryPagedList
[POST] /service-wms/wms-area/update , method = com.dt.platform.wms.controller.AreaController.update
[POST] /service-ops/ops-public-content/update , method = com.dt.platform.ops.controller.PublicContentController.update
[POST] /service-hr/hr-business-travel-data/query-paged-list , method = com.dt.platform.hr.controller.BusinessTravelDataController.queryPagedList
[POST] /service-eam/eam-residual-strategy/save , method = com.dt.platform.eam.controller.ResidualStrategyController.save
[POST] /service-eam/eam-purchase-order-detail/update , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.update
[POST] /service-wms/wms-area/save , method = com.dt.platform.wms.controller.AreaController.save
[POST] /service-ops/ops-public-content/save , method = com.dt.platform.ops.controller.PublicContentController.save
[POST] /service-eam/eam-purchase-order-detail/save , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.save
[POST] /service-wms/wms-area/insert , method = com.dt.platform.wms.controller.AreaController.insert
[POST] /service-eam/eam-residual-strategy/insert , method = com.dt.platform.eam.controller.ResidualStrategyController.insert
[POST] /service-ops/ops-monitor-node-value-last/save , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.save
[POST] /service-wms/wms-area/get-by-id , method = com.dt.platform.wms.controller.AreaController.getById
[POST] /service-eam/eam-purchase-order-detail/insert , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.insert
[POST] /service-eam/eam-residual-strategy/get-by-id , method = com.dt.platform.eam.controller.ResidualStrategyController.getById
[POST] /service-ops/ops-public-content/insert , method = com.dt.platform.ops.controller.PublicContentController.insert
[POST] /service-hr/hr-certificate/update , method = com.dt.platform.hr.controller.CertificateController.update
[POST] /service-wms/wms-area/get-by-ids , method = com.dt.platform.wms.controller.AreaController.getByIds
[POST] /service-eam/eam-purchase-order-detail/get-by-id , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.getById
[POST] /service-eam/eam-residual-strategy/get-by-ids , method = com.dt.platform.eam.controller.ResidualStrategyController.getByIds
[POST] /service-ops/ops-public-content/get-by-id , method = com.dt.platform.ops.controller.PublicContentController.getById
[POST] /service-eam/eam-purchase-order-detail/get-by-ids , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.getByIds
[POST] /service-wms/wms-area/query-list , method = com.dt.platform.wms.controller.AreaController.queryList
[POST] /service-ops/ops-public-content/get-by-ids , method = com.dt.platform.ops.controller.PublicContentController.getByIds
[POST] /service-wms/wms-area/delete , method = com.dt.platform.wms.controller.AreaController.deleteById
[POST] /service-eam/eam-purchase-order-detail/query-list , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.queryList
[POST] /service-eam/eam-residual-strategy/query-list , method = com.dt.platform.eam.controller.ResidualStrategyController.queryList
[POST] /service-wms/wms-area/delete-by-ids , method = com.dt.platform.wms.controller.AreaController.deleteByIds
[POST] /service-eam/eam-purchase-order-detail/delete , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.deleteById
[POST] /service-eam/eam-residual-strategy/delete , method = com.dt.platform.eam.controller.ResidualStrategyController.deleteById
[POST] /service-ops/ops-public-content/query-list , method = com.dt.platform.ops.controller.PublicContentController.queryList
[POST] /service-hr/hr-certificate/save , method = com.dt.platform.hr.controller.CertificateController.save
[POST] /service-eam/eam-purchase-order-detail/delete-by-ids , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.deleteByIds
[POST] /service-wms/wms-area/query-paged-list , method = com.dt.platform.wms.controller.AreaController.queryPagedList
[POST] /service-eam/eam-residual-strategy/delete-by-ids , method = com.dt.platform.eam.controller.ResidualStrategyController.deleteByIds
[POST] /service-ops/ops-public-content/delete , method = com.dt.platform.ops.controller.PublicContentController.deleteById
[POST] /service-eam/eam-purchase-order-detail/query-paged-list , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.queryPagedList
[POST] /service-ops/ops-public-content/delete-by-ids , method = com.dt.platform.ops.controller.PublicContentController.deleteByIds
[ALL] /service-eam/eam-purchase-order-detail/export-excel , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.exportExcel
[POST] /service-wms/wms-area-info/update , method = com.dt.platform.wms.controller.AreaInfoController.update
[ALL] /service-eam/eam-purchase-order-detail/export-excel-template , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.exportExcelTemplate
[POST] /service-eam/eam-residual-strategy/query-paged-list , method = com.dt.platform.eam.controller.ResidualStrategyController.queryPagedList
[ALL] /service-eam/eam-purchase-order-detail/import-excel , method = com.dt.platform.eam.controller.PurchaseOrderDetailController.importExcel
[POST] /service-hr/hr-certificate/insert , method = com.dt.platform.hr.controller.CertificateController.insert
[POST] /service-ops/ops-monitor-node-value-last/insert , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.insert
[POST] /service-wms/wms-area-info/save , method = com.dt.platform.wms.controller.AreaInfoController.save
[ALL] /service-eam/eam-residual-strategy/export-excel , method = com.dt.platform.eam.controller.ResidualStrategyController.exportExcel
[POST] /service-ops/ops-public-content/query-paged-list , method = com.dt.platform.ops.controller.PublicContentController.queryPagedList
[POST] /service-ops/ops-monitor-node-value-last/get-by-id , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.getById
[ALL] /service-eam/eam-residual-strategy/export-excel-template , method = com.dt.platform.eam.controller.ResidualStrategyController.exportExcelTemplate
[POST] /service-eam/eam-repair-category/update , method = com.dt.platform.eam.controller.RepairCategoryController.update
[POST] /service-hr/hr-certificate/get-by-id , method = com.dt.platform.hr.controller.CertificateController.getById
[POST] /service-ops/ops-monitor-node-value-last/get-by-ids , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.getByIds
[POST] /service-wms/wms-area-info/insert , method = com.dt.platform.wms.controller.AreaInfoController.insert
[ALL] /service-eam/eam-residual-strategy/import-excel , method = com.dt.platform.eam.controller.ResidualStrategyController.importExcel
[POST] /service-ops/ops-safety-baseline/update , method = com.dt.platform.ops.controller.SafetyBaselineController.update
[POST] /service-wms/wms-area-info/get-by-id , method = com.dt.platform.wms.controller.AreaInfoController.getById
[POST] /service-eam/eam-repair-category/save , method = com.dt.platform.eam.controller.RepairCategoryController.save
[POST] /service-hr/hr-certificate/get-by-ids , method = com.dt.platform.hr.controller.CertificateController.getByIds
[POST] /service-eam/eam-safetylevel/update , method = com.dt.platform.eam.controller.SafetylevelController.update
[POST] /service-wms/wms-area-info/get-by-ids , method = com.dt.platform.wms.controller.AreaInfoController.getByIds
[POST] /service-eam/eam-repair-category/insert , method = com.dt.platform.eam.controller.RepairCategoryController.insert
[POST] /service-eam/eam-safetylevel/save , method = com.dt.platform.eam.controller.SafetylevelController.save
[POST] /service-ops/ops-safety-baseline/save , method = com.dt.platform.ops.controller.SafetyBaselineController.save
[POST] /service-eam/eam-repair-category/get-by-id , method = com.dt.platform.eam.controller.RepairCategoryController.getById
[POST] /service-wms/wms-area-info/query-list , method = com.dt.platform.wms.controller.AreaInfoController.queryList
[POST] /service-eam/eam-safetylevel/insert , method = com.dt.platform.eam.controller.SafetylevelController.insert
[POST] /service-wms/wms-area-info/delete , method = com.dt.platform.wms.controller.AreaInfoController.deleteById
[POST] /service-eam/eam-repair-category/get-by-ids , method = com.dt.platform.eam.controller.RepairCategoryController.getByIds
[POST] /service-hr/hr-certificate/query-list , method = com.dt.platform.hr.controller.CertificateController.queryList
[POST] /service-ops/ops-safety-baseline/insert , method = com.dt.platform.ops.controller.SafetyBaselineController.insert
[POST] /service-eam/eam-safetylevel/get-by-id , method = com.dt.platform.eam.controller.SafetylevelController.getById
[POST] /service-wms/wms-area-info/delete-by-ids , method = com.dt.platform.wms.controller.AreaInfoController.deleteByIds
[POST] /service-eam/eam-safetylevel/get-by-ids , method = com.dt.platform.eam.controller.SafetylevelController.getByIds
[POST] /service-ops/ops-safety-baseline/get-by-id , method = com.dt.platform.ops.controller.SafetyBaselineController.getById
[POST] /service-eam/eam-repair-category/query-list , method = com.dt.platform.eam.controller.RepairCategoryController.queryList
[POST] /service-hr/hr-certificate/delete , method = com.dt.platform.hr.controller.CertificateController.deleteById
[POST] /service-ops/ops-safety-baseline/get-by-ids , method = com.dt.platform.ops.controller.SafetyBaselineController.getByIds
[POST] /service-eam/eam-safetylevel/query-list , method = com.dt.platform.eam.controller.SafetylevelController.queryList
[POST] /service-eam/eam-repair-category/delete , method = com.dt.platform.eam.controller.RepairCategoryController.deleteById
[POST] /service-wms/wms-area-info/query-paged-list , method = com.dt.platform.wms.controller.AreaInfoController.queryPagedList
[POST] /service-hr/hr-certificate/delete-by-ids , method = com.dt.platform.hr.controller.CertificateController.deleteByIds
[POST] /service-eam/eam-repair-category/delete-by-ids , method = com.dt.platform.eam.controller.RepairCategoryController.deleteByIds
[POST] /service-eam/eam-safetylevel/delete , method = com.dt.platform.eam.controller.SafetylevelController.deleteById
[POST] /service-ops/ops-safety-baseline/query-list , method = com.dt.platform.ops.controller.SafetyBaselineController.queryList
[POST] /service-ops/ops-monitor-node-value-last/query-list , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.queryList
[POST] /service-wms/wms-business-type/update , method = com.dt.platform.wms.controller.BusinessTypeController.update
[POST] /service-eam/eam-safetylevel/delete-by-ids , method = com.dt.platform.eam.controller.SafetylevelController.deleteByIds
[POST] /service-ops/ops-safety-baseline/delete , method = com.dt.platform.ops.controller.SafetyBaselineController.deleteById
[POST] /service-ops/ops-monitor-node-value-last/delete , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.deleteById
[POST] /service-eam/eam-repair-category/query-paged-list , method = com.dt.platform.eam.controller.RepairCategoryController.queryPagedList
[POST] /service-wms/wms-business-type/save , method = com.dt.platform.wms.controller.BusinessTypeController.save
[ALL] /service-eam/eam-repair-category/export-excel , method = com.dt.platform.eam.controller.RepairCategoryController.exportExcel
[POST] /service-ops/ops-safety-baseline/delete-by-ids , method = com.dt.platform.ops.controller.SafetyBaselineController.deleteByIds
[POST] /service-eam/eam-safetylevel/query-paged-list , method = com.dt.platform.eam.controller.SafetylevelController.queryPagedList
[ALL] /service-eam/eam-repair-category/export-excel-template , method = com.dt.platform.eam.controller.RepairCategoryController.exportExcelTemplate
[POST] /service-ops/ops-monitor-node-value-last/delete-by-ids , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.deleteByIds
[POST] /service-wms/wms-business-type/insert , method = com.dt.platform.wms.controller.BusinessTypeController.insert
[ALL] /service-eam/eam-safetylevel/export-excel , method = com.dt.platform.eam.controller.SafetylevelController.exportExcel
[ALL] /service-eam/eam-repair-category/import-excel , method = com.dt.platform.eam.controller.RepairCategoryController.importExcel
[POST] /service-hr/hr-certificate/query-paged-list , method = com.dt.platform.hr.controller.CertificateController.queryPagedList
[ALL] /service-eam/eam-safetylevel/export-excel-template , method = com.dt.platform.eam.controller.SafetylevelController.exportExcelTemplate
[POST] /service-wms/wms-business-type/get-by-id , method = com.dt.platform.wms.controller.BusinessTypeController.getById
[POST] /service-ops/ops-safety-baseline/query-paged-list , method = com.dt.platform.ops.controller.SafetyBaselineController.queryPagedList
[ALL] /service-eam/eam-safetylevel/import-excel , method = com.dt.platform.eam.controller.SafetylevelController.importExcel
[POST] /service-wms/wms-business-type/get-by-ids , method = com.dt.platform.wms.controller.BusinessTypeController.getByIds
[POST] /service-eam/eam-repair-category-tpl/update , method = com.dt.platform.eam.controller.RepairCategoryTplController.update
[POST] /service-ops/ops-service-category/update , method = com.dt.platform.ops.controller.ServiceCategoryController.update
[POST] /service-hr/hr-certificate-level/update , method = com.dt.platform.hr.controller.CertificateLevelController.update
[POST] /service-wms/wms-business-type/query-list , method = com.dt.platform.wms.controller.BusinessTypeController.queryList
[POST] /service-eam/eam-repair-category-tpl/save , method = com.dt.platform.eam.controller.RepairCategoryTplController.save
[POST] /service-ops/ops-service-category/save , method = com.dt.platform.ops.controller.ServiceCategoryController.save
[POST] /service-wms/wms-business-type/delete , method = com.dt.platform.wms.controller.BusinessTypeController.deleteById
[POST] /service-wms/wms-business-type/delete-by-ids , method = com.dt.platform.wms.controller.BusinessTypeController.deleteByIds
[POST] /service-hr/hr-certificate-level/save , method = com.dt.platform.hr.controller.CertificateLevelController.save
[POST] /service-ops/ops-service-category/insert , method = com.dt.platform.ops.controller.ServiceCategoryController.insert
[POST] /service-eam/eam-repair-category-tpl/insert , method = com.dt.platform.eam.controller.RepairCategoryTplController.insert
[POST] /service-eam/eam-stock/update , method = com.dt.platform.eam.controller.StockController.update
[POST] /service-ops/ops-service-category/get-by-id , method = com.dt.platform.ops.controller.ServiceCategoryController.getById
[POST] /service-wms/wms-business-type/query-paged-list , method = com.dt.platform.wms.controller.BusinessTypeController.queryPagedList
[POST] /service-eam/eam-repair-category-tpl/get-by-id , method = com.dt.platform.eam.controller.RepairCategoryTplController.getById
[POST] /service-ops/ops-service-category/get-by-ids , method = com.dt.platform.ops.controller.ServiceCategoryController.getByIds
[POST] /service-hr/hr-certificate-level/insert , method = com.dt.platform.hr.controller.CertificateLevelController.insert
[POST] /service-eam/eam-repair-category-tpl/get-by-ids , method = com.dt.platform.eam.controller.RepairCategoryTplController.getByIds
[POST] /service-ops/ops-service-category/query-list , method = com.dt.platform.ops.controller.ServiceCategoryController.queryList
[POST] /service-ops/ops-monitor-node-value-last/query-paged-list , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.queryPagedList
[POST] /service-wms/wms-car/update , method = com.dt.platform.wms.controller.CarController.update
[POST] /service-hr/hr-certificate-level/get-by-id , method = com.dt.platform.hr.controller.CertificateLevelController.getById
[ALL] /service-ops/ops-monitor-node-value-last/export-excel , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.exportExcel
[POST] /service-ops/ops-service-category/delete , method = com.dt.platform.ops.controller.ServiceCategoryController.deleteById
[POST] /service-eam/eam-repair-category-tpl/query-list , method = com.dt.platform.eam.controller.RepairCategoryTplController.queryList
[ALL] /service-ops/ops-monitor-node-value-last/export-excel-template , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.exportExcelTemplate
[ALL] /service-ops/ops-monitor-node-value-last/import-excel , method = com.dt.platform.ops.controller.MonitorNodeValueLastController.importExcel
[POST] /service-hr/hr-certificate-level/get-by-ids , method = com.dt.platform.hr.controller.CertificateLevelController.getByIds
[POST] /service-eam/eam-stock/save , method = com.dt.platform.eam.controller.StockController.save
[POST] /service-ops/ops-service-category/delete-by-ids , method = com.dt.platform.ops.controller.ServiceCategoryController.deleteByIds
[POST] /service-eam/eam-repair-category-tpl/delete , method = com.dt.platform.eam.controller.RepairCategoryTplController.deleteById
[POST] /service-eam/eam-asset-stock-goods-tranfer/get-by-id , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.getById
[POST] /service-ops/ops-monitor-object/update , method = com.dt.platform.ops.controller.MonitorObjectController.update
[POST] /service-eam/eam-repair-category-tpl/delete-by-ids , method = com.dt.platform.eam.controller.RepairCategoryTplController.deleteByIds
[POST] /service-ops/ops-service-category/query-paged-list , method = com.dt.platform.ops.controller.ServiceCategoryController.queryPagedList
[POST] /service-eam/eam-asset-stock-goods-tranfer/get-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.getByIds
[ALL] /service-eam/eam-asset-stock-goods-tranfer/confirm-operation , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.confirmOperation
[POST] /service-ops/ops-monitor-object/save , method = com.dt.platform.ops.controller.MonitorObjectController.save
[POST] /service-ops/ops-service-category-label/update , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.update
[POST] /service-eam/eam-repair-category-tpl/query-paged-list , method = com.dt.platform.eam.controller.RepairCategoryTplController.queryPagedList
[ALL] /service-eam/eam-repair-category-tpl/export-excel , method = com.dt.platform.eam.controller.RepairCategoryTplController.exportExcel
[POST] /service-ops/ops-monitor-object/insert , method = com.dt.platform.ops.controller.MonitorObjectController.insert
[ALL] /service-eam/eam-repair-category-tpl/export-excel-template , method = com.dt.platform.eam.controller.RepairCategoryTplController.exportExcelTemplate
[POST] /service-ops/ops-service-category-label/save , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.save
[POST] /service-eam/eam-stock/insert , method = com.dt.platform.eam.controller.StockController.insert
[POST] /service-ops/ops-monitor-object/get-by-id , method = com.dt.platform.ops.controller.MonitorObjectController.getById
[ALL] /service-eam/eam-repair-category-tpl/import-excel , method = com.dt.platform.eam.controller.RepairCategoryTplController.importExcel
[ALL] /business/eam/c_cust_inspect_tpl_asset/c_cust_inspect_tpl_asset_form.html , method = com.dt.platform.eam.page.CCustInspectTplAssetPageController.form
[POST] /service-ops/ops-service-category-label/insert , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.insert
[POST] /service-eam/eam-stock/get-by-id , method = com.dt.platform.eam.controller.StockController.getById
[POST] /service-ops/ops-monitor-object/get-by-ids , method = com.dt.platform.ops.controller.MonitorObjectController.getByIds
[POST] /service-eam/eam-repair-group/update , method = com.dt.platform.eam.controller.RepairGroupController.update
[POST] /service-eam/eam-asset-stock-goods-tranfer/query-list , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.queryList
[POST] /service-ops/ops-service-category-label/get-by-id , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.getById
[POST] /service-eam/eam-stock/get-by-ids , method = com.dt.platform.eam.controller.StockController.getByIds
[ALL] /business/eam/c_cust_inspect_tpl_asset/c_cust_inspect_tpl_asset_list.html , method = com.dt.platform.eam.page.CCustInspectTplAssetPageController.list
[POST] /service-eam/eam-asset-stock-goods-tranfer/delete , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.deleteById
[POST] /service-ops/ops-monitor-object/query-list , method = com.dt.platform.ops.controller.MonitorObjectController.queryList
[POST] /service-eam/eam-repair-group/save , method = com.dt.platform.eam.controller.RepairGroupController.save
[ALL] /service-eam/eam-stock/confirm-operation , method = com.dt.platform.eam.controller.StockController.confirmOperation
[POST] /service-ops/ops-service-category-label/get-by-ids , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.getByIds
[POST] /service-ops/ops-monitor-object/delete , method = com.dt.platform.ops.controller.MonitorObjectController.deleteById
[POST] /service-eam/eam-asset-stock-goods-tranfer/delete-by-ids , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.deleteByIds
[ALL] /business/eam/c_cust_inspect_tpl/c_cust_inspect_tpl_form.html , method = com.dt.platform.eam.page.CCustInspectTplPageController.form
[POST] /service-eam/eam-repair-group/insert , method = com.dt.platform.eam.controller.RepairGroupController.insert
[POST] /service-ops/ops-monitor-object/delete-by-ids , method = com.dt.platform.ops.controller.MonitorObjectController.deleteByIds
[POST] /service-ops/ops-service-category-label/query-list , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.queryList
[ALL] /business/eam/c_cust_inspect_tpl/c_cust_inspect_tpl_list.html , method = com.dt.platform.eam.page.CCustInspectTplPageController.list
[POST] /service-eam/eam-repair-group/get-by-id , method = com.dt.platform.eam.controller.RepairGroupController.getById
[POST] /service-ops/ops-service-category-label/delete , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.deleteById
[POST] /service-ops/ops-monitor-object/query-paged-list , method = com.dt.platform.ops.controller.MonitorObjectController.queryPagedList
[ALL] /business/eam/c_cust_inspect_tpl/asset_list.html , method = com.dt.platform.eam.page.CCustInspectTplPageController.assetList
[POST] /service-eam/eam-repair-group/get-by-ids , method = com.dt.platform.eam.controller.RepairGroupController.getByIds
[POST] /service-ops/ops-service-category-label/delete-by-ids , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.deleteByIds
[ALL] /business/eam/c_cust_inspect_user_r/c_cust_inspect_user_r_form.html , method = com.dt.platform.eam.page.CCustInspectUserRPageController.form
[POST] /service-ops/ops-monitor-object-grafana/update , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.update
[POST] /service-eam/eam-repair-group/query-list , method = com.dt.platform.eam.controller.RepairGroupController.queryList
[POST] /service-ops/ops-service-category-label/query-paged-list , method = com.dt.platform.ops.controller.ServiceCategoryLabelController.queryPagedList
[ALL] /business/eam/c_cust_inspect_user_r/c_cust_inspect_user_r_list.html , method = com.dt.platform.eam.page.CCustInspectUserRPageController.list
[POST] /service-eam/eam-repair-group/delete , method = com.dt.platform.eam.controller.RepairGroupController.deleteById
[POST] /service-ops/ops-monitor-object-grafana/save , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.save
[POST] /service-ops/ops-service-group/update , method = com.dt.platform.ops.controller.ServiceGroupController.update
[ALL] /business/eam/c_cust_inspect_user_s/c_cust_inspect_user_s_form.html , method = com.dt.platform.eam.page.CCustInspectUserSPageController.form
[POST] /service-eam/eam-repair-group/delete-by-ids , method = com.dt.platform.eam.controller.RepairGroupController.deleteByIds
[POST] /service-ops/ops-service-group/save , method = com.dt.platform.ops.controller.ServiceGroupController.save
[POST] /service-eam/eam-repair-group/query-paged-list , method = com.dt.platform.eam.controller.RepairGroupController.queryPagedList
[POST] /service-hr/hr-certificate-level/query-list , method = com.dt.platform.hr.controller.CertificateLevelController.queryList
[POST] /service-ops/ops-service-group/insert , method = com.dt.platform.ops.controller.ServiceGroupController.insert
[ALL] /service-eam/eam-repair-group/export-excel , method = com.dt.platform.eam.controller.RepairGroupController.exportExcel
[POST] /service-hr/hr-certificate-level/delete , method = com.dt.platform.hr.controller.CertificateLevelController.deleteById
[ALL] /service-eam/eam-repair-group/export-excel-template , method = com.dt.platform.eam.controller.RepairGroupController.exportExcelTemplate
[POST] /service-ops/ops-monitor-object-grafana/insert , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.insert
[ALL] /service-eam/eam-repair-group/import-excel , method = com.dt.platform.eam.controller.RepairGroupController.importExcel
[POST] /service-ops/ops-service-group/get-by-id , method = com.dt.platform.ops.controller.ServiceGroupController.getById
[POST] /service-eam/eam-stock/query-list , method = com.dt.platform.eam.controller.StockController.queryList
[POST] /service-ops/ops-monitor-object-grafana/get-by-id , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.getById
[POST] /service-hr/hr-certificate-level/delete-by-ids , method = com.dt.platform.hr.controller.CertificateLevelController.deleteByIds
[POST] /service-ops/ops-service-group/get-by-ids , method = com.dt.platform.ops.controller.ServiceGroupController.getByIds
[POST] /service-eam/eam-stock/delete , method = com.dt.platform.eam.controller.StockController.deleteById
[ALL] /business/eam/c_cust_inspect_user_s/c_cust_inspect_user_s_list.html , method = com.dt.platform.eam.page.CCustInspectUserSPageController.list
[POST] /service-hr/hr-certificate-level/query-paged-list , method = com.dt.platform.hr.controller.CertificateLevelController.queryPagedList
[POST] /service-ops/ops-service-group/query-list , method = com.dt.platform.ops.controller.ServiceGroupController.queryList
[POST] /service-eam/eam-stock/delete-by-ids , method = com.dt.platform.eam.controller.StockController.deleteByIds
[POST] /service-ops/ops-monitor-object-grafana/get-by-ids , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.getByIds
[POST] /service-eam/eam-repair-order-acceptance/update , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.update
[ALL] /business/eam/c_cust_repair_apply/c_cust_repair_apply_form.html , method = com.dt.platform.eam.page.CCustRepairApplyPageController.form
[POST] /service-ops/ops-service-group/delete , method = com.dt.platform.ops.controller.ServiceGroupController.deleteById
[POST] /service-hr/hr-certificate-type/update , method = com.dt.platform.hr.controller.CertificateTypeController.update
[POST] /service-ops/ops-monitor-object-grafana/query-list , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.queryList
[ALL] /business/eam/c_cust_repair_apply/c_cust_repair_apply_list.html , method = com.dt.platform.eam.page.CCustRepairApplyPageController.list
[POST] /service-ops/ops-service-group/delete-by-ids , method = com.dt.platform.ops.controller.ServiceGroupController.deleteByIds
[POST] /service-ops/ops-monitor-object-grafana/delete , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.deleteById
[POST] /service-hr/hr-certificate-type/save , method = com.dt.platform.hr.controller.CertificateTypeController.save
[POST] /service-eam/eam-repair-order-acceptance/save , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.save
[ALL] /business/eam/c_cust_repair_apply/c_cust_repair_apply_form_full.html , method = com.dt.platform.eam.page.CCustRepairApplyPageController.formFull
[POST] /service-ops/ops-service-group/query-paged-list , method = com.dt.platform.ops.controller.ServiceGroupController.queryPagedList
[POST] /service-ops/ops-monitor-object-grafana/delete-by-ids , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.deleteByIds
[POST] /service-hr/hr-certificate-type/insert , method = com.dt.platform.hr.controller.CertificateTypeController.insert
[ALL] /business/eam/c_cust_repair_apply/c_cust_repair_apply_list_public.html , method = com.dt.platform.eam.page.CCustRepairApplyPageController.listPublic
[POST] /service-hr/hr-certificate-type/get-by-id , method = com.dt.platform.hr.controller.CertificateTypeController.getById
[POST] /service-eam/eam-stock/query-paged-list , method = com.dt.platform.eam.controller.StockController.queryPagedList
[POST] /service-ops/ops-monitor-object-grafana/query-paged-list , method = com.dt.platform.ops.controller.MonitorObjectGrafanaController.queryPagedList
[POST] /service-eam/eam-repair-order-acceptance/insert , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.insert
[ALL] /business/eam/c_cust_repair_apply/c_cust_repair_apply_form_public.html , method = com.dt.platform.eam.page.CCustRepairApplyPageController.formPublic
[POST] /service-hr/hr-certificate-type/get-by-ids , method = com.dt.platform.hr.controller.CertificateTypeController.getByIds
[ALL] /service-eam/eam-stock/export-excel , method = com.dt.platform.eam.controller.StockController.exportExcel
[POST] /service-eam/eam-repair-order-acceptance/get-by-id , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.getById
[POST] /service-ops/ops-monitor-object-group/update , method = com.dt.platform.ops.controller.MonitorObjectGroupController.update
[ALL] /service-eam/eam-stock/export-excel-template , method = com.dt.platform.eam.controller.StockController.exportExcelTemplate
[POST] /service-hr/hr-certificate-type/query-list , method = com.dt.platform.hr.controller.CertificateTypeController.queryList
[POST] /service-eam/eam-repair-order-acceptance/get-by-ids , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.getByIds
[ALL] /service-eam/eam-stock/import-excel , method = com.dt.platform.eam.controller.StockController.importExcel
[POST] /service-eam/eam-asset-stock-goods-tranfer/query-paged-list , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.queryPagedList
[POST] /service-ops/ops-monitor-object-group/save , method = com.dt.platform.ops.controller.MonitorObjectGroupController.save
[POST] /service-hr/hr-certificate-type/delete , method = com.dt.platform.hr.controller.CertificateTypeController.deleteById
[ALL] /service-eam/eam-asset-stock-goods-tranfer/export-excel , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.exportExcel
[ALL] /service-eam/eam-asset-stock-goods-tranfer/export-excel-template , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.exportExcelTemplate
[POST] /service-ops/ops-monitor-object-group/insert , method = com.dt.platform.ops.controller.MonitorObjectGroupController.insert
[ALL] /service-eam/eam-asset-stock-goods-tranfer/import-excel , method = com.dt.platform.eam.controller.AssetStockGoodsTranferController.importExcel
[POST] /service-eam/eam-supplier/update , method = com.dt.platform.eam.controller.SupplierController.update
[POST] /service-hr/hr-certificate-type/delete-by-ids , method = com.dt.platform.hr.controller.CertificateTypeController.deleteByIds
[POST] /service-ops/ops-monitor-object-group/get-by-id , method = com.dt.platform.ops.controller.MonitorObjectGroupController.getById
[ALL] /business/eam/c_cust_repair_apply/c_cust_repair_apply_form_full_p.html , method = com.dt.platform.eam.page.CCustRepairApplyPageController.formFullP
[POST] /service-ops/ops-monitor-object-group/get-by-ids , method = com.dt.platform.ops.controller.MonitorObjectGroupController.getByIds
[POST] /service-hr/hr-certificate-type/query-paged-list , method = com.dt.platform.hr.controller.CertificateTypeController.queryPagedList
[POST] /service-eam/eam-supplier/save , method = com.dt.platform.eam.controller.SupplierController.save
[POST] /service-ops/ops-monitor-object-group/query-list , method = com.dt.platform.ops.controller.MonitorObjectGroupController.queryList
[POST] /service-eam/eam-asset-storage/update , method = com.dt.platform.eam.controller.AssetStorageController.update
[POST] /service-ops/ops-monitor-object-group/delete , method = com.dt.platform.ops.controller.MonitorObjectGroupController.deleteById
[POST] /service-hr/hr-contract-org/update , method = com.dt.platform.hr.controller.ContractOrgController.update
[POST] /service-eam/eam-supplier/insert , method = com.dt.platform.eam.controller.SupplierController.insert
[POST] /service-ops/ops-monitor-object-group/delete-by-ids , method = com.dt.platform.ops.controller.MonitorObjectGroupController.deleteByIds
[POST] /service-hr/hr-contract-org/save , method = com.dt.platform.hr.controller.ContractOrgController.save
[POST] /service-eam/eam-supplier/get-by-id , method = com.dt.platform.eam.controller.SupplierController.getById
[POST] /service-ops/ops-monitor-object-group/query-paged-list , method = com.dt.platform.ops.controller.MonitorObjectGroupController.queryPagedList
[POST] /service-hr/hr-contract-org/insert , method = com.dt.platform.hr.controller.ContractOrgController.insert
[POST] /service-eam/eam-supplier/get-by-ids , method = com.dt.platform.eam.controller.SupplierController.getByIds
[POST] /service-eam/eam-asset-storage/save , method = com.dt.platform.eam.controller.AssetStorageController.save
[POST] /service-hr/hr-contract-org/get-by-id , method = com.dt.platform.hr.controller.ContractOrgController.getById
[POST] /service-ops/ops-monitor-object-model/update , method = com.dt.platform.ops.controller.MonitorObjectModelController.update
[POST] /service-hr/hr-contract-org/get-by-ids , method = com.dt.platform.hr.controller.ContractOrgController.getByIds
[POST] /service-eam/eam-supplier/query-list , method = com.dt.platform.eam.controller.SupplierController.queryList
[POST] /service-hr/hr-contract-org/query-list , method = com.dt.platform.hr.controller.ContractOrgController.queryList
[ALL] /business/eam/c_cust_repiar_item/c_cust_repiar_item_form.html , method = com.dt.platform.eam.page.CCustRepiarItemPageController.form
[POST] /service-ops/ops-monitor-object-model/save , method = com.dt.platform.ops.controller.MonitorObjectModelController.save
[POST] /service-eam/eam-asset-storage/insert , method = com.dt.platform.eam.controller.AssetStorageController.insert
[POST] /service-eam/eam-supplier/delete , method = com.dt.platform.eam.controller.SupplierController.deleteById
[POST] /service-hr/hr-contract-org/delete , method = com.dt.platform.hr.controller.ContractOrgController.deleteById
[ALL] /business/eam/c_cust_repiar_item/c_cust_repiar_item_list.html , method = com.dt.platform.eam.page.CCustRepiarItemPageController.list
[POST] /service-ops/ops-monitor-object-model/insert , method = com.dt.platform.ops.controller.MonitorObjectModelController.insert
[POST] /service-hr/hr-contract-org/delete-by-ids , method = com.dt.platform.hr.controller.ContractOrgController.deleteByIds
[POST] /service-eam/eam-asset-storage/get-by-id , method = com.dt.platform.eam.controller.AssetStorageController.getById
[POST] /service-ops/ops-monitor-object-model/get-by-id , method = com.dt.platform.ops.controller.MonitorObjectModelController.getById
[POST] /service-hr/hr-contract-org/query-paged-list , method = com.dt.platform.hr.controller.ContractOrgController.queryPagedList
[POST] /service-eam/eam-asset-storage/get-by-ids , method = com.dt.platform.eam.controller.AssetStorageController.getByIds
[ALL] /business/eam/category_finance/category_finance_form.html , method = com.dt.platform.eam.page.CategoryFinancePageController.form
[POST] /service-ops/ops-monitor-object-model/get-by-ids , method = com.dt.platform.ops.controller.MonitorObjectModelController.getByIds
[ALL] /business/eam/category_finance/category_finance_list.html , method = com.dt.platform.eam.page.CategoryFinancePageController.list
[POST] /service-hr/hr-person-cert/update , method = com.dt.platform.hr.controller.PersonCertController.update
[ALL] /service-eam/eam-asset-storage/confirm-operation , method = com.dt.platform.eam.controller.AssetStorageController.confirmOperation
[POST] /service-ops/ops-service-info/update , method = com.dt.platform.ops.controller.ServiceInfoController.update
[POST] /service-eam/eam-asset-storage/bpm-callback , method = com.dt.platform.eam.controller.AssetStorageController.onProcessCallback
[POST] /service-hr/hr-person-cert/save , method = com.dt.platform.hr.controller.PersonCertController.save
[ALL] /business/eam/category/category_form.html , method = com.dt.platform.eam.page.CategoryPageController.form
[POST] /service-ops/ops-monitor-object-model/query-list , method = com.dt.platform.ops.controller.MonitorObjectModelController.queryList
[ALL] /business/eam/category/category_list.html , method = com.dt.platform.eam.page.CategoryPageController.list
[POST] /service-hr/hr-person-cert/insert , method = com.dt.platform.hr.controller.PersonCertController.insert
[ALL] /business/eam/code_part/code_part_form.html , method = com.dt.platform.eam.page.CodePartPageController.form
[POST] /service-ops/ops-service-info/save , method = com.dt.platform.ops.controller.ServiceInfoController.save
[ALL] /business/eam/code_part/code_part_list.html , method = com.dt.platform.eam.page.CodePartPageController.list
[POST] /service-hr/hr-person-cert/get-by-id , method = com.dt.platform.hr.controller.PersonCertController.getById
[POST] /service-ops/ops-monitor-object-model/delete , method = com.dt.platform.ops.controller.MonitorObjectModelController.deleteById
[ALL] /business/eam/code_rule/code_rule_form.html , method = com.dt.platform.eam.page.CodeRulePageController.form
[ALL] /business/eam/code_rule/code_rule_list.html , method = com.dt.platform.eam.page.CodeRulePageController.list
[POST] /service-eam/eam-asset-storage/query-list , method = com.dt.platform.eam.controller.AssetStorageController.queryList
[POST] /service-ops/ops-monitor-object-model/delete-by-ids , method = com.dt.platform.ops.controller.MonitorObjectModelController.deleteByIds
[POST] /service-hr/hr-person-cert/get-by-ids , method = com.dt.platform.hr.controller.PersonCertController.getByIds
[ALL] /business/eam/code_rule/code_rule.html , method = com.dt.platform.eam.page.CodeRulePageController.ruleList
[POST] /service-ops/ops-service-info/insert , method = com.dt.platform.ops.controller.ServiceInfoController.insert
[POST] /service-eam/eam-asset-storage/delete , method = com.dt.platform.eam.controller.AssetStorageController.deleteById
[POST] /service-eam/eam-supplier/delete-by-ids , method = com.dt.platform.eam.controller.SupplierController.deleteByIds
[ALL] /business/eam/daily_management/myAsset_list.html , method = com.dt.platform.eam.page.DailyManagementPageController.list
[POST] /service-ops/ops-monitor-object-model/query-paged-list , method = com.dt.platform.ops.controller.MonitorObjectModelController.queryPagedList
[POST] /service-eam/eam-asset-storage/delete-by-ids , method = com.dt.platform.eam.controller.AssetStorageController.deleteByIds
[POST] /service-ops/ops-service-info/get-by-id , method = com.dt.platform.ops.controller.ServiceInfoController.getById
[ALL] /business/eam/daily_management/myAssetMgr_list.html , method = com.dt.platform.eam.page.DailyManagementPageController.listMgr
[ALL] /business/eam/failure_registration/failure_registration_form.html , method = com.dt.platform.eam.page.FailureRegistrationPageController.form
[POST] /service-ops/ops-monitor-object-tpl/update , method = com.dt.platform.ops.controller.MonitorObjectTplController.update
[ALL] /business/eam/failure_registration/failure_registration_list.html , method = com.dt.platform.eam.page.FailureRegistrationPageController.list
[ALL] /business/eam/feedback/feedback_form.html , method = com.dt.platform.eam.page.FeedbackPageController.form
[ALL] /business/eam/feedback/feedback_list.html , method = com.dt.platform.eam.page.FeedbackPageController.list
[POST] /service-ops/ops-monitor-object-tpl/save , method = com.dt.platform.ops.controller.MonitorObjectTplController.save
[ALL] /business/eam/goods/goods_form.html , method = com.dt.platform.eam.page.GoodsPageController.form
[POST] /service-ops/ops-service-info/get-by-ids , method = com.dt.platform.ops.controller.ServiceInfoController.getByIds
[ALL] /business/eam/goods/goods_list.html , method = com.dt.platform.eam.page.GoodsPageController.list
[POST] /service-eam/eam-repair-order-acceptance/query-list , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.queryList
[POST] /service-eam/eam-asset-storage/query-paged-list , method = com.dt.platform.eam.controller.AssetStorageController.queryPagedList
[ALL] /business/eam/goods_stock_goods/goods_stock_form.html , method = com.dt.platform.eam.page.GoodsStockGoodsPageController.form
[ALL] /service-eam/eam-asset-storage/export-excel , method = com.dt.platform.eam.controller.AssetStorageController.exportExcel
[POST] /service-ops/ops-service-info/query-list , method = com.dt.platform.ops.controller.ServiceInfoController.queryList
[POST] /service-eam/eam-repair-order-acceptance/delete , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.deleteById
[ALL] /service-eam/eam-asset-storage/export-excel-template , method = com.dt.platform.eam.controller.AssetStorageController.exportExcelTemplate
[POST] /service-ops/ops-service-info/delete , method = com.dt.platform.ops.controller.ServiceInfoController.deleteById
[POST] /service-eam/eam-repair-order-acceptance/delete-by-ids , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.deleteByIds
[ALL] /business/eam/goods_stock_goods/goods_stock_list.html , method = com.dt.platform.eam.page.GoodsStockGoodsPageController.list
[ALL] /service-eam/eam-asset-storage/import-excel , method = com.dt.platform.eam.controller.AssetStorageController.importExcel
[POST] /service-ops/ops-service-info/delete-by-ids , method = com.dt.platform.ops.controller.ServiceInfoController.deleteByIds
[ALL] /business/eam/goods_stock/goods_stock_form.html , method = com.dt.platform.eam.page.GoodsStockPageController.form
[ALL] /business/eam/goods_stock/goods_stock_list.html , method = com.dt.platform.eam.page.GoodsStockPageController.list
[ALL] /business/eam/goods_stock/goods_stock_min_warn_list.html , method = com.dt.platform.eam.page.GoodsStockPageController.minWarn
[ALL] /business/eam/goods_stock/goods_stock_max_warn_list.html , method = com.dt.platform.eam.page.GoodsStockPageController.maxWarn
[POST] /service-ops/ops-service-info/query-paged-list , method = com.dt.platform.ops.controller.ServiceInfoController.queryPagedList
[ALL] /business/eam/goods_stock/goods_stock_selected_list.html , method = com.dt.platform.eam.page.GoodsStockPageController.selectedList
[POST] /service-eam/eam-repair-order-acceptance/query-paged-list , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.queryPagedList
[ALL] /business/eam/goods_stock/goods_stock_security_warn_list.html , method = com.dt.platform.eam.page.GoodsStockPageController.securityWarn
[ALL] /service-eam/eam-repair-order-acceptance/export-excel , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.exportExcel
[ALL] /business/eam/goods_stock/goods_stock_selected_form.html , method = com.dt.platform.eam.page.GoodsStockPageController.selectedForm
[POST] /service-eam/eam-asset-tranfer/update , method = com.dt.platform.eam.controller.AssetTranferController.update
[POST] /service-ops/ops-software-base-type/update , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.update
[ALL] /service-eam/eam-repair-order-acceptance/export-excel-template , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.exportExcelTemplate
[ALL] /business/eam/goods_stock/goods_stock_select_tree.html , method = com.dt.platform.eam.page.GoodsStockPageController.selectTree
[ALL] /business/eam/goods_stock/goods_stock_select_list.html , method = com.dt.platform.eam.page.GoodsStockPageController.selectList
[POST] /service-eam/eam-supplier/query-paged-list , method = com.dt.platform.eam.controller.SupplierController.queryPagedList
[ALL] /service-eam/eam-repair-order-acceptance/import-excel , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.importExcel
[POST] /service-ops/ops-software-base-type/save , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.save
[POST] /service-ops/ops-monitor-object-tpl/insert , method = com.dt.platform.ops.controller.MonitorObjectTplController.insert
[POST] /service-eam/eam-repair-order-acceptance/acceptance , method = com.dt.platform.eam.controller.RepairOrderAcceptanceController.acceptance
[ALL] /business/eam/goods_stock_real_all/goods_stock_list.html , method = com.dt.platform.eam.page.GoodsStockRealAllPageController.list
[POST] /service-ops/ops-software-base-type/insert , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.insert
[POST] /service-eam/eam-asset-tranfer/save , method = com.dt.platform.eam.controller.AssetTranferController.save
[POST] /service-eam/eam-tpl-file/update , method = com.dt.platform.eam.controller.TplFileController.update
[ALL] /business/eam/goods_stock_real/goods_stock_list.html , method = com.dt.platform.eam.page.GoodsStockRealPageController.list
[ALL] /business/eam/group_user/group_user_form.html , method = com.dt.platform.eam.page.GroupUserPageController.form
[POST] /service-ops/ops-software-base-type/get-by-id , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.getById
[ALL] /business/eam/group_user/group_user_list.html , method = com.dt.platform.eam.page.GroupUserPageController.list
[POST] /service-ops/ops-monitor-object-tpl/get-by-id , method = com.dt.platform.ops.controller.MonitorObjectTplController.getById
[POST] /service-eam/eam-repair-order-act/update , method = com.dt.platform.eam.controller.RepairOrderActController.update
[ALL] /business/eam/inspection_group/inspection_group_form.html , method = com.dt.platform.eam.page.InspectionGroupPageController.form
[POST] /service-eam/eam-tpl-file/save , method = com.dt.platform.eam.controller.TplFileController.save
[POST] /service-ops/ops-software-base-type/get-by-ids , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.getByIds
[POST] /service-eam/eam-asset-tranfer/insert , method = com.dt.platform.eam.controller.AssetTranferController.insert
[ALL] /business/eam/inspection_group/inspection_group_list.html , method = com.dt.platform.eam.page.InspectionGroupPageController.list
[POST] /service-eam/eam-repair-order-act/start , method = com.dt.platform.eam.controller.RepairOrderActController.start
[POST] /service-ops/ops-monitor-object-tpl/get-by-ids , method = com.dt.platform.ops.controller.MonitorObjectTplController.getByIds
[ALL] /business/eam/inspection_group_user/inspection_group_user_form.html , method = com.dt.platform.eam.page.InspectionGroupUserPageController.form
[POST] /service-eam/eam-asset-tranfer/get-by-id , method = com.dt.platform.eam.controller.AssetTranferController.getById
[POST] /service-eam/eam-tpl-file/insert , method = com.dt.platform.eam.controller.TplFileController.insert
[ALL] /business/eam/inspection_group_user/inspection_group_user_list.html , method = com.dt.platform.eam.page.InspectionGroupUserPageController.list
[POST] /service-ops/ops-software-base-type/query-list , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.queryList
[POST] /service-eam/eam-asset-tranfer/get-by-ids , method = com.dt.platform.eam.controller.AssetTranferController.getByIds
[ALL] /business/eam/inspection_plan/inspection_plan_form.html , method = com.dt.platform.eam.page.InspectionPlanPageController.form
[POST] /service-eam/eam-tpl-file/get-by-id , method = com.dt.platform.eam.controller.TplFileController.getById
[ALL] /business/eam/inspection_plan/inspection_plan_list.html , method = com.dt.platform.eam.page.InspectionPlanPageController.list
[POST] /service-eam/eam-repair-order-act/save , method = com.dt.platform.eam.controller.RepairOrderActController.save
[POST] /service-ops/ops-monitor-object-tpl/query-list , method = com.dt.platform.ops.controller.MonitorObjectTplController.queryList
[POST] /service-eam/eam-tpl-file/get-by-ids , method = com.dt.platform.eam.controller.TplFileController.getByIds
[ALL] /business/eam/inspection_plan_point/inspection_plan_point_form.html , method = com.dt.platform.eam.page.InspectionPlanPointPageController.form
[POST] /service-ops/ops-software-base-type/delete , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.deleteById
[ALL] /business/eam/inspection_plan_point/inspection_plan_point_list.html , method = com.dt.platform.eam.page.InspectionPlanPointPageController.list
[ALL] /business/eam/inspection_point_owner/inspection_point_owner_form.html , method = com.dt.platform.eam.page.InspectionPointOwnerPageController.form
[POST] /service-ops/ops-monitor-object-tpl/delete , method = com.dt.platform.ops.controller.MonitorObjectTplController.deleteById
[POST] /service-eam/eam-tpl-file/query-list , method = com.dt.platform.eam.controller.TplFileController.queryList
[ALL] /business/eam/inspection_point_owner/inspection_point_owner_list.html , method = com.dt.platform.eam.page.InspectionPointOwnerPageController.list
[POST] /service-eam/eam-repair-order-act/insert , method = com.dt.platform.eam.controller.RepairOrderActController.insert
[ALL] /business/eam/inspection_point/inspection_point_form.html , method = com.dt.platform.eam.page.InspectionPointPageController.form
[ALL] /business/eam/inspection_point/inspection_point_list.html , method = com.dt.platform.eam.page.InspectionPointPageController.list
[POST] /service-eam/eam-tpl-file/delete , method = com.dt.platform.eam.controller.TplFileController.deleteById
[POST] /service-eam/eam-repair-order-act/cancel , method = com.dt.platform.eam.controller.RepairOrderActController.cancel
[ALL] /business/eam/inspection_point/inspection_point_selected_list.html , method = com.dt.platform.eam.page.InspectionPointPageController.selectedlist
[POST] /service-eam/eam-tpl-file/delete-by-ids , method = com.dt.platform.eam.controller.TplFileController.deleteByIds
[ALL] /business/eam/inspection_point/inspection_point_select_list.html , method = com.dt.platform.eam.page.InspectionPointPageController.selectlist
[POST] /service-eam/eam-repair-order-act/finish , method = com.dt.platform.eam.controller.RepairOrderActController.finish
[ALL] /business/eam/inspection_point_pos/inspection_point_pos_form.html , method = com.dt.platform.eam.page.InspectionPointPosPageController.form
[ALL] /business/eam/inspection_point_pos/inspection_point_pos_list.html , method = com.dt.platform.eam.page.InspectionPointPosPageController.list
[POST] /service-eam/eam-repair-order-act/get-by-id , method = com.dt.platform.eam.controller.RepairOrderActController.getById
[ALL] /business/eam/inspection_report/inspection_point_report_list.html , method = com.dt.platform.eam.page.InspectionReportPageController.inspectionPointReport
[POST] /service-eam/eam-tpl-file/query-paged-list , method = com.dt.platform.eam.controller.TplFileController.queryPagedList
[POST] /service-eam/eam-repair-order-act/get-by-ids , method = com.dt.platform.eam.controller.RepairOrderActController.getByIds
[ALL] /business/eam/inspection_route/inspection_route_form.html , method = com.dt.platform.eam.page.InspectionRoutePageController.form
[ALL] /service-eam/eam-tpl-file/export-excel , method = com.dt.platform.eam.controller.TplFileController.exportExcel
[ALL] /business/eam/inspection_route/inspection_route_list.html , method = com.dt.platform.eam.page.InspectionRoutePageController.list
[ALL] /service-eam/eam-tpl-file/export-excel-template , method = com.dt.platform.eam.controller.TplFileController.exportExcelTemplate
[ALL] /business/eam/inspection_task/inspection_task_form.html , method = com.dt.platform.eam.page.InspectionTaskPageController.form
[ALL] /service-eam/eam-tpl-file/import-excel , method = com.dt.platform.eam.controller.TplFileController.importExcel
[ALL] /business/eam/inspection_task/inspection_task_list.html , method = com.dt.platform.eam.page.InspectionTaskPageController.list
[POST] /service-ops/ops-monitor-object-tpl/delete-by-ids , method = com.dt.platform.ops.controller.MonitorObjectTplController.deleteByIds
[POST] /service-ops/ops-software-base-type/delete-by-ids , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.deleteByIds
[ALL] /business/eam/inspection_task_point/inspection_task_point_form.html , method = com.dt.platform.eam.page.InspectionTaskPointPageController.form
[POST] /service-eam/eam-repair-order-act/query-list , method = com.dt.platform.eam.controller.RepairOrderActController.queryList
[ALL] /business/eam/inspection_task_point/inspection_task_point_list.html , method = com.dt.platform.eam.page.InspectionTaskPointPageController.list
[POST] /service-eam/eam-warehouse/update , method = com.dt.platform.eam.controller.WarehouseController.update
[ALL] /business/eam/inspection_task_point/inspection_task_point_selected_list.html , method = com.dt.platform.eam.page.InspectionTaskPointPageController.selectedList
[POST] /service-ops/ops-software-base-type/query-paged-list , method = com.dt.platform.ops.controller.SoftwareBaseTypeController.queryPagedList
[POST] /service-ops/ops-monitor-object-tpl/query-paged-list , method = com.dt.platform.ops.controller.MonitorObjectTplController.queryPagedList
[POST] /service-eam/eam-repair-order-act/delete , method = com.dt.platform.eam.controller.RepairOrderActController.deleteById
[ALL] /business/eam/inventory_asset/inventory_asset_form.html , method = com.dt.platform.eam.page.InventoryAssetPageController.form
[POST] /service-eam/eam-warehouse/save , method = com.dt.platform.eam.controller.WarehouseController.save
[POST] /service-eam/eam-repair-order-act/delete-by-ids , method = com.dt.platform.eam.controller.RepairOrderActController.deleteByIds
[POST] /service-ops/ops-monitor-object-tree/update , method = com.dt.platform.ops.controller.MonitorObjectTreeController.update
[POST] /service-eam/eam-warehouse/insert , method = com.dt.platform.eam.controller.WarehouseController.insert
[ALL] /business/eam/inventory_asset/inventory_asset_list.html , method = com.dt.platform.eam.page.InventoryAssetPageController.list
[POST] /service-ops/ops-software-base-version/update , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.update
[POST] /service-ops/ops-monitor-object-tree/save , method = com.dt.platform.ops.controller.MonitorObjectTreeController.save
[ALL] /business/eam/inventory_catalog/inventory_catalog_form.html , method = com.dt.platform.eam.page.InventoryCatalogPageController.form
[POST] /service-eam/eam-warehouse/get-by-id , method = com.dt.platform.eam.controller.WarehouseController.getById
[ALL] /service-eam/eam-asset-tranfer/confirm-operation , method = com.dt.platform.eam.controller.AssetTranferController.confirmOperation
[POST] /service-ops/ops-monitor-object-tree/insert , method = com.dt.platform.ops.controller.MonitorObjectTreeController.insert
[POST] /service-eam/eam-warehouse/get-by-ids , method = com.dt.platform.eam.controller.WarehouseController.getByIds
[POST] /service-ops/ops-software-base-version/save , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.save
[POST] /service-ops/ops-monitor-object-tree/get-by-id , method = com.dt.platform.ops.controller.MonitorObjectTreeController.getById
[POST] /service-eam/eam-asset-tranfer/bpm-callback , method = com.dt.platform.eam.controller.AssetTranferController.onProcessCallback
[POST] /service-ops/ops-monitor-object-tree/get-by-ids , method = com.dt.platform.ops.controller.MonitorObjectTreeController.getByIds
[POST] /service-ops/ops-software-base-version/insert , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.insert
[POST] /service-eam/eam-warehouse/query-list , method = com.dt.platform.eam.controller.WarehouseController.queryList
[ALL] /business/eam/inventory_catalog/inventory_catalog_list.html , method = com.dt.platform.eam.page.InventoryCatalogPageController.list
[POST] /service-ops/ops-monitor-object-tree/query-list , method = com.dt.platform.ops.controller.MonitorObjectTreeController.queryList
[POST] /service-ops/ops-software-base-version/get-by-id , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.getById
[ALL] /business/eam/inventory_director/inventory_director_form.html , method = com.dt.platform.eam.page.InventoryDirectorPageController.form
[POST] /service-eam/eam-warehouse/delete , method = com.dt.platform.eam.controller.WarehouseController.deleteById
[POST] /service-ops/ops-monitor-object-tree/delete , method = com.dt.platform.ops.controller.MonitorObjectTreeController.deleteById
[ALL] /business/eam/inventory_director/inventory_director_list.html , method = com.dt.platform.eam.page.InventoryDirectorPageController.list
[POST] /service-ops/ops-software-base-version/get-by-ids , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.getByIds
[ALL] /business/eam/inventory_feedback_msg/inventory_feedback_msg_form.html , method = com.dt.platform.eam.page.InventoryFeedbackMsgPageController.form
[POST] /service-ops/ops-monitor-object-tree/delete-by-ids , method = com.dt.platform.ops.controller.MonitorObjectTreeController.deleteByIds
[POST] /service-eam/eam-warehouse/delete-by-ids , method = com.dt.platform.eam.controller.WarehouseController.deleteByIds
[ALL] /business/eam/inventory_feedback_msg/inventory_feedback_msg_list.html , method = com.dt.platform.eam.page.InventoryFeedbackMsgPageController.list
[ALL] /business/eam/inventory_feedback/inventory_feedback_form.html , method = com.dt.platform.eam.page.InventoryFeedbackPageController.form
[ALL] /business/eam/inventory_feedback/inventory_feedback_list.html , method = com.dt.platform.eam.page.InventoryFeedbackPageController.list
[POST] /service-ops/ops-monitor-object-tree/query-paged-list , method = com.dt.platform.ops.controller.MonitorObjectTreeController.queryPagedList
[POST] /service-ops/ops-software-base-version/query-list , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.queryList
[POST] /service-eam/eam-repair-order-act/query-paged-list , method = com.dt.platform.eam.controller.RepairOrderActController.queryPagedList
[POST] /service-ops/ops-statistics/query-node-statistics , method = com.dt.platform.ops.controller.MonitorStatisticalDataController.queryNodeStatistics
[POST] /service-eam/eam-warehouse/query-paged-list , method = com.dt.platform.eam.controller.WarehouseController.queryPagedList
[POST] /service-ops/ops-software-base-version/delete , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.deleteById
[POST] /service-ops/ops-statistics/query-node-host-top-data , method = com.dt.platform.ops.controller.MonitorStatisticalDataController.queryNodeHostTopData
[ALL] /business/eam/action_crontab_log/action_crontab_log_form.html , method = com.dt.platform.eam.page.ActionCrontabLogPageController.form
[POST] /service-ops/ops-software-base-version/delete-by-ids , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.deleteByIds
[ALL] /business/eam/action_crontab_log/action_crontab_log_list.html , method = com.dt.platform.eam.page.ActionCrontabLogPageController.list
[ALL] /business/eam/action_crontab/action_crontab_form.html , method = com.dt.platform.eam.page.ActionCrontabPageController.form
[ALL] /business/eam/action_crontab/action_crontab_list.html , method = com.dt.platform.eam.page.ActionCrontabPageController.list
[ALL] /business/eam/approve_configure/approve_configure_form.html , method = com.dt.platform.eam.page.ApproveConfigurePageController.form
[ALL] /business/eam/approve_configure/approve_configure_list.html , method = com.dt.platform.eam.page.ApproveConfigurePageController.list
[POST] /service-ops/ops-software-base-version/query-paged-list , method = com.dt.platform.ops.controller.SoftwareBaseVersionController.queryPagedList
[ALL] /business/eam/area/area_form.html , method = com.dt.platform.eam.page.AreaPageController.form
[ALL] /business/eam/area/area_list.html , method = com.dt.platform.eam.page.AreaPageController.list
[POST] /service-ops/ops-statistics/query-node-collect-data-graph-by-graph , method = com.dt.platform.ops.controller.MonitorStatisticalDataController.queryNodeCollectData
[ALL] /business/eam/asset_alarm/allocation_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.allocationList
[ALL] /service-eam/eam-repair-order-act/export-excel , method = com.dt.platform.eam.controller.RepairOrderActController.exportExcel
[ALL] /business/eam/asset_alarm/borrow_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.borrowList
[POST] /service-ops/ops-statistics/query-node-collect-data , method = com.dt.platform.ops.controller.MonitorStatisticalDataController.queryNodeCollectData
[POST] /service-ops/ops-software-media/update , method = com.dt.platform.ops.controller.SoftwareMediaController.update
[ALL] /service-eam/eam-repair-order-act/export-excel-template , method = com.dt.platform.eam.controller.RepairOrderActController.exportExcelTemplate
[POST] /service-ops/ops-statistics/query-node-host-resource-list , method = com.dt.platform.ops.controller.MonitorStatisticalDataController.queryNodeHostResourceList
[POST] /service-eam/eam-asset-tranfer/query-list , method = com.dt.platform.eam.controller.AssetTranferController.queryList
[ALL] /service-eam/eam-repair-order-act/import-excel , method = com.dt.platform.eam.controller.RepairOrderActController.importExcel
[POST] /service-ops/ops-statistics/query-node-collect-data-failed , method = com.dt.platform.ops.controller.MonitorStatisticalDataController.queryNodeCollectDataFailed
[POST] /service-ops/ops-statistics/query-node-collect-data-graph , method = com.dt.platform.ops.controller.MonitorStatisticalDataController.queryNodeCollectDataGraph
[POST] /service-ops/ops-software-media/save , method = com.dt.platform.ops.controller.SoftwareMediaController.save
[POST] /service-eam/eam-asset-tranfer/delete , method = com.dt.platform.eam.controller.AssetTranferController.deleteById
[POST] /service-ops/ops-statistics/query-node-tree-resource-list , method = com.dt.platform.ops.controller.MonitorStatisticalDataController.queryNodeTreeResourceList
[POST] /service-eam/eam-asset-tranfer/delete-by-ids , method = com.dt.platform.eam.controller.AssetTranferController.deleteByIds
[POST] /service-ops/ops-software-media/insert , method = com.dt.platform.ops.controller.SoftwareMediaController.insert
[POST] /service-ops/ops-monitor-tpl/update , method = com.dt.platform.ops.controller.MonitorTplController.update
[ALL] /business/eam/inventory_manager/inventory_manager_form.html , method = com.dt.platform.eam.page.InventoryManagerPageController.form
[POST] /service-ops/ops-software-media/get-by-id , method = com.dt.platform.ops.controller.SoftwareMediaController.getById
[POST] /service-eam/eam-repair-order/update , method = com.dt.platform.eam.controller.RepairOrderController.update
[POST] /service-ops/ops-monitor-tpl/save , method = com.dt.platform.ops.controller.MonitorTplController.save
[POST] /service-eam/eam-asset-tranfer/query-paged-list , method = com.dt.platform.eam.controller.AssetTranferController.queryPagedList
[ALL] /service-eam/eam-asset-tranfer/export-excel , method = com.dt.platform.eam.controller.AssetTranferController.exportExcel
[POST] /service-ops/ops-software-media/get-by-ids , method = com.dt.platform.ops.controller.SoftwareMediaController.getByIds
[ALL] /service-eam/eam-asset-tranfer/export-excel-template , method = com.dt.platform.eam.controller.AssetTranferController.exportExcelTemplate
[POST] /service-ops/ops-monitor-tpl/insert , method = com.dt.platform.ops.controller.MonitorTplController.insert
[ALL] /business/eam/inventory_manager/inventory_manager_list.html , method = com.dt.platform.eam.page.InventoryManagerPageController.list
[ALL] /business/eam/asset_alarm/maintenance_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.maintenanceList
[ALL] /service-eam/eam-asset-tranfer/import-excel , method = com.dt.platform.eam.controller.AssetTranferController.importExcel
[POST] /service-ops/ops-monitor-tpl/get-by-id , method = com.dt.platform.ops.controller.MonitorTplController.getById
[ALL] /business/eam/asset_alarm/asset_sn_unique_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.assetSnUniqueList
[ALL] /business/eam/inventory/inventory_form.html , method = com.dt.platform.eam.page.InventoryPageController.form
[POST] /service-ops/ops-software-media/query-list , method = com.dt.platform.ops.controller.SoftwareMediaController.queryList
[POST] /service-ops/ops-monitor-tpl/get-by-ids , method = com.dt.platform.ops.controller.MonitorTplController.getByIds
[ALL] /business/eam/asset_allocation/asset_allocation_form.html , method = com.dt.platform.eam.page.AssetAllocationPageController.form
[POST] /service-eam/eam-bill-relation/update , method = com.dt.platform.eam.controller.BillRelationController.update
[ALL] /business/eam/inventory/inventory_list.html , method = com.dt.platform.eam.page.InventoryPageController.list
[POST] /service-ops/ops-software-media/delete , method = com.dt.platform.ops.controller.SoftwareMediaController.deleteById
[ALL] /business/eam/asset_allocation/asset_allocation_list.html , method = com.dt.platform.eam.page.AssetAllocationPageController.list
[POST] /service-eam/eam-bill-relation/save , method = com.dt.platform.eam.controller.BillRelationController.save
[ALL] /business/eam/asset_attribute_item/asset_attribute_item_form.html , method = com.dt.platform.eam.page.AssetAttributeItemPageController.form
[POST] /service-ops/ops-software-media/delete-by-ids , method = com.dt.platform.ops.controller.SoftwareMediaController.deleteByIds
[ALL] /business/eam/asset_attribute_item/asset_attribute_item_list.html , method = com.dt.platform.eam.page.AssetAttributeItemPageController.list
[POST] /service-eam/eam-repair-order/save , method = com.dt.platform.eam.controller.RepairOrderController.save
[POST] /service-eam/eam-bill-relation/insert , method = com.dt.platform.eam.controller.BillRelationController.insert
[POST] /service-ops/ops-monitor-tpl/query-list , method = com.dt.platform.ops.controller.MonitorTplController.queryList
[ALL] /business/eam/asset_attribute/asset_attribute_form.html , method = com.dt.platform.eam.page.AssetAttributePageController.form
[POST] /service-eam/eam-bill-relation/get-by-id , method = com.dt.platform.eam.controller.BillRelationController.getById
[ALL] /business/eam/asset_attribute/asset_attribute_list.html , method = com.dt.platform.eam.page.AssetAttributePageController.list
[POST] /service-ops/ops-monitor-tpl/delete , method = com.dt.platform.ops.controller.MonitorTplController.deleteById
[POST] /service-ops/ops-software-media/query-paged-list , method = com.dt.platform.ops.controller.SoftwareMediaController.queryPagedList
[ALL] /business/eam/asset_borrow/asset_borrow_form.html , method = com.dt.platform.eam.page.AssetBorrowPageController.form
[POST] /service-eam/eam-bill-relation/get-by-ids , method = com.dt.platform.eam.controller.BillRelationController.getByIds
[ALL] /business/eam/asset_borrow/asset_borrow_list.html , method = com.dt.platform.eam.page.AssetBorrowPageController.list
[POST] /service-ops/ops-monitor-tpl/delete-by-ids , method = com.dt.platform.ops.controller.MonitorTplController.deleteByIds
[ALL] /business/eam/inventory/my_inventory_list.html , method = com.dt.platform.eam.page.InventoryPageController.myList
[ALL] /business/eam/asset_borrow_return/asset_borrow_return_form.html , method = com.dt.platform.eam.page.AssetBorrowReturnPageController.form
[POST] /service-eam/eam-repair-order/insert , method = com.dt.platform.eam.controller.RepairOrderController.insert
[POST] /service-ops/ops-system-console-info/update , method = com.dt.platform.ops.controller.SystemConsoleInfoController.update
[ALL] /business/eam/asset_borrow_return/asset_borrow_return_list.html , method = com.dt.platform.eam.page.AssetBorrowReturnPageController.list
[ALL] /business/eam/inventory/inventory_all_employee_list.html , method = com.dt.platform.eam.page.InventoryPageController.inventoryAllEmployeeList
[POST] /service-eam/eam-repair-order/get-by-id , method = com.dt.platform.eam.controller.RepairOrderController.getById
[ALL] /business/eam/asset_collection/asset_collection_form.html , method = com.dt.platform.eam.page.AssetCollectionPageController.form
[POST] /service-ops/ops-monitor-tpl/query-paged-list , method = com.dt.platform.ops.controller.MonitorTplController.queryPagedList
[ALL] /business/eam/inventory/inventory_employee_asset_list.html , method = com.dt.platform.eam.page.InventoryPageController.inventoryEmployeeAssetList
[POST] /service-ops/ops-monitor-tpl-graph/update , method = com.dt.platform.ops.controller.MonitorTplGraphController.update
[POST] /service-ops/ops-system-console-info/save , method = com.dt.platform.ops.controller.SystemConsoleInfoController.save
[ALL] /business/eam/inventory_plan/inventory_plan_form.html , method = com.dt.platform.eam.page.InventoryPlanPageController.form
[POST] /service-eam/eam-bill-relation/query-list , method = com.dt.platform.eam.controller.BillRelationController.queryList
[POST] /service-ops/ops-monitor-tpl-graph/save , method = com.dt.platform.ops.controller.MonitorTplGraphController.save
[ALL] /business/eam/inventory_plan/inventory_plan_list.html , method = com.dt.platform.eam.page.InventoryPlanPageController.list
[POST] /service-eam/eam-bill-relation/delete , method = com.dt.platform.eam.controller.BillRelationController.deleteById
[POST] /service-eam/eam-bill-relation/delete-by-ids , method = com.dt.platform.eam.controller.BillRelationController.deleteByIds
[ALL] /business/eam/inventory_position/inventory_position_form.html , method = com.dt.platform.eam.page.InventoryPositionPageController.form
[ALL] /business/eam/inventory_position/inventory_position_list.html , method = com.dt.platform.eam.page.InventoryPositionPageController.list
[POST] /service-ops/ops-system-console-info/insert , method = com.dt.platform.ops.controller.SystemConsoleInfoController.insert
[POST] /service-eam/eam-bill-relation/query-paged-list , method = com.dt.platform.eam.controller.BillRelationController.queryPagedList
[ALL] /business/eam/inventory_user/inventory_user_form.html , method = com.dt.platform.eam.page.InventoryUserPageController.form
[POST] /service-ops/ops-monitor-tpl-graph/insert , method = com.dt.platform.ops.controller.MonitorTplGraphController.insert
[ALL] /business/eam/inventory_user/inventory_user_list.html , method = com.dt.platform.eam.page.InventoryUserPageController.list
[POST] /service-ops/ops-system-console-info/get-by-id , method = com.dt.platform.ops.controller.SystemConsoleInfoController.getById
[ALL] /service-eam/eam-bill-relation/export-excel , method = com.dt.platform.eam.controller.BillRelationController.exportExcel
[ALL] /business/eam/inventory_warehouse/inventory_warehouse_form.html , method = com.dt.platform.eam.page.InventoryWarehousePageController.form
[POST] /service-ops/ops-monitor-tpl-graph/get-by-id , method = com.dt.platform.ops.controller.MonitorTplGraphController.getById
[POST] /service-ops/ops-system-console-info/get-by-ids , method = com.dt.platform.ops.controller.SystemConsoleInfoController.getByIds
[ALL] /service-eam/eam-bill-relation/export-excel-template , method = com.dt.platform.eam.controller.BillRelationController.exportExcelTemplate
[ALL] /business/eam/inventory_warehouse/inventory_warehouse_list.html , method = com.dt.platform.eam.page.InventoryWarehousePageController.list
[POST] /service-ops/ops-monitor-tpl-graph/get-by-ids , method = com.dt.platform.ops.controller.MonitorTplGraphController.getByIds
[ALL] /service-eam/eam-bill-relation/import-excel , method = com.dt.platform.eam.controller.BillRelationController.importExcel
[ALL] /business/eam/maintain_group/maintain_group_form.html , method = com.dt.platform.eam.page.MaintainGroupPageController.form
[ALL] /business/eam/maintain_group/maintain_group_list.html , method = com.dt.platform.eam.page.MaintainGroupPageController.list
[ALL] /business/eam/maintain_plan/maintain_plan_form.html , method = com.dt.platform.eam.page.MaintainPlanPageController.form
[ALL] /business/eam/maintain_plan/maintain_plan_list.html , method = com.dt.platform.eam.page.MaintainPlanPageController.list
[POST] /service-eam/eam-brand/update , method = com.dt.platform.eam.controller.BrandController.update
[POST] /service-eam/eam-repair-order/get-by-ids , method = com.dt.platform.eam.controller.RepairOrderController.getByIds
[ALL] /business/eam/maintain_project/maintain_project_form.html , method = com.dt.platform.eam.page.MaintainProjectPageController.form
[POST] /service-ops/ops-system-console-info/query-list , method = com.dt.platform.ops.controller.SystemConsoleInfoController.queryList
[POST] /service-ops/ops-monitor-tpl-graph/query-list , method = com.dt.platform.ops.controller.MonitorTplGraphController.queryList
[ALL] /service-eam/eam-repair-order/confirm-operation , method = com.dt.platform.eam.controller.RepairOrderController.confirmOperation
[POST] /service-eam/eam-brand/save , method = com.dt.platform.eam.controller.BrandController.save
[ALL] /business/eam/maintain_project/maintain_project_list.html , method = com.dt.platform.eam.page.MaintainProjectPageController.list
[POST] /service-ops/ops-system-console-info/delete , method = com.dt.platform.ops.controller.SystemConsoleInfoController.deleteById
[POST] /service-ops/ops-monitor-tpl-graph/delete , method = com.dt.platform.ops.controller.MonitorTplGraphController.deleteById
[ALL] /business/eam/maintain_project/maintain_project_selected_list.html , method = com.dt.platform.eam.page.MaintainProjectPageController.selectedList
[ALL] /business/eam/maintain_project/maintain_project_select_list.html , method = com.dt.platform.eam.page.MaintainProjectPageController.selectList
[POST] /service-eam/eam-brand/insert , method = com.dt.platform.eam.controller.BrandController.insert
[POST] /service-ops/ops-monitor-tpl-graph/delete-by-ids , method = com.dt.platform.ops.controller.MonitorTplGraphController.deleteByIds
[POST] /service-ops/ops-system-console-info/delete-by-ids , method = com.dt.platform.ops.controller.SystemConsoleInfoController.deleteByIds
[ALL] /business/eam/maintain_project/maintain_project_selected_exec_list.html , method = com.dt.platform.eam.page.MaintainProjectPageController.selectedExecList
[ALL] /business/eam/asset_collection/asset_collection_list.html , method = com.dt.platform.eam.page.AssetCollectionPageController.list
[POST] /service-eam/eam-brand/get-by-id , method = com.dt.platform.eam.controller.BrandController.getById
[ALL] /business/eam/maintain_project_select/maintain_project_select_form.html , method = com.dt.platform.eam.page.MaintainProjectSelectPageController.form
[ALL] /business/eam/maintain_project_select/maintain_project_select_list.html , method = com.dt.platform.eam.page.MaintainProjectSelectPageController.list
[POST] /service-eam/eam-repair-order/query-list , method = com.dt.platform.eam.controller.RepairOrderController.queryList
[POST] /service-ops/ops-system-console-info/query-paged-list , method = com.dt.platform.ops.controller.SystemConsoleInfoController.queryPagedList
[ALL] /business/eam/maintain_report/maintain_item_report_list.html , method = com.dt.platform.eam.page.MaintainReportPageController.maintainItemReport
[ALL] /business/eam/asset_collection_return/asset_collection_return_form.html , method = com.dt.platform.eam.page.AssetCollectionReturnPageController.form
[POST] /service-eam/eam-repair-order/delete , method = com.dt.platform.eam.controller.RepairOrderController.deleteById
[ALL] /business/eam/maintain_task/maintain_task_form.html , method = com.dt.platform.eam.page.MaintainTaskPageController.form
[ALL] /business/eam/asset_collection_return/asset_collection_return_list.html , method = com.dt.platform.eam.page.AssetCollectionReturnPageController.list
[POST] /service-eam/eam-repair-order/delete-by-ids , method = com.dt.platform.eam.controller.RepairOrderController.deleteByIds
[POST] /service-ops/ops-voucher/update , method = com.dt.platform.ops.controller.VoucherController.update
[ALL] /business/eam/maintain_task/maintain_task_list.html , method = com.dt.platform.eam.page.MaintainTaskPageController.list
[POST] /service-ops/ops-voucher/save , method = com.dt.platform.ops.controller.VoucherController.save
[POST] /service-ops/ops-voucher/insert , method = com.dt.platform.ops.controller.VoucherController.insert
[POST] /service-ops/ops-monitor-tpl-graph/query-paged-list , method = com.dt.platform.ops.controller.MonitorTplGraphController.queryPagedList
[POST] /service-eam/eam-repair-order/query-paged-list , method = com.dt.platform.eam.controller.RepairOrderController.queryPagedList
[POST] /service-ops/ops-voucher/get-by-id , method = com.dt.platform.ops.controller.VoucherController.getById
[ALL] /service-eam/eam-repair-order/export-excel , method = com.dt.platform.eam.controller.RepairOrderController.exportExcel
[POST] /service-eam/eam-brand/get-by-ids , method = com.dt.platform.eam.controller.BrandController.getByIds
[ALL] /business/eam/asset_copy/asset_copy_form.html , method = com.dt.platform.eam.page.AssetCopyPageController.form
[ALL] /service-eam/eam-repair-order/export-excel-template , method = com.dt.platform.eam.controller.RepairOrderController.exportExcelTemplate
[ALL] /business/eam/asset_copy/asset_copy_list.html , method = com.dt.platform.eam.page.AssetCopyPageController.list
[ALL] /business/eam/asset_copy_record/asset_copy_record_form.html , method = com.dt.platform.eam.page.AssetCopyRecordPageController.form
[POST] /service-eam/eam-brand/query-list , method = com.dt.platform.eam.controller.BrandController.queryList
[ALL] /business/eam/asset_copy_record/asset_copy_record_list.html , method = com.dt.platform.eam.page.AssetCopyRecordPageController.list
[ALL] /business/eam/asset_data_change/asset_data_change_form.html , method = com.dt.platform.eam.page.AssetDataChangePageController.form
[ALL] /service-eam/eam-repair-order/import-excel , method = com.dt.platform.eam.controller.RepairOrderController.importExcel
[POST] /service-eam/eam-brand/delete , method = com.dt.platform.eam.controller.BrandController.deleteById
[ALL] /business/eam/asset_data_change/asset_data_change_list.html , method = com.dt.platform.eam.page.AssetDataChangePageController.list
[ALL] /service-eam/eam-repair-order/dispatch , method = com.dt.platform.eam.controller.RepairOrderController.dispatchOrder
[ALL] /business/eam/asset_data_permissions_catalog/asset_data_permissions_catalog_form.html , method = com.dt.platform.eam.page.AssetDataPermissionsCatalogPageController.form
[POST] /service-eam/eam-brand/delete-by-ids , method = com.dt.platform.eam.controller.BrandController.deleteByIds
[ALL] /service-eam/eam-repair-order/validate-dispatch-order , method = com.dt.platform.eam.controller.RepairOrderController.validateDispatchOrder
[ALL] /business/eam/asset_data_permissions_catalog/asset_data_permissions_catalog_list.html , method = com.dt.platform.eam.page.AssetDataPermissionsCatalogPageController.list
[POST] /service-eam/eam-repair-report/group-report , method = com.dt.platform.eam.controller.RepairReportController.groupReport
[POST] /service-eam/eam-brand/query-paged-list , method = com.dt.platform.eam.controller.BrandController.queryPagedList
[ALL] /business/eam/asset_data_permissions_o_org/asset_data_permissions_o_org_form.html , method = com.dt.platform.eam.page.AssetDataPermissionsOOrgPageController.form
[POST] /service-ops/ops-monitor-tpl-graph-item/update , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.update
[ALL] /business/eam/asset_data_permissions_o_org/asset_data_permissions_o_org_list.html , method = com.dt.platform.eam.page.AssetDataPermissionsOOrgPageController.list
[POST] /service-eam/eam-repair-rule/update , method = com.dt.platform.eam.controller.RepairRuleController.update
[POST] /service-eam/eam-brand-demo/update , method = com.dt.platform.eam.controller.BrandDemoController.update
[ALL] /business/eam/asset_data_permissions_org/asset_data_permissions_org_form.html , method = com.dt.platform.eam.page.AssetDataPermissionsOrgPageController.form
[POST] /service-ops/ops-voucher/get-by-ids , method = com.dt.platform.ops.controller.VoucherController.getByIds
[ALL] /business/eam/asset_data_permissions_org/asset_data_permissions_org_list.html , method = com.dt.platform.eam.page.AssetDataPermissionsOrgPageController.list
[POST] /service-eam/eam-brand-demo/save , method = com.dt.platform.eam.controller.BrandDemoController.save
[POST] /service-ops/ops-monitor-tpl-graph-item/save , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.save
[POST] /service-eam/eam-repair-rule/save , method = com.dt.platform.eam.controller.RepairRuleController.save
[ALL] /business/eam/asset_data_permissions/asset_data_permissions_form.html , method = com.dt.platform.eam.page.AssetDataPermissionsPageController.form
[POST] /service-eam/eam-brand-demo/insert , method = com.dt.platform.eam.controller.BrandDemoController.insert
[ALL] /business/eam/asset_data_permissions/asset_data_permissions_list.html , method = com.dt.platform.eam.page.AssetDataPermissionsPageController.list
[POST] /service-ops/ops-voucher/query-list , method = com.dt.platform.ops.controller.VoucherController.queryList
[ALL] /business/eam/asset_data_permissions_position/asset_data_permissions_position_form.html , method = com.dt.platform.eam.page.AssetDataPermissionsPositionPageController.form
[POST] /service-eam/eam-brand-demo/get-by-id , method = com.dt.platform.eam.controller.BrandDemoController.getById
[POST] /service-ops/ops-monitor-tpl-graph-item/insert , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.insert
[POST] /service-ops/ops-voucher/delete , method = com.dt.platform.ops.controller.VoucherController.deleteById
[POST] /service-eam/eam-repair-rule/insert , method = com.dt.platform.eam.controller.RepairRuleController.insert
[ALL] /business/eam/asset_data_permissions_position/asset_data_permissions_position_list.html , method = com.dt.platform.eam.page.AssetDataPermissionsPositionPageController.list
[POST] /service-eam/eam-brand-demo/get-by-ids , method = com.dt.platform.eam.controller.BrandDemoController.getByIds
[POST] /service-ops/ops-monitor-tpl-graph-item/get-by-id , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.getById
[ALL] /business/eam/asset_depreciation_cal_rule/asset_depreciation_cal_rule_form.html , method = com.dt.platform.eam.page.AssetDepreciationCalRulePageController.form
[POST] /service-eam/eam-repair-rule/get-by-id , method = com.dt.platform.eam.controller.RepairRuleController.getById
[POST] /service-ops/ops-voucher/delete-by-ids , method = com.dt.platform.ops.controller.VoucherController.deleteByIds
[POST] /service-eam/eam-brand-demo/query-list , method = com.dt.platform.eam.controller.BrandDemoController.queryList
[ALL] /business/eam/asset_depreciation_cal_rule/asset_depreciation_cal_rule_list.html , method = com.dt.platform.eam.page.AssetDepreciationCalRulePageController.list
[POST] /service-ops/ops-monitor-tpl-graph-item/get-by-ids , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.getByIds
[POST] /service-eam/eam-repair-rule/get-by-ids , method = com.dt.platform.eam.controller.RepairRuleController.getByIds
[ALL] /business/eam/asset_depreciation_category/asset_depreciation_category_form.html , method = com.dt.platform.eam.page.AssetDepreciationCategoryPageController.form
[POST] /service-eam/eam-brand-demo/delete , method = com.dt.platform.eam.controller.BrandDemoController.deleteById
[ALL] /business/eam/asset_depreciation_category/asset_depreciation_category_list.html , method = com.dt.platform.eam.page.AssetDepreciationCategoryPageController.list
[POST] /service-ops/ops-voucher/query-paged-list , method = com.dt.platform.ops.controller.VoucherController.queryPagedList
[ALL] /business/eam/asset_depreciation_detail/asset_depreciation_detail_form.html , method = com.dt.platform.eam.page.AssetDepreciationDetailPageController.form
[POST] /service-eam/eam-brand-demo/delete-by-ids , method = com.dt.platform.eam.controller.BrandDemoController.deleteByIds
[ALL] /service-ops/ops-voucher/export-excel , method = com.dt.platform.ops.controller.VoucherController.exportExcel
[POST] /service-ops/ops-monitor-tpl-graph-item/query-list , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.queryList
[ALL] /business/eam/asset_depreciation_detail/asset_depreciation_detail_list.html , method = com.dt.platform.eam.page.AssetDepreciationDetailPageController.list
[POST] /service-eam/eam-repair-rule/query-list , method = com.dt.platform.eam.controller.RepairRuleController.queryList
[POST] /service-eam/eam-brand-demo/query-paged-list , method = com.dt.platform.eam.controller.BrandDemoController.queryPagedList
[ALL] /business/eam/asset_depreciation_detail/asset_depreciation_detail_history_list.html , method = com.dt.platform.eam.page.AssetDepreciationDetailPageController.historyList
[ALL] /service-ops/ops-voucher/export-excel-template , method = com.dt.platform.ops.controller.VoucherController.exportExcelTemplate
[POST] /service-ops/ops-monitor-tpl-graph-item/delete , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.deleteById
[ALL] /business/eam/asset_depreciation_exclude/asset_depreciation_exclude_form.html , method = com.dt.platform.eam.page.AssetDepreciationExcludePageController.form
[ALL] /service-eam/eam-brand-demo/export-excel , method = com.dt.platform.eam.controller.BrandDemoController.exportExcel
[ALL] /service-ops/ops-voucher/import-excel , method = com.dt.platform.ops.controller.VoucherController.importExcel
[ALL] /business/eam/asset_depreciation_exclude/asset_depreciation_exclude_list.html , method = com.dt.platform.eam.page.AssetDepreciationExcludePageController.list
[ALL] /service-eam/eam-brand-demo/export-excel-template , method = com.dt.platform.eam.controller.BrandDemoController.exportExcelTemplate
[POST] /service-ops/ops-monitor-tpl-graph-item/delete-by-ids , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.deleteByIds
[ALL] /service-eam/eam-brand-demo/import-excel , method = com.dt.platform.eam.controller.BrandDemoController.importExcel
[POST] /service-ops/ops-voucher-history/update , method = com.dt.platform.ops.controller.VoucherHistoryController.update
[ALL] /business/eam/asset_depreciation_history/asset_depreciation_history_form.html , method = com.dt.platform.eam.page.AssetDepreciationHistoryPageController.form
[POST] /service-ops/ops-monitor-tpl-graph-item/query-paged-list , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.queryPagedList
[POST] /service-eam/eam-repair-rule/delete , method = com.dt.platform.eam.controller.RepairRuleController.deleteById
[ALL] /business/eam/asset_depreciation_history/asset_depreciation_history_list.html , method = com.dt.platform.eam.page.AssetDepreciationHistoryPageController.list
[ALL] /service-ops/ops-monitor-tpl-graph-item/export-excel , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.exportExcel
[POST] /service-ops/ops-voucher-history/save , method = com.dt.platform.ops.controller.VoucherHistoryController.save
[ALL] /business/eam/asset_depreciation_oper/asset_depreciation_oper_form.html , method = com.dt.platform.eam.page.AssetDepreciationOperPageController.form
[ALL] /service-ops/ops-monitor-tpl-graph-item/export-excel-template , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.exportExcelTemplate
[POST] /service-eam/eam-c-cust-inspect-item/update , method = com.dt.platform.eam.controller.CCustInspectItemController.update
[ALL] /business/eam/asset_depreciation_oper/asset_depreciation_oper_list.html , method = com.dt.platform.eam.page.AssetDepreciationOperPageController.list
[ALL] /service-ops/ops-monitor-tpl-graph-item/import-excel , method = com.dt.platform.ops.controller.MonitorTplGraphItemController.importExcel
[POST] /service-ops/ops-voucher-history/insert , method = com.dt.platform.ops.controller.VoucherHistoryController.insert
[POST] /service-ops/ops-voucher-history/get-by-id , method = com.dt.platform.ops.controller.VoucherHistoryController.getById
[POST] /service-ops/ops-voucher-history/get-by-ids , method = com.dt.platform.ops.controller.VoucherHistoryController.getByIds
[POST] /service-eam/eam-c-cust-inspect-item/save , method = com.dt.platform.eam.controller.CCustInspectItemController.save
[ALL] /business/eam/asset_depreciation/asset_depreciation_form.html , method = com.dt.platform.eam.page.AssetDepreciationPageController.form
[POST] /service-eam/eam-repair-rule/delete-by-ids , method = com.dt.platform.eam.controller.RepairRuleController.deleteByIds
[ALL] /business/eam/asset_depreciation/asset_depreciation_list.html , method = com.dt.platform.eam.page.AssetDepreciationPageController.list
[POST] /service-ops/ops-voucher-history/query-list , method = com.dt.platform.ops.controller.VoucherHistoryController.queryList
[ALL] /business/eam/asset_employee_apply/asset_employee_apply_form.html , method = com.dt.platform.eam.page.AssetEmployeeApplyPageController.form
[POST] /service-ops/ops-monitor-tpl-indicator/update , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.update
[POST] /service-ops/ops-voucher-history/delete , method = com.dt.platform.ops.controller.VoucherHistoryController.deleteById
[POST] /service-eam/eam-repair-rule/query-paged-list , method = com.dt.platform.eam.controller.RepairRuleController.queryPagedList
[POST] /service-eam/eam-c-cust-inspect-item/insert , method = com.dt.platform.eam.controller.CCustInspectItemController.insert
[ALL] /service-eam/eam-repair-rule/export-excel , method = com.dt.platform.eam.controller.RepairRuleController.exportExcel
[POST] /service-eam/eam-c-cust-inspect-item/get-by-id , method = com.dt.platform.eam.controller.CCustInspectItemController.getById
[ALL] /service-eam/eam-repair-rule/export-excel-template , method = com.dt.platform.eam.controller.RepairRuleController.exportExcelTemplate
[ALL] /service-eam/eam-repair-rule/import-excel , method = com.dt.platform.eam.controller.RepairRuleController.importExcel
[POST] /service-eam/eam-c-cust-inspect-item/get-by-ids , method = com.dt.platform.eam.controller.CCustInspectItemController.getByIds
[POST] /service-eam/eam-repair-rule-item/update , method = com.dt.platform.eam.controller.RepairRuleItemController.update
[POST] /service-ops/ops-monitor-tpl-indicator/save , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.save
[POST] /service-eam/eam-repair-rule-item/save , method = com.dt.platform.eam.controller.RepairRuleItemController.save
[POST] /service-eam/eam-c-cust-inspect-item/query-list , method = com.dt.platform.eam.controller.CCustInspectItemController.queryList
[POST] /service-eam/eam-repair-rule-item/insert , method = com.dt.platform.eam.controller.RepairRuleItemController.insert
[POST] /service-eam/eam-c-cust-inspect-item/delete , method = com.dt.platform.eam.controller.CCustInspectItemController.deleteById
[POST] /service-eam/eam-repair-rule-item/get-by-id , method = com.dt.platform.eam.controller.RepairRuleItemController.getById
[POST] /service-eam/eam-c-cust-inspect-item/delete-by-ids , method = com.dt.platform.eam.controller.CCustInspectItemController.deleteByIds
[POST] /service-eam/eam-repair-rule-item/get-by-ids , method = com.dt.platform.eam.controller.RepairRuleItemController.getByIds
[POST] /service-eam/eam-repair-rule-item/query-list , method = com.dt.platform.eam.controller.RepairRuleItemController.queryList
[POST] /service-ops/ops-monitor-tpl-indicator/insert , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.insert
[POST] /service-eam/eam-repair-rule-item/delete , method = com.dt.platform.eam.controller.RepairRuleItemController.deleteById
[POST] /service-eam/eam-c-cust-inspect-item/query-paged-list , method = com.dt.platform.eam.controller.CCustInspectItemController.queryPagedList
[POST] /service-ops/ops-monitor-tpl-indicator/get-by-id , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.getById
[POST] /service-eam/eam-repair-rule-item/delete-by-ids , method = com.dt.platform.eam.controller.RepairRuleItemController.deleteByIds
[POST] /service-eam/eam-c-cust-inspect-log/update , method = com.dt.platform.eam.controller.CCustInspectLogController.update
[POST] /service-ops/ops-monitor-tpl-indicator/get-by-ids , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.getByIds
[POST] /service-eam/eam-repair-rule-item/query-paged-list , method = com.dt.platform.eam.controller.RepairRuleItemController.queryPagedList
[ALL] /service-eam/eam-repair-rule-item/export-excel , method = com.dt.platform.eam.controller.RepairRuleItemController.exportExcel
[ALL] /service-eam/eam-repair-rule-item/export-excel-template , method = com.dt.platform.eam.controller.RepairRuleItemController.exportExcelTemplate
[POST] /service-eam/eam-c-cust-inspect-log/save , method = com.dt.platform.eam.controller.CCustInspectLogController.save
[ALL] /service-eam/eam-repair-rule-item/import-excel , method = com.dt.platform.eam.controller.RepairRuleItemController.importExcel
[POST] /service-eam/eam-repair-urgency/update , method = com.dt.platform.eam.controller.RepairUrgencyController.update
[POST] /service-ops/ops-monitor-tpl-indicator/query-list , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.queryList
[POST] /service-eam/eam-repair-urgency/save , method = com.dt.platform.eam.controller.RepairUrgencyController.save
[POST] /service-ops/ops-monitor-tpl-indicator/delete , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.deleteById
[POST] /service-eam/eam-repair-urgency/insert , method = com.dt.platform.eam.controller.RepairUrgencyController.insert
[POST] /service-ops/ops-monitor-tpl-indicator/delete-by-ids , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.deleteByIds
[POST] /service-eam/eam-repair-urgency/get-by-id , method = com.dt.platform.eam.controller.RepairUrgencyController.getById
[POST] /service-eam/eam-repair-urgency/get-by-ids , method = com.dt.platform.eam.controller.RepairUrgencyController.getByIds
[POST] /service-eam/eam-repair-urgency/query-list , method = com.dt.platform.eam.controller.RepairUrgencyController.queryList
[POST] /service-eam/eam-repair-urgency/delete , method = com.dt.platform.eam.controller.RepairUrgencyController.deleteById
[POST] /service-ops/ops-monitor-tpl-indicator/query-paged-list , method = com.dt.platform.ops.controller.MonitorTplIndicatorController.queryPagedList
[POST] /service-eam/eam-repair-urgency/delete-by-ids , method = com.dt.platform.eam.controller.RepairUrgencyController.deleteByIds
[POST] /service-ops/ops-monitor-tpl-indicator-type/update , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.update
[POST] /service-eam/eam-repair-urgency/query-paged-list , method = com.dt.platform.eam.controller.RepairUrgencyController.queryPagedList
[POST] /service-ops/ops-monitor-tpl-indicator-type/save , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.save
[POST] /service-ops/ops-monitor-tpl-indicator-type/insert , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.insert
[POST] /service-ops/ops-monitor-tpl-indicator-type/get-by-id , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.getById
[POST] /service-ops/ops-monitor-tpl-indicator-type/get-by-ids , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.getByIds
[POST] /service-ops/ops-monitor-tpl-indicator-type/query-list , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.queryList
[POST] /service-ops/ops-monitor-tpl-indicator-type/delete , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.deleteById
[POST] /service-ops/ops-monitor-tpl-indicator-type/delete-by-ids , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.deleteByIds
[POST] /service-ops/ops-monitor-tpl-indicator-type/query-paged-list , method = com.dt.platform.ops.controller.MonitorTplIndicatorTypeController.queryPagedList
[POST] /service-ops/ops-monitor-tpl-type/update , method = com.dt.platform.ops.controller.MonitorTplTypeController.update
[POST] /service-ops/ops-monitor-tpl-type/save , method = com.dt.platform.ops.controller.MonitorTplTypeController.save
[POST] /service-ops/ops-monitor-tpl-type/insert , method = com.dt.platform.ops.controller.MonitorTplTypeController.insert
[POST] /service-ops/ops-monitor-tpl-type/get-by-id , method = com.dt.platform.ops.controller.MonitorTplTypeController.getById
[POST] /service-ops/ops-monitor-tpl-type/get-by-ids , method = com.dt.platform.ops.controller.MonitorTplTypeController.getByIds
[POST] /service-ops/ops-monitor-tpl-type/query-list , method = com.dt.platform.ops.controller.MonitorTplTypeController.queryList
[POST] /service-ops/ops-monitor-tpl-type/delete , method = com.dt.platform.ops.controller.MonitorTplTypeController.deleteById
[POST] /service-ops/ops-monitor-tpl-type/delete-by-ids , method = com.dt.platform.ops.controller.MonitorTplTypeController.deleteByIds
[POST] /service-ops/ops-monitor-tpl-type/query-paged-list , method = com.dt.platform.ops.controller.MonitorTplTypeController.queryPagedList
[POST] /service-ops/ops-monitor-voucher/update , method = com.dt.platform.ops.controller.MonitorVoucherController.update
[POST] /service-ops/ops-monitor-voucher/save , method = com.dt.platform.ops.controller.MonitorVoucherController.save
[POST] /service-ops/ops-monitor-voucher/insert , method = com.dt.platform.ops.controller.MonitorVoucherController.insert
[POST] /service-ops/ops-monitor-voucher/get-by-id , method = com.dt.platform.ops.controller.MonitorVoucherController.getById

14:57:59.126 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,71] - url scan time : 17ms
14:57:59.129 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,96] - 

======================== FOX-NIC-WEB IS READY ========================
	Internal Version				1.6.0.RELEASE
	Machine Id						76C24FBF9BD15F8A
	Process Id						60898
	Application Name				service-all
	Active Profile					default
	Port							8089
	Boot Time						33s
	Visit Local						http://127.0.0.1:8089/
	Visit LAN(0)					http://172.20.10.3:8089/
======================== FOX-NIC-WEB IS READY ========================

14:57:59.130 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-wms@ /Users/lankl/IdeaProjects/eam/platform/view/view-wms
14:57:59.130 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-oa@ /Users/lankl/IdeaProjects/eam/platform/view/view-oa
14:57:59.130 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-workorder@ /Users/lankl/IdeaProjects/eam/platform/view/view-workorder
14:57:59.130 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-cms@ /Users/lankl/IdeaProjects/eam/platform/view/view-cms
14:57:59.131 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-vehicle@ /Users/lankl/IdeaProjects/eam/platform/view/view-vehicle
14:57:59.131 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-customer@ /Users/lankl/IdeaProjects/eam/platform/view/view-customer
14:57:59.131 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor platform@ /Users/lankl/IdeaProjects/eam/platform
14:57:59.131 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-knowledgebase@ /Users/lankl/IdeaProjects/eam/platform/view/view-knowledgebase
14:57:59.132 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-common@ /Users/lankl/IdeaProjects/eam/platform/view/view-common
14:57:59.132 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-console@ /Users/lankl/IdeaProjects/eam/platform/view/view-console
14:57:59.132 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-datacenter@ /Users/lankl/IdeaProjects/eam/platform/view/view-datacenter
14:57:59.132 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-eam@ /Users/lankl/IdeaProjects/eam/platform/view/view-eam
14:57:59.132 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-hr@ /Users/lankl/IdeaProjects/eam/platform/view/view-hr
14:57:59.132 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-ops@ /Users/lankl/IdeaProjects/eam/platform/view/view-ops
14:57:59.132 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-mobile@ /Users/lankl/IdeaProjects/eam/platform/view/view-mobile
14:57:59.167 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"ops_db_backup_log","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'ops_db_backup_log'
┣ 结果： 
┣━ 耗时：59ms , start = 1681973879108
┣━ 返回：RcdSet,size=26
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:57:59.237 [main] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"sys_config","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'sys_config'
┣ 结果： 
┣━ 耗时：69ms , start = 1681973879168
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:57:59.294 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：123ms , start = 1681973879170
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

14:57:59.294 [main] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.code = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( t.code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"system.version.cachekey"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( t.code = 'system.version.cachekey' ))
┣ 结果： 
┣━ 耗时：54ms , start = 1681973879239
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.code = :P... ] ━━━━━ 

14:57:59.294 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
14:57:59.295 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,72] - deploy is ready on 462 dirs
14:57:59.303 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,283] - start to collect node data.
14:57:59.336 [main] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_config t WHERE id = :PARAM_1 AND del... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_config t
WHERE id = ? AND deleted = ? ) A
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_config t
WHERE id = 'system.cachekey' AND deleted = 0 ) A
┣ 结果： 
┣━ 耗时：40ms , start = 1681973879296
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_config t WHERE id = :PARAM_1 AND del... ] ━━━━━ 

14:57:59.381 [main] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_config t WHERE id= :PARAM_1 AND deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_config t WHERE id= ? AND deleted= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_4":1,"PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_config t WHERE id= 'system.cachekey' AND deleted= 0 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1681973879337
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_config t WHERE id= :PARAM_1 AND deleted= :PA... ] ━━━━━ 

14:57:59.458 [main] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_config SET value = :PARAM_1 , update_by = :PARAM_2 , update_time = ... ] ━━━━━ 
┣ 语句：UPDATE sys_config SET value = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"20230420145759","PARAM_4":"system.cachekey","PARAM_3":1681973879382}
┣ 执行：UPDATE sys_config SET value = '20230420145759' , update_by = null , update_time = str_to_date('2023-04-20 14:57:59','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = 'system.cachekey'
┣ 结果： 
┣━ 耗时：75ms , start = 1681973879382
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_config SET value = :PARAM_1 , update_by = :PARAM_2 , update_time = ... ] ━━━━━ 

14:57:59.491 [main] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_config t WHERE id = :PARAM_1 AND del... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_config t
WHERE id = ? AND deleted = ? ) A
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_config t
WHERE id = 'system.cachekey' AND deleted = 0 ) A
┣ 结果： 
┣━ 耗时：32ms , start = 1681973879458
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_config t WHERE id = :PARAM_1 AND del... ] ━━━━━ 

14:57:59.509 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"sys_job","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'sys_job'
┣ 结果： 
┣━ 耗时：62ms , start = 1681973879447
┣━ 返回：RcdSet,size=20
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:57:59.555 [main] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_config t WHERE id= :PARAM_1 AND deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_config t WHERE id= ? AND deleted= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_4":1,"PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_config t WHERE id= 'system.cachekey' AND deleted= 0 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：64ms , start = 1681973879491
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_config t WHERE id= :PARAM_1 AND deleted= :PA... ] ━━━━━ 

14:57:59.555 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_job t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_job t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_job t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：44ms , start = 1681973879511
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ select t.* from sys_job t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

14:57:59.611 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_sys_job_worker_sf_nioj_id , t_0... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_sys_job_worker_sf_nioj_id , t_0.id pk_join_fs_sys_job_worker_sf_nioj_id FROM sys_job_worker t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"618077429566537728","PARAM_7":"597670498230337536","PARAM_6":"698159245345947648","PARAM_5":"597457935609626624","PARAM_4":"607618164838105088","PARAM_3":"607618165026848768","PARAM_2":"598249517812285440"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_sys_job_worker_sf_nioj_id , t_0.id pk_join_fs_sys_job_worker_sf_nioj_id FROM sys_job_worker t_0 
 WHERE t_0.id IN ( '618077429566537728' , '598249517812285440' , '607618165026848768' , '607618164838105088' , '597457935609626624' , '698159245345947648' , '597670498230337536' )
┣ 结果： 
┣━ 耗时：51ms , start = 1681973879560
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_sys_job_worker_sf_nioj_id , t_0... ] ━━━━━ 

14:58:00.320 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,317] - cpu info,sys:0.07,usr:0.36wio:0,idle0.57
14:58:00.472 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"sys_node_load","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'sys_node_load'
┣ 结果： 
┣━ 耗时：148ms , start = 1681973880324
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:58:00.527 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701446510394474496","PARAM_9":0.72,"PARAM_8":12389269504,"PARAM_10":1681973880473,"PARAM_7":0,"PARAM_11":1,"PARAM_6":0.57,"PARAM_5":0.07,"PARAM_4":0.36,"PARAM_3":"127.0.0.1","PARAM_2":"lankLdeMacBook-Pro.local"}
┣ 执行：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( '701446510394474496' , 'lankLdeMacBook-Pro.local' , '127.0.0.1' , 0.36 , 0.07 , 0.57 , 0 , 12389269504 , 0.72 , str_to_date('2023-04-20 14:58:00','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：51ms , start = 1681973880474
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 

14:58:58.152 [simple-parallel-task] - [] - INFO  c.g.f.s.a.s.FoxnicDocumentationPluginsBootstrapper - [startInternal,104] - Swagger Documentation plugins is ready
14:59:59.186 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：79ms , start = 1681973999106
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

14:59:59.187 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:00:00.991 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.j.e.CCustInspectPlanJobExecutor - [execute,22] - CCustInspectPlanJobExecutor 执行 Job 
15:00:01.134 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"eam_c_cust_inspect_plan","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'eam_c_cust_inspect_plan'
┣ 结果： 
┣━ 耗时：101ms , start = 1681974001031
┣━ 返回：RcdSet,size=19
┣ TID：701447015728414720
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:00:01.214 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_c_cust_inspect_plan t WHERE ( ( t.deleted= :PARAM_1 ) AND ... ] ━━━━━ 
┣ 语句：select t.* from eam_c_cust_inspect_plan t WHERE ( ( t.deleted= ? ) AND ( t.status = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"valid"}
┣ 执行：select t.* from eam_c_cust_inspect_plan t WHERE ( ( t.deleted= 0 ) AND ( t.status = 'valid' ))
┣ 结果： 
┣━ 耗时：71ms , start = 1681974001142
┣━ 返回：RcdSet,size=2
┣ TID：701447015728414720
┗━━━━━ SQL [ select t.* from eam_c_cust_inspect_plan t WHERE ( ( t.deleted= :PARAM_1 ) AND ... ] ━━━━━ 

15:00:01.404 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE eam_c_cust_inspect_plan SET next_time = :PARAM_1 , update_by = :PARAM_2... ] ━━━━━ 
┣ 语句：UPDATE eam_c_cust_inspect_plan SET next_time = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":1682043300000,"PARAM_4":"696673753869844480","PARAM_3":1681974001230}
┣ 执行：UPDATE eam_c_cust_inspect_plan SET next_time = str_to_date('2023-04-21 10:15:00','%Y-%m-%d %H:%i:%s') , update_by = null , update_time = str_to_date('2023-04-20 15:00:01','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '696673753869844480'
┣ 结果： 
┣━ 耗时：66ms , start = 1681974001337
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ UPDATE eam_c_cust_inspect_plan SET next_time = :PARAM_1 , update_by = :PARAM_2... ] ━━━━━ 

15:00:01.454 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from eam_c_cust_inspect_user_s where owner_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from eam_c_cust_inspect_user_s where owner_id= ?
┣ 参数：{"PARAM_1":"696673753869844480"}
┣ 执行：delete from eam_c_cust_inspect_user_s where owner_id= '696673753869844480'
┣ 结果： 
┣━ 耗时：45ms , start = 1681974001408
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ delete from eam_c_cust_inspect_user_s where owner_id= :PARAM_1 ] ━━━━━ 

15:00:01.541 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"eam_c_cust_inspect_log","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'eam_c_cust_inspect_log'
┣ 结果： 
┣━ 耗时：78ms , start = 1681974001461
┣━ 返回：RcdSet,size=13
┣ TID：701447015728414720
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:00:01.613 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select delete_time , create_time , executed , version , create_by , update_tim... ] ━━━━━ 
┣ 语句：select delete_time , create_time , executed , version , create_by , update_time , deleted , delete_by , execute_time , id , update_by , plan_id , errors from eam_c_cust_inspect_log t WHERE plan_id= ? and executed!=1 AND t.deleted= ?
┣ 参数：{"PARAM_1":"696673753869844480","PARAM_2":0}
┣ 执行：select delete_time , create_time , executed , version , create_by , update_time , deleted , delete_by , execute_time , id , update_by , plan_id , errors from eam_c_cust_inspect_log t WHERE plan_id= '696673753869844480' and executed!=1 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：65ms , start = 1681974001548
┣━ 返回：RcdSet,size=1
┣ TID：701447015728414720
┗━━━━━ SQL [ select delete_time , create_time , executed , version , create_by , update_tim... ] ━━━━━ 

15:00:01.672 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_c_cust_inspect_plan t WHERE id = :PARAM_1 AND deleted = :PAR... ] ━━━━━ 
┣ 语句：select * from eam_c_cust_inspect_plan t WHERE id = ? AND deleted = ?
┣ 参数：{"PARAM_1":"696673753869844480","PARAM_2":0}
┣ 执行：select * from eam_c_cust_inspect_plan t WHERE id = '696673753869844480' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1681974001619
┣━ 返回：RcdSet,size=1
┣ TID：701447015728414720
┗━━━━━ SQL [ select * from eam_c_cust_inspect_plan t WHERE id = :PARAM_1 AND deleted = :PAR... ] ━━━━━ 

15:00:01.724 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_hrm_employee_sf_nioj_id , t_0.i... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_hrm_employee_sf_nioj_id , t_0.id pk_join_fs_hrm_employee_sf_nioj_id FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"586965217661943808"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_hrm_employee_sf_nioj_id , t_0.id pk_join_fs_hrm_employee_sf_nioj_id FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '586965217661943808' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1681974001674
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_hrm_employee_sf_nioj_id , t_0.i... ] ━━━━━ 

15:00:01.738 [ForkJoinPool-1-worker-14] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"eam_c_cust_inspect_item","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'eam_c_cust_inspect_item'
┣ 结果： 
┣━ 耗时：64ms , start = 1681974001674
┣━ 返回：RcdSet,size=21
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:00:01.794 [ForkJoinPool-1-worker-14] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.owner_id join_f0 , t_0.owner_id join_fs_eam_c_cust_inspect_... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.owner_id join_f0 , t_0.owner_id join_fs_eam_c_cust_inspect_item_sf_nioj_owner_id , t_0.id pk_join_fs_eam_c_cust_inspect_item_sf_nioj_id FROM (select * from eam_c_cust_inspect_item WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.owner_id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"696673753869844480"}
┣ 执行：SELECT t_0.* , t_0.owner_id join_f0 , t_0.owner_id join_fs_eam_c_cust_inspect_item_sf_nioj_owner_id , t_0.id pk_join_fs_eam_c_cust_inspect_item_sf_nioj_id FROM (select * from eam_c_cust_inspect_item WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.owner_id IN ( '696673753869844480' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1681974001742
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.owner_id join_f0 , t_0.owner_id join_fs_eam_c_cust_inspect_... ] ━━━━━ 

15:00:01.809 [ForkJoinPool-1-worker-12] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"eam_c_cust_inspect_tpl","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'eam_c_cust_inspect_tpl'
┣ 结果： 
┣━ 耗时：68ms , start = 1681974001741
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:00:01.876 [ForkJoinPool-1-worker-12] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_eam_c_cust_inspect_tpl_sf_nioj_... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_eam_c_cust_inspect_tpl_sf_nioj_id , t_0.id pk_join_fs_eam_c_cust_inspect_tpl_sf_nioj_id FROM (select * from eam_c_cust_inspect_tpl WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"696311000567119872"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_eam_c_cust_inspect_tpl_sf_nioj_id , t_0.id pk_join_fs_eam_c_cust_inspect_tpl_sf_nioj_id FROM (select * from eam_c_cust_inspect_tpl WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '696311000567119872' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1681974001816
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 , t_0.id join_fs_eam_c_cust_inspect_tpl_sf_nioj_... ] ━━━━━ 

15:00:01.898 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"eam_c_cust_inspect_user_s","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'eam_c_cust_inspect_user_s'
┣ 结果： 
┣━ 耗时：81ms , start = 1681974001816
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:00:01.948 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.owner_id join_f0 , t_0.id join_fs_hrm_employee_sf_nioj_id ,... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.owner_id join_f0 , t_0.id join_fs_hrm_employee_sf_nioj_id , t_0.id pk_join_fs_hrm_employee_sf_nioj_id , t_1.user_id join_fs_eam_c_cust_inspect_user_s_sf_nioj_user_id , t_1.owner_id join_fs_eam_c_cust_inspect_user_s_sf_nioj_owner_id , t_1.id pk_join_fs_eam_c_cust_inspect_user_s_sf_nioj_id FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
join (select * from eam_c_cust_inspect_user_s WHERE ( deleted= ? ) ) t_1 on t_1.user_id = t_0.id 
 WHERE t_1.owner_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"696673753869844480","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.owner_id join_f0 , t_0.id join_fs_hrm_employee_sf_nioj_id , t_0.id pk_join_fs_hrm_employee_sf_nioj_id , t_1.user_id join_fs_eam_c_cust_inspect_user_s_sf_nioj_user_id , t_1.owner_id join_fs_eam_c_cust_inspect_user_s_sf_nioj_owner_id , t_1.id pk_join_fs_eam_c_cust_inspect_user_s_sf_nioj_id FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_c_cust_inspect_user_s WHERE ( deleted= 0 ) ) t_1 on t_1.user_id = t_0.id 
 WHERE t_1.owner_id IN ( '696673753869844480' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1681974001904
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.owner_id join_f0 , t_0.id join_fs_hrm_employee_sf_nioj_id ,... ] ━━━━━ 

15:00:01.951 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.e.EntityNavigator - [execute,169] - fill with cost 277ms
15:00:01.985 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [generateCode,83] - generateCode:eam_asset_software_insert
15:00:02.036 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select b.rule rule from sys_code_allocation a,sys_code_rule b ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select b.rule rule from sys_code_allocation a,sys_code_rule b where a.rule_id=b.id and a.deleted=0 and b.deleted=0 and a.code= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"eam_asset_software_insert","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select b.rule rule from sys_code_allocation a,sys_code_rule b where a.rule_id=b.id and a.deleted=0 and b.deleted=0 and a.code= 'eam_asset_software_insert' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1681974001985
┣━ 返回：RcdSet,size=1
┣ TID：701447015728414720
┗━━━━━ SQL [ SELECT * FROM ( select b.rule rule from sys_code_allocation a,sys_code_rule b ... ] ━━━━━ 

15:00:02.038 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [generateCode,89] - generateCode rule:${string_fix,SW}${time,yyyy}${time,mm}${time,dd}${time,hh}${time,mm}${number_rand,3}
15:00:02.039 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [parseCode,168] - parseCode value:${string_fix,SW}${time,yyyy}${time,mm}${time,dd}${time,hh}${time,mm}${number_rand,3}
15:00:02.039 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [parseCode,171] - parseCode index:1,value:{string_fix,SW}
15:00:02.040 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [parseCode,171] - parseCode index:2,value:{time,yyyy}
15:00:02.050 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [parseCode,171] - parseCode index:3,value:{time,mm}
15:00:02.050 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [parseCode,171] - parseCode index:4,value:{time,dd}
15:00:02.051 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [parseCode,171] - parseCode index:5,value:{time,hh}
15:00:02.051 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [parseCode,171] - parseCode index:6,value:{time,mm}
15:00:02.051 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [parseCode,171] - parseCode index:7,value:{number_rand,3}
15:00:02.052 [FWS_Worker-1] - [701447015728414720] - INFO  c.d.p.c.s.i.CodeModuleServiceImpl - [generateCodeByRule,69] - generate code result:SW202304201504962
15:00:02.123 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"eam_c_cust_inspect_task","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'eam_c_cust_inspect_task'
┣ 结果： 
┣━ 耗时：66ms , start = 1681974002056
┣━ 返回：RcdSet,size=19
┣ TID：701447015728414720
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:00:02.193 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO eam_c_cust_inspect_task ( id , code , name , status , action_add ,... ] ━━━━━ 
┣ 语句：INSERT INTO eam_c_cust_inspect_task ( id , code , name , status , action_add , inspect_user_id , tpl_id , tenant_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701447020975489024","PARAM_8":"T001","PARAM_10":1681974002126,"PARAM_7":"696311000567119872","PARAM_11":1,"PARAM_6":"586965217661943808","PARAM_5":"no","PARAM_4":"wait","PARAM_3":"每天上午10点15","PARAM_2":"SW202304201504962"}
┣ 执行：INSERT INTO eam_c_cust_inspect_task ( id , code , name , status , action_add , inspect_user_id , tpl_id , tenant_id , create_by , create_time , version ) VALUES ( '701447020975489024' , 'SW202304201504962' , '每天上午10点15' , 'wait' , 'no' , '586965217661943808' , '696311000567119872' , 'T001' , null , str_to_date('2023-04-20 15:00:02','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：66ms , start = 1681974002126
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ INSERT INTO eam_c_cust_inspect_task ( id , code , name , status , action_add ,... ] ━━━━━ 

15:00:02.357 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"eam_asset","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'eam_asset'
┣ 结果： 
┣━ 耗时：161ms , start = 1681974002195
┣━ 返回：RcdSet,size=122
┣ TID：701447015728414720
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:00:02.478 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"foxnic","PARAM_3":"eam_c_cust_inspect_tpl_asset","PARAM_2":"foxnic"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'foxnic' ,UPPER( 'foxnic' )) AND LOWER(TABLE_NAME)= 'eam_c_cust_inspect_tpl_asset'
┣ 结果： 
┣━ 耗时：108ms , start = 1681974002368
┣━ 返回：RcdSet,size=11
┣ TID：701447015728414720
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:00:02.540 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.owner_id join_f0 , t_0.id join_fs_eam_asset_sf_nioj_id , t_... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.owner_id join_f0 , t_0.id join_fs_eam_asset_sf_nioj_id , t_0.id pk_join_fs_eam_asset_sf_nioj_id , t_1.asset_id join_fs_eam_c_cust_inspect_tpl_asset_sf_nioj_asset_id , t_1.owner_id join_fs_eam_c_cust_inspect_tpl_asset_sf_nioj_owner_id , t_1.id pk_join_fs_eam_c_cust_inspect_tpl_asset_sf_nioj_id FROM (select * from eam_asset WHERE ( deleted= ? ) ) t_0 
join (select * from eam_c_cust_inspect_tpl_asset WHERE ( deleted= ? ) ) t_1 on t_1.asset_id = t_0.id 
 WHERE t_1.owner_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"696311000567119872","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.owner_id join_f0 , t_0.id join_fs_eam_asset_sf_nioj_id , t_0.id pk_join_fs_eam_asset_sf_nioj_id , t_1.asset_id join_fs_eam_c_cust_inspect_tpl_asset_sf_nioj_asset_id , t_1.owner_id join_fs_eam_c_cust_inspect_tpl_asset_sf_nioj_owner_id , t_1.id pk_join_fs_eam_c_cust_inspect_tpl_asset_sf_nioj_id FROM (select * from eam_asset WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_c_cust_inspect_tpl_asset WHERE ( deleted= 0 ) ) t_1 on t_1.asset_id = t_0.id 
 WHERE t_1.owner_id IN ( '696311000567119872' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：60ms , start = 1681974002479
┣━ 返回：RcdSet,size=1
┣ TID：701447015728414720
┗━━━━━ SQL [ SELECT t_0.* , t_1.owner_id join_f0 , t_0.id join_fs_eam_asset_sf_nioj_id , t_... ] ━━━━━ 

15:00:02.549 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.e.EntityNavigator - [execute,169] - fill with cost 355ms
15:00:02.632 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO eam_c_cust_inspect_item ( id , owner_id , status , asset_id , asse... ] ━━━━━ 
┣ 语句：INSERT INTO eam_c_cust_inspect_item ( id , owner_id , status , asset_id , asset_code , asset_name , asset_model , asset_seq , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701447023110389760","PARAM_8":"","PARAM_10":1681974002566,"PARAM_7":"规格","PARAM_11":1,"PARAM_6":"这是一个测试","PARAM_5":"AS16225","PARAM_4":"690281218771517440","PARAM_3":"wait","PARAM_2":"701447020975489024"}
┣ 执行：INSERT INTO eam_c_cust_inspect_item ( id , owner_id , status , asset_id , asset_code , asset_name , asset_model , asset_seq , create_by , create_time , version ) VALUES ( '701447023110389760' , '701447020975489024' , 'wait' , '690281218771517440' , 'AS16225' , '这是一个测试' , '规格' , '' , null , str_to_date('2023-04-20 15:00:02','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：63ms , start = 1681974002566
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ INSERT INTO eam_c_cust_inspect_item ( id , owner_id , status , asset_id , asse... ] ━━━━━ 

15:00:02.684 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE eam_c_cust_inspect_log SET executed = :PARAM_1 , update_by = :PARAM_2 ,... ] ━━━━━ 
┣ 语句：UPDATE eam_c_cust_inspect_log SET executed = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":1,"PARAM_4":"700651385401638912","PARAM_3":1681974002640}
┣ 执行：UPDATE eam_c_cust_inspect_log SET executed = 1 , update_by = null , update_time = str_to_date('2023-04-20 15:00:02','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '700651385401638912'
┣ 结果： 
┣━ 耗时：42ms , start = 1681974002640
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ UPDATE eam_c_cust_inspect_log SET executed = :PARAM_1 , update_by = :PARAM_2 ,... ] ━━━━━ 

15:00:02.721 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from eam_c_cust_inspect_user_s where owner_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from eam_c_cust_inspect_user_s where owner_id= ?
┣ 参数：{"PARAM_1":"696673753869844480"}
┣ 执行：delete from eam_c_cust_inspect_user_s where owner_id= '696673753869844480'
┣ 结果： 
┣━ 耗时：35ms , start = 1681974002685
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ delete from eam_c_cust_inspect_user_s where owner_id= :PARAM_1 ] ━━━━━ 

15:00:02.764 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select delete_time , create_time , executed , version , create_by , update_tim... ] ━━━━━ 
┣ 语句：select delete_time , create_time , executed , version , create_by , update_time , deleted , delete_by , execute_time , id , update_by , plan_id , errors from eam_c_cust_inspect_log t WHERE plan_id= ? and executed!=1 AND t.deleted= ?
┣ 参数：{"PARAM_1":"696673753869844480","PARAM_2":0}
┣ 执行：select delete_time , create_time , executed , version , create_by , update_time , deleted , delete_by , execute_time , id , update_by , plan_id , errors from eam_c_cust_inspect_log t WHERE plan_id= '696673753869844480' and executed!=1 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1681974002722
┣━ 返回：RcdSet,size=0
┣ TID：701447015728414720
┗━━━━━ SQL [ select delete_time , create_time , executed , version , create_by , update_tim... ] ━━━━━ 

15:00:02.832 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO eam_c_cust_inspect_log ( id , plan_id , execute_time , executed , ... ] ━━━━━ 
┣ 语句：INSERT INTO eam_c_cust_inspect_log ( id , plan_id , execute_time , executed , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701447023986999296","PARAM_7":1,"PARAM_6":1681974002775,"PARAM_4":0,"PARAM_3":1682043300000,"PARAM_2":"696673753869844480"}
┣ 执行：INSERT INTO eam_c_cust_inspect_log ( id , plan_id , execute_time , executed , create_by , create_time , version ) VALUES ( '701447023986999296' , '696673753869844480' , str_to_date('2023-04-21 10:15:00','%Y-%m-%d %H:%i:%s') , 0 , null , str_to_date('2023-04-20 15:00:02','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：55ms , start = 1681974002775
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ INSERT INTO eam_c_cust_inspect_log ( id , plan_id , execute_time , executed , ... ] ━━━━━ 

15:00:02.876 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select delete_time , create_time , executed , version , create_by , update_tim... ] ━━━━━ 
┣ 语句：select delete_time , create_time , executed , version , create_by , update_time , deleted , delete_by , execute_time , id , update_by , plan_id , errors from eam_c_cust_inspect_log t WHERE plan_id= ? and executed!=1 AND t.deleted= ?
┣ 参数：{"PARAM_1":"696673753869844480","PARAM_2":0}
┣ 执行：select delete_time , create_time , executed , version , create_by , update_time , deleted , delete_by , execute_time , id , update_by , plan_id , errors from eam_c_cust_inspect_log t WHERE plan_id= '696673753869844480' and executed!=1 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1681974002833
┣━ 返回：RcdSet,size=1
┣ TID：701447015728414720
┗━━━━━ SQL [ select delete_time , create_time , executed , version , create_by , update_tim... ] ━━━━━ 

15:00:02.917 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE eam_c_cust_inspect_plan SET next_time = :PARAM_1 , update_by = :PARAM_2... ] ━━━━━ 
┣ 语句：UPDATE eam_c_cust_inspect_plan SET next_time = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":1681975800000,"PARAM_4":"696736099719970816","PARAM_3":1681974002878}
┣ 执行：UPDATE eam_c_cust_inspect_plan SET next_time = str_to_date('2023-04-20 15:30:00','%Y-%m-%d %H:%i:%s') , update_by = null , update_time = str_to_date('2023-04-20 15:00:02','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '696736099719970816'
┣ 结果： 
┣━ 耗时：38ms , start = 1681974002878
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ UPDATE eam_c_cust_inspect_plan SET next_time = :PARAM_1 , update_by = :PARAM_2... ] ━━━━━ 

15:00:02.971 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from eam_c_cust_inspect_user_s where owner_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from eam_c_cust_inspect_user_s where owner_id= ?
┣ 参数：{"PARAM_1":"696736099719970816"}
┣ 执行：delete from eam_c_cust_inspect_user_s where owner_id= '696736099719970816'
┣ 结果： 
┣━ 耗时：52ms , start = 1681974002918
┣━ 返回：java.lang.Integer
┣ TID：701447015728414720
┗━━━━━ SQL [ delete from eam_c_cust_inspect_user_s where owner_id= :PARAM_1 ] ━━━━━ 

15:00:03.012 [FWS_Worker-1] - [701447015728414720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select delete_time , create_time , executed , version , create_by , update_tim... ] ━━━━━ 
┣ 语句：select delete_time , create_time , executed , version , create_by , update_time , deleted , delete_by , execute_time , id , update_by , plan_id , errors from eam_c_cust_inspect_log t WHERE plan_id= ? and executed!=1 AND t.deleted= ?
┣ 参数：{"PARAM_1":"696736099719970816","PARAM_2":0}
┣ 执行：select delete_time , create_time , executed , version , create_by , update_time , deleted , delete_by , execute_time , id , update_by , plan_id , errors from eam_c_cust_inspect_log t WHERE plan_id= '696736099719970816' and executed!=1 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1681974002971
┣━ 返回：RcdSet,size=1
┣ TID：701447015728414720
┗━━━━━ SQL [ select delete_time , create_time , executed , version , create_by , update_tim... ] ━━━━━ 

15:01:59.171 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：62ms , start = 1681974119108
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:01:59.172 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:02:59.103 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,283] - start to collect node data.
15:03:00.259 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,317] - cpu info,sys:0.05,usr:0.17wio:0,idle0.79
15:03:00.374 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701447768413044736","PARAM_9":0.74,"PARAM_8":12767854592,"PARAM_10":1681974180260,"PARAM_7":0,"PARAM_11":1,"PARAM_6":0.79,"PARAM_5":0.05,"PARAM_4":0.17,"PARAM_3":"127.0.0.1","PARAM_2":"lankLdeMacBook-Pro.local"}
┣ 执行：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( '701447768413044736' , 'lankLdeMacBook-Pro.local' , '127.0.0.1' , 0.17 , 0.05 , 0.79 , 0 , 12767854592 , 0.74 , str_to_date('2023-04-20 15:03:00','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：113ms , start = 1681974180260
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 

15:03:59.146 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：35ms , start = 1681974239110
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:03:59.147 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:05:59.143 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：34ms , start = 1681974359107
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:05:59.145 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:07:59.160 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：51ms , start = 1681974479108
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:07:59.162 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:07:59.162 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,283] - start to collect node data.
15:08:00.364 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,317] - cpu info,sys:0.04,usr:0.14wio:0,idle0.83
15:08:00.416 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701449027148840960","PARAM_9":0.74,"PARAM_8":12786794496,"PARAM_10":1681974480365,"PARAM_7":0,"PARAM_11":1,"PARAM_6":0.83,"PARAM_5":0.04,"PARAM_4":0.14,"PARAM_3":"127.0.0.1","PARAM_2":"lankLdeMacBook-Pro.local"}
┣ 执行：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( '701449027148840960' , 'lankLdeMacBook-Pro.local' , '127.0.0.1' , 0.14 , 0.04 , 0.83 , 0 , 12786794496 , 0.74 , str_to_date('2023-04-20 15:08:00','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：50ms , start = 1681974480365
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 

15:09:59.197 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：83ms , start = 1681974599112
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:09:59.198 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:11:59.148 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：35ms , start = 1681974719112
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:11:59.148 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:12:59.114 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,283] - start to collect node data.
15:13:00.261 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,317] - cpu info,sys:0.07,usr:0.2wio:0,idle0.72
15:13:00.381 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701450285008027648","PARAM_9":0.74,"PARAM_8":12773670912,"PARAM_10":1681974780262,"PARAM_7":0,"PARAM_11":1,"PARAM_6":0.72,"PARAM_5":0.07,"PARAM_4":0.2,"PARAM_3":"127.0.0.1","PARAM_2":"lankLdeMacBook-Pro.local"}
┣ 执行：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( '701450285008027648' , 'lankLdeMacBook-Pro.local' , '127.0.0.1' , 0.2 , 0.07 , 0.72 , 0 , 12773670912 , 0.74 , str_to_date('2023-04-20 15:13:00','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：118ms , start = 1681974780262
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 

15:13:59.202 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：85ms , start = 1681974839115
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:13:59.203 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:15:59.186 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：63ms , start = 1681974959122
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:15:59.186 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:17:59.168 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：47ms , start = 1681975079119
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:17:59.169 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:17:59.170 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,283] - start to collect node data.
15:18:00.300 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,317] - cpu info,sys:0.04,usr:0.14wio:0,idle0.82
15:18:00.388 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701451543462805504","PARAM_9":0.75,"PARAM_8":12911263744,"PARAM_10":1681975080301,"PARAM_7":0,"PARAM_11":1,"PARAM_6":0.82,"PARAM_5":0.04,"PARAM_4":0.14,"PARAM_3":"127.0.0.1","PARAM_2":"lankLdeMacBook-Pro.local"}
┣ 执行：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( '701451543462805504' , 'lankLdeMacBook-Pro.local' , '127.0.0.1' , 0.14 , 0.04 , 0.82 , 0 , 12911263744 , 0.75 , str_to_date('2023-04-20 15:18:00','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：85ms , start = 1681975080302
┣━ 返回：java.lang.Integer
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 

15:19:59.176 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ 结果： 
┣━ 耗时：54ms , start = 1681975199121
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:19:59.177 [scheduling-1] - [] - INFO  c.d.p.o.s.i.DbBackupLogServiceImpl - [parseLog,97] - 本次处理数据量:0
15:32:19.753 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:32:19.781 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 4, maxActive 128, creating 1, createElapseMillis 2417, createErrorCount 1
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 4, maxActive 128, creating 1, createElapseMillis 2417, createErrorCount 1
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:19.804 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 4, maxActive 128, creating 1, createElapseMillis 2440, createErrorCount 1
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 4, maxActive 128, creating 1, createElapseMillis 2440, createErrorCount 1
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:25.790 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3914, createErrorCount 2
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3914, createErrorCount 2
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:25.811 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3937, createErrorCount 2
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3937, createErrorCount 2
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:26.529 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 141, createErrorCount 3
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 141, createErrorCount 3
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:31.803 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 901, createErrorCount 4
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 901, createErrorCount 4
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:31.821 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 921, createErrorCount 4
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 921, createErrorCount 4
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:37.814 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2395, createErrorCount 5
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2395, createErrorCount 5
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:37.827 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2409, createErrorCount 5
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2409, createErrorCount 5
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:43.824 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3896, createErrorCount 6
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3896, createErrorCount 6
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:43.835 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3908, createErrorCount 6
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3908, createErrorCount 6
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:49.836 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 871, createErrorCount 8
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 871, createErrorCount 8
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:49.845 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 882, createErrorCount 8
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 882, createErrorCount 8
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:55.851 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2368, createErrorCount 9
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2368, createErrorCount 9
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:55.854 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2375, createErrorCount 9
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2375, createErrorCount 9
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:32:56.526 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3046, createErrorCount 9
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3046, createErrorCount 9
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:01.863 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3868, createErrorCount 10
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3868, createErrorCount 10
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:01.865 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3874, createErrorCount 10
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3874, createErrorCount 10
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:07.876 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 862, createErrorCount 12
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 862, createErrorCount 12
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:07.877 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 861, createErrorCount 12
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 861, createErrorCount 12
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:13.743 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,283] - start to collect node data.
15:33:13.887 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2355, createErrorCount 13
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2355, createErrorCount 13
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:13.887 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2355, createErrorCount 13
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2355, createErrorCount 13
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:14.752 [scheduling-1] - [] - INFO  c.d.p.c.s.i.NodeLoadServiceImpl - [collectData,317] - cpu info,sys:0.07,usr:0.2wio:0,idle0.73
15:33:19.899 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3851, createErrorCount 14
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3851, createErrorCount 14
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:19.899 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3852, createErrorCount 14
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3852, createErrorCount 14
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:20.760 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 
┣ 语句：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"701455378948292608","PARAM_9":0.74,"PARAM_8":12768002048,"PARAM_10":1681975994752,"PARAM_7":0,"PARAM_11":1,"PARAM_6":0.73,"PARAM_5":0.07,"PARAM_4":0.2,"PARAM_3":"127.0.0.1","PARAM_2":"lankLdeMacBook-Pro.local"}
┣ 执行：INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_used , memory_used_pct , create_time , version ) VALUES ( '701455378948292608' , 'lankLdeMacBook-Pro.local' , '127.0.0.1' , 0.2 , 0.07 , 0.73 , 0 , 12768002048 , 0.74 , str_to_date('2023-04-20 15:33:14','%Y-%m-%d %H:%i:%s') , 1 )
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_node_load ( id , node , ip , user , sys , idle , wio , memory_... ] ━━━━━ 

15:33:20.764 [scheduling-1] - [] - INFO  c.g.f.c.log.Logger - [insert,655] - 数据插入异常 , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 199, createErrorCount 15
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO$6.actualExecute(SpringDAO.java:483)
	at com.github.foxnic.dao.spring.SpringDAO$6.actualExecute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SQLPrinter.execute(SQLPrinter.java:50)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:485)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:420)
	at com.github.foxnic.dao.spring.SpringDAO.insertEntity(SpringDAO.java:2000)
	at com.github.foxnic.dao.spring.SpringDAO.insertEntity(SpringDAO.java:1904)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.insertEntity(<generated>)
	at com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:620)
	at com.dt.platform.common.service.impl.NodeLoadServiceImpl.insert(NodeLoadServiceImpl.java:355)
	at com.dt.platform.common.service.impl.NodeLoadServiceImpl.insert(NodeLoadServiceImpl.java:368)
	at com.dt.platform.common.service.impl.NodeLoadServiceImpl.collectData(NodeLoadServiceImpl.java:326)
	at com.dt.platform.common.service.impl.NodeLoadServiceImpl$$FastClassBySpringCGLIB$$145db651.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.dt.platform.common.service.impl.NodeLoadServiceImpl$$EnhancerBySpringCGLIB$$9c37fab9.collectData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 199, createErrorCount 15
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 37 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:25.908 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 832, createErrorCount 16
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 832, createErrorCount 16
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:25.912 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 837, createErrorCount 16
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 837, createErrorCount 16
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:26.524 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1449, createErrorCount 16
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1449, createErrorCount 16
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:31.918 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2323, createErrorCount 17
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2323, createErrorCount 17
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:31.918 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2323, createErrorCount 17
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2323, createErrorCount 17
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:37.927 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3817, createErrorCount 18
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3817, createErrorCount 18
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:37.930 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3821, createErrorCount 18
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3821, createErrorCount 18
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:43.932 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 791, createErrorCount 20
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 791, createErrorCount 20
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:43.940 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 799, createErrorCount 20
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 799, createErrorCount 20
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:49.944 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2285, createErrorCount 21
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2285, createErrorCount 21
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:49.951 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2293, createErrorCount 21
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2293, createErrorCount 21
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:55.960 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3787, createErrorCount 22
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3787, createErrorCount 22
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:55.963 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3793, createErrorCount 22
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3793, createErrorCount 22
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:33:56.527 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 0, createErrorCount 23
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 0, createErrorCount 23
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:01.973 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 781, createErrorCount 24
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 781, createErrorCount 24
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:01.974 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 782, createErrorCount 24
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 782, createErrorCount 24
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:07.985 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2281, createErrorCount 25
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2281, createErrorCount 25
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:07.986 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2282, createErrorCount 25
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2282, createErrorCount 25
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:14.000 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3778, createErrorCount 26
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3778, createErrorCount 26
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:14.000 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3779, createErrorCount 26
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3779, createErrorCount 26
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:19.753 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:34:20.007 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 753, createErrorCount 28
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 753, createErrorCount 28
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:20.014 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 759, createErrorCount 28
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 759, createErrorCount 28
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:26.017 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2247, createErrorCount 29
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2247, createErrorCount 29
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:26.022 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2253, createErrorCount 29
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2253, createErrorCount 29
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:26.529 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2755, createErrorCount 29
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2755, createErrorCount 29
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:32.030 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3742, createErrorCount 30
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3742, createErrorCount 30
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:32.031 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3743, createErrorCount 30
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3743, createErrorCount 30
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:38.042 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 722, createErrorCount 32
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 722, createErrorCount 32
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:38.043 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 722, createErrorCount 32
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 722, createErrorCount 32
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:44.051 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2214, createErrorCount 33
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2214, createErrorCount 33
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:44.053 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2217, createErrorCount 33
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2217, createErrorCount 33
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:50.063 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3704, createErrorCount 34
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3704, createErrorCount 34
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:50.065 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3707, createErrorCount 34
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3707, createErrorCount 34
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:56.074 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 688, createErrorCount 36
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 688, createErrorCount 36
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:56.076 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 691, createErrorCount 36
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 691, createErrorCount 36
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:34:56.524 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1139, createErrorCount 36
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1139, createErrorCount 36
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:02.082 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2181, createErrorCount 37
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2181, createErrorCount 37
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:02.088 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2188, createErrorCount 37
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2188, createErrorCount 37
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:08.088 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3675, createErrorCount 38
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3675, createErrorCount 38
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:08.099 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3685, createErrorCount 38
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3685, createErrorCount 38
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:14.101 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 657, createErrorCount 40
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 657, createErrorCount 40
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:14.108 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 665, createErrorCount 40
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 665, createErrorCount 40
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:20.110 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2154, createErrorCount 41
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2154, createErrorCount 41
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:20.115 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2160, createErrorCount 41
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2160, createErrorCount 41
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:26.122 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3646, createErrorCount 42
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3646, createErrorCount 42
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:26.123 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3648, createErrorCount 42
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3648, createErrorCount 42
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:26.528 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 0, createErrorCount 43
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 0, createErrorCount 43
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:32.133 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 624, createErrorCount 44
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 624, createErrorCount 44
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:32.133 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 624, createErrorCount 44
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 624, createErrorCount 44
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:38.139 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2115, createErrorCount 45
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2115, createErrorCount 45
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:38.140 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2117, createErrorCount 45
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2117, createErrorCount 45
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:44.150 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3610, createErrorCount 46
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3610, createErrorCount 46
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:44.153 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3610, createErrorCount 46
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3610, createErrorCount 46
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:50.165 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 588, createErrorCount 48
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 588, createErrorCount 48
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:50.166 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 588, createErrorCount 48
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 588, createErrorCount 48
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:56.177 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2083, createErrorCount 49
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2083, createErrorCount 49
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:56.177 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2081, createErrorCount 49
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2081, createErrorCount 49
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:35:56.529 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2434, createErrorCount 49
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2434, createErrorCount 49
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:02.185 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3573, createErrorCount 50
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3573, createErrorCount 50
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:02.185 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3574, createErrorCount 50
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3574, createErrorCount 50
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:08.201 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 550, createErrorCount 52
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 550, createErrorCount 52
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:08.203 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 550, createErrorCount 52
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 550, createErrorCount 52
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:14.211 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2044, createErrorCount 53
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2044, createErrorCount 53
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:14.224 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2058, createErrorCount 53
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2058, createErrorCount 53
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:19.755 [scheduling-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 
┣ 语句：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= ? ) AND ( t.processed = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"not_processed"}
┣ 执行：select t.* from ops_db_backup_log t WHERE ( ( t.deleted= 0 ) AND ( t.processed = 'not_processed' ))
┣ TID：null
┗━━━━━ SQL [ select t.* from ops_db_backup_log t WHERE ( ( t.deleted= :PARAM_1 ) AND ( t.pr... ] ━━━━━ 

15:36:20.220 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3541, createErrorCount 54
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3541, createErrorCount 54
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:20.233 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3553, createErrorCount 54
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3553, createErrorCount 54
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:26.233 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 529, createErrorCount 56
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 529, createErrorCount 56
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:26.242 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 541, createErrorCount 56
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 541, createErrorCount 56
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:26.530 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 829, createErrorCount 56
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 829, createErrorCount 56
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 20 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:32.241 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2026, createErrorCount 57
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2026, createErrorCount 57
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:32.252 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2036, createErrorCount 57
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2036, createErrorCount 57
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:38.252 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3522, createErrorCount 58
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3522, createErrorCount 58
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:38.259 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3530, createErrorCount 58
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3530, createErrorCount 58
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:44.266 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 509, createErrorCount 60
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 509, createErrorCount 60
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:44.270 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 515, createErrorCount 60
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 515, createErrorCount 60
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:50.273 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2001, createErrorCount 61
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2001, createErrorCount 61
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:50.281 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2010, createErrorCount 61
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2010, createErrorCount 61
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1763)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.GeneratedConstructorAccessor109.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2095)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2020)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.GeneratedConstructorAccessor106.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1682)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1774)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2835)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor108.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:403)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:335)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2187)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2036)
	... 12 more
Caused by: java.net.ConnectException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:613)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:299)
	... 14 more

15:36:54.594 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceDisableException
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:295)
	at com.github.foxnic.dao.spring.SpringDAO.query(SpringDAO.java:765)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.query(<generated>)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.doBatchTranslate(LangServiceImpl.java:109)
	at org.github.foxnic.web.system.service.impl.LangServiceImpl.lambda$init$1(LangServiceImpl.java:102)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceDisableException
	at com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:280)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:214)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)

15:36:54.594 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceDisableException
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceDisableException
	at com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:280)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:214)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)

15:36:54.594 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceDisableException
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceDisableException
	at com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:280)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:214)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)

15:36:54.596 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1564)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more

15:36:54.596 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1564)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more

15:36:54.596 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1564)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more

15:36:54.596 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1564)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more

15:36:54.597 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1564)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more

15:36:54.597 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1564)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more

15:36:54.597 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [isTableExists,917] - isTableExists , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:700)
	at com.github.foxnic.dao.spring.MySqlDAO.getPageSet(MySqlDAO.java:107)
	at com.github.foxnic.dao.spring.SpringDAO.queryPageWithArrayParameters(SpringDAO.java:273)
	at com.github.foxnic.dao.spring.SpringDAO.queryRecord(SpringDAO.java:801)
	at com.github.foxnic.dao.spring.SpringDAO.queryObject(SpringDAO.java:956)
	at com.github.foxnic.dao.spring.SpringDAO.queryInteger(SpringDAO.java:993)
	at com.github.foxnic.dao.spring.SpringDAO.isTableExists(SpringDAO.java:910)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.isTableExists(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:76)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1564)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 25 more

15:36:54.597 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,90] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:488)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$93a4b000.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:251)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:267)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Apr 20 15:36:54 CST 2023
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1564)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1417)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1387)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:80)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more

